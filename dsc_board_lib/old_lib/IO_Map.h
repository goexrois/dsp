/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : IO_Map.H
**     Project   : Proj1
**     Processor : 56F8037
**     Component : IO_Map
**     Version   : Driver 01.00
**     Compiler  : Metrowerks DSP C Compiler
**     Date/Time : 18/12/2011, 09:31 p.m.
**     Abstract  :
**         IO_Map.h - implements an IO device's mapping. 
**         This module contains symbol definitions of all peripheral 
**         registers and bits. 
**     Settings  :
**
**     Contents  :
**         No public methods
**
**     Copyright : 1997 - 2009 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __IO_Map_H
#define __IO_Map_H

/* Based on CPU DB 56F8037, version 2.87.240 (RegistersPrg V2.09) */
/* DataSheet : Blue_SS_Version_0_1 */

#include "PE_Types.h"

/******************************************
*** Peripheral TMRA0
*******************************************/
typedef volatile struct {
  /*** TMRA0_COMP1 - Timer A Channel 0 Compare Register #1; 0x0000F000 ***/
  union {
    word Word;
  } TMRA0_COMP1_STR;
  
  #define TMRA0_COMP1                   (*((volatile word *)0x0000F000))


  /*** TMRA0_COMP2 - Timer A Channel 0 Compare Register #2; 0x0000F001 ***/
  union {
    word Word;
  } TMRA0_COMP2_STR;
  
  #define TMRA0_COMP2                   (*((volatile word *)0x0000F001))


  /*** TMRA0_CAPT - Timer A Channel 0 Capture Register; 0x0000F002 ***/
  union {
    word Word;
  } TMRA0_CAPT_STR;
  
  #define TMRA0_CAPT                    (*((volatile word *)0x0000F002))


  /*** TMRA0_LOAD - Timer A Channel 0 Load Register; 0x0000F003 ***/
  union {
    word Word;
  } TMRA0_LOAD_STR;
  
  #define TMRA0_LOAD_LOAD0_MASK         0x01U
  #define TMRA0_LOAD_LOAD1_MASK         0x02U
  #define TMRA0_LOAD_LOAD2_MASK         0x04U
  #define TMRA0_LOAD_LOAD3_MASK         0x08U
  #define TMRA0_LOAD_LOAD4_MASK         0x10U
  #define TMRA0_LOAD_LOAD5_MASK         0x20U
  #define TMRA0_LOAD_LOAD6_MASK         0x40U
  #define TMRA0_LOAD_LOAD7_MASK         0x80U
  #define TMRA0_LOAD_LOAD8_MASK         0x0100U
  #define TMRA0_LOAD_LOAD9_MASK         0x0200U
  #define TMRA0_LOAD_LOAD10_MASK        0x0400U
  #define TMRA0_LOAD_LOAD11_MASK        0x0800U
  #define TMRA0_LOAD_LOAD12_MASK        0x1000U
  #define TMRA0_LOAD_LOAD13_MASK        0x2000U
  #define TMRA0_LOAD_LOAD14_MASK        0x4000U
  #define TMRA0_LOAD_LOAD15_MASK        0x8000U
  #define TMRA0_LOAD                    (*((volatile word *)0x0000F003))


  /*** TMRA0_HOLD - Timer A Channel 0 Hold Register; 0x0000F004 ***/
  union {
    word Word;
  } TMRA0_HOLD_STR;
  
  #define TMRA0_HOLD_HOLD0_MASK         0x01U
  #define TMRA0_HOLD_HOLD1_MASK         0x02U
  #define TMRA0_HOLD_HOLD2_MASK         0x04U
  #define TMRA0_HOLD_HOLD3_MASK         0x08U
  #define TMRA0_HOLD_HOLD4_MASK         0x10U
  #define TMRA0_HOLD_HOLD5_MASK         0x20U
  #define TMRA0_HOLD_HOLD6_MASK         0x40U
  #define TMRA0_HOLD_HOLD7_MASK         0x80U
  #define TMRA0_HOLD_HOLD8_MASK         0x0100U
  #define TMRA0_HOLD_HOLD9_MASK         0x0200U
  #define TMRA0_HOLD_HOLD10_MASK        0x0400U
  #define TMRA0_HOLD_HOLD11_MASK        0x0800U
  #define TMRA0_HOLD_HOLD12_MASK        0x1000U
  #define TMRA0_HOLD_HOLD13_MASK        0x2000U
  #define TMRA0_HOLD_HOLD14_MASK        0x4000U
  #define TMRA0_HOLD_HOLD15_MASK        0x8000U
  #define TMRA0_HOLD                    (*((volatile word *)0x0000F004))


  /*** TMRA0_CNTR - Timer A Channel 0 Counter Register; 0x0000F005 ***/
  union {
    word Word;
  } TMRA0_CNTR_STR;
  
  #define TMRA0_CNTR                    (*((volatile word *)0x0000F005))


  /*** TMRA0_CTRL - Timer A Channel 0 Control Register; 0x0000F006 ***/
  union {
    word Word;
  } TMRA0_CTRL_STR;
  
  #define TMRA0_CTRL_OM0_MASK           0x01U
  #define TMRA0_CTRL_OM1_MASK           0x02U
  #define TMRA0_CTRL_OM2_MASK           0x04U
  #define TMRA0_CTRL_Co_INIT_MASK       0x08U
  #define TMRA0_CTRL_DIR_MASK           0x10U
  #define TMRA0_CTRL_LENGTH_MASK        0x20U
  #define TMRA0_CTRL_ONCE_MASK          0x40U
  #define TMRA0_CTRL_SCS0_MASK          0x80U
  #define TMRA0_CTRL_SCS1_MASK          0x0100U
  #define TMRA0_CTRL_PCS0_MASK          0x0200U
  #define TMRA0_CTRL_PCS1_MASK          0x0400U
  #define TMRA0_CTRL_PCS2_MASK          0x0800U
  #define TMRA0_CTRL_PCS3_MASK          0x1000U
  #define TMRA0_CTRL_CM0_MASK           0x2000U
  #define TMRA0_CTRL_CM1_MASK           0x4000U
  #define TMRA0_CTRL_CM2_MASK           0x8000U
  #define TMRA0_CTRL_OM_MASK            0x07U
  #define TMRA0_CTRL_OM_BITNUM          0x00U
  #define TMRA0_CTRL_SCS_MASK           0x0180U
  #define TMRA0_CTRL_SCS_BITNUM         0x07U
  #define TMRA0_CTRL_PCS_MASK           0x1E00U
  #define TMRA0_CTRL_PCS_BITNUM         0x09U
  #define TMRA0_CTRL_CM_MASK            0xE000U
  #define TMRA0_CTRL_CM_BITNUM          0x0DU
  #define TMRA0_CTRL                    (*((volatile word *)0x0000F006))


  /*** TMRA0_SCTRL - Timer A Channel 0 Status and Control Register; 0x0000F007 ***/
  union {
    word Word;
  } TMRA0_SCTRL_STR;
  
  #define TMRA0_SCTRL_OEN_MASK          0x01U
  #define TMRA0_SCTRL_OPS_MASK          0x02U
  #define TMRA0_SCTRL_FORCE_MASK        0x04U
  #define TMRA0_SCTRL_VAL_MASK          0x08U
  #define TMRA0_SCTRL_EEOF_MASK         0x10U
  #define TMRA0_SCTRL_MSTR_MASK         0x20U
  #define TMRA0_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRA0_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRA0_SCTRL_INPUT_MASK        0x0100U
  #define TMRA0_SCTRL_IPS_MASK          0x0200U
  #define TMRA0_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA0_SCTRL_IEF_MASK          0x0800U
  #define TMRA0_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA0_SCTRL_TOF_MASK          0x2000U
  #define TMRA0_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA0_SCTRL_TCF_MASK          0x8000U
  #define TMRA0_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRA0_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRA0_SCTRL                   (*((volatile word *)0x0000F007))


  /*** TMRA0_CMPLD1 - Timer A Channel 0 Comparator Load Register 1; 0x0000F008 ***/
  union {
    word Word;
  } TMRA0_CMPLD1_STR;
  
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA0_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA0_CMPLD1                  (*((volatile word *)0x0000F008))


  /*** TMRA0_CMPLD2 - Timer A Channel 0 Comparator Load Register 2; 0x0000F009 ***/
  union {
    word Word;
  } TMRA0_CMPLD2_STR;
  
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA0_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA0_CMPLD2                  (*((volatile word *)0x0000F009))


  /*** TMRA0_CSCTRL - Timer A Channel 0 Comparator Status and Control Register; 0x0000F00A ***/
  union {
    word Word;
  } TMRA0_CSCTRL_STR;
  
  #define TMRA0_CSCTRL_CL10_MASK        0x01U
  #define TMRA0_CSCTRL_CL11_MASK        0x02U
  #define TMRA0_CSCTRL_CL20_MASK        0x04U
  #define TMRA0_CSCTRL_CL21_MASK        0x08U
  #define TMRA0_CSCTRL_TCF1_MASK        0x10U
  #define TMRA0_CSCTRL_TCF2_MASK        0x20U
  #define TMRA0_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA0_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA0_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA0_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA0_CSCTRL_CL1_MASK         0x03U
  #define TMRA0_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA0_CSCTRL_CL2_MASK         0x0CU
  #define TMRA0_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA0_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA0_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA0_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA0_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA0_CSCTRL                  (*((volatile word *)0x0000F00A))


  /*** TMRA0_FILT - Timer A Channel 0 Input Filter Register; 0x0000F00B ***/
  union {
    word Word;
  } TMRA0_FILT_STR;
  
  #define TMRA0_FILT_FILT_PER0_MASK     0x01U
  #define TMRA0_FILT_FILT_PER1_MASK     0x02U
  #define TMRA0_FILT_FILT_PER2_MASK     0x04U
  #define TMRA0_FILT_FILT_PER3_MASK     0x08U
  #define TMRA0_FILT_FILT_PER4_MASK     0x10U
  #define TMRA0_FILT_FILT_PER5_MASK     0x20U
  #define TMRA0_FILT_FILT_PER6_MASK     0x40U
  #define TMRA0_FILT_FILT_PER7_MASK     0x80U
  #define TMRA0_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA0_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA0_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA0_FILT_FILT_PER_MASK      0xFFU
  #define TMRA0_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA0_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA0_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA0_FILT                    (*((volatile word *)0x0000F00B))


  word Reserved0[3];                   /* Reserved (unused) registers */
  
  /*** TMRA_ENBL - Timer A Channel Enable Register; 0x0000F00F ***/
  union {
    word Word;
  } TMRA_ENBL_STR;
  
  #define TMRA_ENBL_ENBL0_MASK          0x01U
  #define TMRA_ENBL_ENBL1_MASK          0x02U
  #define TMRA_ENBL_ENBL2_MASK          0x04U
  #define TMRA_ENBL_ENBL3_MASK          0x08U
  #define TMRA_ENBL_ENBL_MASK           0x0FU
  #define TMRA_ENBL_ENBL_BITNUM         0x00U
  #define TMRA_ENBL                     (*((volatile word *)0x0000F00F))


} TMRA0_PRPH;

/******************************************
*** Peripheral TMRA1
*******************************************/
typedef volatile struct {
  /*** TMRA1_COMP1 - Timer A Channel 1 Compare Register #1; 0x0000F010 ***/
  union {
    word Word;
  } TMRA1_COMP1_STR;
  
  #define TMRA1_COMP1                   (*((volatile word *)0x0000F010))


  /*** TMRA1_COMP2 - Timer A Channel 1 Compare Register #2; 0x0000F011 ***/
  union {
    word Word;
  } TMRA1_COMP2_STR;
  
  #define TMRA1_COMP2                   (*((volatile word *)0x0000F011))


  /*** TMRA1_CAPT - Timer A Channel 1 Capture Register; 0x0000F012 ***/
  union {
    word Word;
  } TMRA1_CAPT_STR;
  
  #define TMRA1_CAPT                    (*((volatile word *)0x0000F012))


  /*** TMRA1_LOAD - Timer A Channel 1 Load Register; 0x0000F013 ***/
  union {
    word Word;
  } TMRA1_LOAD_STR;
  
  #define TMRA1_LOAD_LOAD0_MASK         0x01U
  #define TMRA1_LOAD_LOAD1_MASK         0x02U
  #define TMRA1_LOAD_LOAD2_MASK         0x04U
  #define TMRA1_LOAD_LOAD3_MASK         0x08U
  #define TMRA1_LOAD_LOAD4_MASK         0x10U
  #define TMRA1_LOAD_LOAD5_MASK         0x20U
  #define TMRA1_LOAD_LOAD6_MASK         0x40U
  #define TMRA1_LOAD_LOAD7_MASK         0x80U
  #define TMRA1_LOAD_LOAD8_MASK         0x0100U
  #define TMRA1_LOAD_LOAD9_MASK         0x0200U
  #define TMRA1_LOAD_LOAD10_MASK        0x0400U
  #define TMRA1_LOAD_LOAD11_MASK        0x0800U
  #define TMRA1_LOAD_LOAD12_MASK        0x1000U
  #define TMRA1_LOAD_LOAD13_MASK        0x2000U
  #define TMRA1_LOAD_LOAD14_MASK        0x4000U
  #define TMRA1_LOAD_LOAD15_MASK        0x8000U
  #define TMRA1_LOAD                    (*((volatile word *)0x0000F013))


  /*** TMRA1_HOLD - Timer A Channel 1 Hold Register; 0x0000F014 ***/
  union {
    word Word;
  } TMRA1_HOLD_STR;
  
  #define TMRA1_HOLD_HOLD0_MASK         0x01U
  #define TMRA1_HOLD_HOLD1_MASK         0x02U
  #define TMRA1_HOLD_HOLD2_MASK         0x04U
  #define TMRA1_HOLD_HOLD3_MASK         0x08U
  #define TMRA1_HOLD_HOLD4_MASK         0x10U
  #define TMRA1_HOLD_HOLD5_MASK         0x20U
  #define TMRA1_HOLD_HOLD6_MASK         0x40U
  #define TMRA1_HOLD_HOLD7_MASK         0x80U
  #define TMRA1_HOLD_HOLD8_MASK         0x0100U
  #define TMRA1_HOLD_HOLD9_MASK         0x0200U
  #define TMRA1_HOLD_HOLD10_MASK        0x0400U
  #define TMRA1_HOLD_HOLD11_MASK        0x0800U
  #define TMRA1_HOLD_HOLD12_MASK        0x1000U
  #define TMRA1_HOLD_HOLD13_MASK        0x2000U
  #define TMRA1_HOLD_HOLD14_MASK        0x4000U
  #define TMRA1_HOLD_HOLD15_MASK        0x8000U
  #define TMRA1_HOLD                    (*((volatile word *)0x0000F014))


  /*** TMRA1_CNTR - Timer A Channel 1 Counter Register; 0x0000F015 ***/
  union {
    word Word;
  } TMRA1_CNTR_STR;
  
  #define TMRA1_CNTR                    (*((volatile word *)0x0000F015))


  /*** TMRA1_CTRL - Timer A Channel 1 Control Register; 0x0000F016 ***/
  union {
    word Word;
  } TMRA1_CTRL_STR;
  
  #define TMRA1_CTRL_OM0_MASK           0x01U
  #define TMRA1_CTRL_OM1_MASK           0x02U
  #define TMRA1_CTRL_OM2_MASK           0x04U
  #define TMRA1_CTRL_Co_INIT_MASK       0x08U
  #define TMRA1_CTRL_DIR_MASK           0x10U
  #define TMRA1_CTRL_LENGTH_MASK        0x20U
  #define TMRA1_CTRL_ONCE_MASK          0x40U
  #define TMRA1_CTRL_SCS0_MASK          0x80U
  #define TMRA1_CTRL_SCS1_MASK          0x0100U
  #define TMRA1_CTRL_PCS0_MASK          0x0200U
  #define TMRA1_CTRL_PCS1_MASK          0x0400U
  #define TMRA1_CTRL_PCS2_MASK          0x0800U
  #define TMRA1_CTRL_PCS3_MASK          0x1000U
  #define TMRA1_CTRL_CM0_MASK           0x2000U
  #define TMRA1_CTRL_CM1_MASK           0x4000U
  #define TMRA1_CTRL_CM2_MASK           0x8000U
  #define TMRA1_CTRL_OM_MASK            0x07U
  #define TMRA1_CTRL_OM_BITNUM          0x00U
  #define TMRA1_CTRL_SCS_MASK           0x0180U
  #define TMRA1_CTRL_SCS_BITNUM         0x07U
  #define TMRA1_CTRL_PCS_MASK           0x1E00U
  #define TMRA1_CTRL_PCS_BITNUM         0x09U
  #define TMRA1_CTRL_CM_MASK            0xE000U
  #define TMRA1_CTRL_CM_BITNUM          0x0DU
  #define TMRA1_CTRL                    (*((volatile word *)0x0000F016))


  /*** TMRA1_SCTRL - Timer A Channel 1 Status and Control Register; 0x0000F017 ***/
  union {
    word Word;
  } TMRA1_SCTRL_STR;
  
  #define TMRA1_SCTRL_OEN_MASK          0x01U
  #define TMRA1_SCTRL_OPS_MASK          0x02U
  #define TMRA1_SCTRL_FORCE_MASK        0x04U
  #define TMRA1_SCTRL_VAL_MASK          0x08U
  #define TMRA1_SCTRL_EEOF_MASK         0x10U
  #define TMRA1_SCTRL_MSTR_MASK         0x20U
  #define TMRA1_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRA1_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRA1_SCTRL_INPUT_MASK        0x0100U
  #define TMRA1_SCTRL_IPS_MASK          0x0200U
  #define TMRA1_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA1_SCTRL_IEF_MASK          0x0800U
  #define TMRA1_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA1_SCTRL_TOF_MASK          0x2000U
  #define TMRA1_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA1_SCTRL_TCF_MASK          0x8000U
  #define TMRA1_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRA1_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRA1_SCTRL                   (*((volatile word *)0x0000F017))


  /*** TMRA1_CMPLD1 - Timer A Channel 1 Comparator Load Register 1; 0x0000F018 ***/
  union {
    word Word;
  } TMRA1_CMPLD1_STR;
  
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA1_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA1_CMPLD1                  (*((volatile word *)0x0000F018))


  /*** TMRA1_CMPLD2 - Timer A Channel 1 Comparator Load Register 2; 0x0000F019 ***/
  union {
    word Word;
  } TMRA1_CMPLD2_STR;
  
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA1_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA1_CMPLD2                  (*((volatile word *)0x0000F019))


  /*** TMRA1_CSCTRL - Timer A Channel 1 Comparator Status and Control Register; 0x0000F01A ***/
  union {
    word Word;
  } TMRA1_CSCTRL_STR;
  
  #define TMRA1_CSCTRL_CL10_MASK        0x01U
  #define TMRA1_CSCTRL_CL11_MASK        0x02U
  #define TMRA1_CSCTRL_CL20_MASK        0x04U
  #define TMRA1_CSCTRL_CL21_MASK        0x08U
  #define TMRA1_CSCTRL_TCF1_MASK        0x10U
  #define TMRA1_CSCTRL_TCF2_MASK        0x20U
  #define TMRA1_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA1_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA1_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA1_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA1_CSCTRL_CL1_MASK         0x03U
  #define TMRA1_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA1_CSCTRL_CL2_MASK         0x0CU
  #define TMRA1_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA1_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA1_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA1_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA1_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA1_CSCTRL                  (*((volatile word *)0x0000F01A))


  /*** TMRA1_FILT - Timer A Channel 1 Input Filter Register; 0x0000F01B ***/
  union {
    word Word;
  } TMRA1_FILT_STR;
  
  #define TMRA1_FILT_FILT_PER0_MASK     0x01U
  #define TMRA1_FILT_FILT_PER1_MASK     0x02U
  #define TMRA1_FILT_FILT_PER2_MASK     0x04U
  #define TMRA1_FILT_FILT_PER3_MASK     0x08U
  #define TMRA1_FILT_FILT_PER4_MASK     0x10U
  #define TMRA1_FILT_FILT_PER5_MASK     0x20U
  #define TMRA1_FILT_FILT_PER6_MASK     0x40U
  #define TMRA1_FILT_FILT_PER7_MASK     0x80U
  #define TMRA1_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA1_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA1_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA1_FILT_FILT_PER_MASK      0xFFU
  #define TMRA1_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA1_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA1_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA1_FILT                    (*((volatile word *)0x0000F01B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRA1_PRPH;

/******************************************
*** Peripheral TMRA2
*******************************************/
typedef volatile struct {
  /*** TMRA2_COMP1 - Timer A Channel 2 Compare Register #1; 0x0000F020 ***/
  union {
    word Word;
  } TMRA2_COMP1_STR;
  
  #define TMRA2_COMP1                   (*((volatile word *)0x0000F020))


  /*** TMRA2_COMP2 - Timer A Channel 2 Compare Register #2; 0x0000F021 ***/
  union {
    word Word;
  } TMRA2_COMP2_STR;
  
  #define TMRA2_COMP2                   (*((volatile word *)0x0000F021))


  /*** TMRA2_CAPT - Timer A Channel 2 Capture Register; 0x0000F022 ***/
  union {
    word Word;
  } TMRA2_CAPT_STR;
  
  #define TMRA2_CAPT                    (*((volatile word *)0x0000F022))


  /*** TMRA2_LOAD - Timer A Channel 2 Load Register; 0x0000F023 ***/
  union {
    word Word;
  } TMRA2_LOAD_STR;
  
  #define TMRA2_LOAD_LOAD0_MASK         0x01U
  #define TMRA2_LOAD_LOAD1_MASK         0x02U
  #define TMRA2_LOAD_LOAD2_MASK         0x04U
  #define TMRA2_LOAD_LOAD3_MASK         0x08U
  #define TMRA2_LOAD_LOAD4_MASK         0x10U
  #define TMRA2_LOAD_LOAD5_MASK         0x20U
  #define TMRA2_LOAD_LOAD6_MASK         0x40U
  #define TMRA2_LOAD_LOAD7_MASK         0x80U
  #define TMRA2_LOAD_LOAD8_MASK         0x0100U
  #define TMRA2_LOAD_LOAD9_MASK         0x0200U
  #define TMRA2_LOAD_LOAD10_MASK        0x0400U
  #define TMRA2_LOAD_LOAD11_MASK        0x0800U
  #define TMRA2_LOAD_LOAD12_MASK        0x1000U
  #define TMRA2_LOAD_LOAD13_MASK        0x2000U
  #define TMRA2_LOAD_LOAD14_MASK        0x4000U
  #define TMRA2_LOAD_LOAD15_MASK        0x8000U
  #define TMRA2_LOAD                    (*((volatile word *)0x0000F023))


  /*** TMRA2_HOLD - Timer A Channel 2 Hold Register; 0x0000F024 ***/
  union {
    word Word;
  } TMRA2_HOLD_STR;
  
  #define TMRA2_HOLD_HOLD0_MASK         0x01U
  #define TMRA2_HOLD_HOLD1_MASK         0x02U
  #define TMRA2_HOLD_HOLD2_MASK         0x04U
  #define TMRA2_HOLD_HOLD3_MASK         0x08U
  #define TMRA2_HOLD_HOLD4_MASK         0x10U
  #define TMRA2_HOLD_HOLD5_MASK         0x20U
  #define TMRA2_HOLD_HOLD6_MASK         0x40U
  #define TMRA2_HOLD_HOLD7_MASK         0x80U
  #define TMRA2_HOLD_HOLD8_MASK         0x0100U
  #define TMRA2_HOLD_HOLD9_MASK         0x0200U
  #define TMRA2_HOLD_HOLD10_MASK        0x0400U
  #define TMRA2_HOLD_HOLD11_MASK        0x0800U
  #define TMRA2_HOLD_HOLD12_MASK        0x1000U
  #define TMRA2_HOLD_HOLD13_MASK        0x2000U
  #define TMRA2_HOLD_HOLD14_MASK        0x4000U
  #define TMRA2_HOLD_HOLD15_MASK        0x8000U
  #define TMRA2_HOLD                    (*((volatile word *)0x0000F024))


  /*** TMRA2_CNTR - Timer A Channel 2 Counter Register; 0x0000F025 ***/
  union {
    word Word;
  } TMRA2_CNTR_STR;
  
  #define TMRA2_CNTR                    (*((volatile word *)0x0000F025))


  /*** TMRA2_CTRL - Timer A Channel 2 Control Register; 0x0000F026 ***/
  union {
    word Word;
  } TMRA2_CTRL_STR;
  
  #define TMRA2_CTRL_OM0_MASK           0x01U
  #define TMRA2_CTRL_OM1_MASK           0x02U
  #define TMRA2_CTRL_OM2_MASK           0x04U
  #define TMRA2_CTRL_Co_INIT_MASK       0x08U
  #define TMRA2_CTRL_DIR_MASK           0x10U
  #define TMRA2_CTRL_LENGTH_MASK        0x20U
  #define TMRA2_CTRL_ONCE_MASK          0x40U
  #define TMRA2_CTRL_SCS0_MASK          0x80U
  #define TMRA2_CTRL_SCS1_MASK          0x0100U
  #define TMRA2_CTRL_PCS0_MASK          0x0200U
  #define TMRA2_CTRL_PCS1_MASK          0x0400U
  #define TMRA2_CTRL_PCS2_MASK          0x0800U
  #define TMRA2_CTRL_PCS3_MASK          0x1000U
  #define TMRA2_CTRL_CM0_MASK           0x2000U
  #define TMRA2_CTRL_CM1_MASK           0x4000U
  #define TMRA2_CTRL_CM2_MASK           0x8000U
  #define TMRA2_CTRL_OM_MASK            0x07U
  #define TMRA2_CTRL_OM_BITNUM          0x00U
  #define TMRA2_CTRL_SCS_MASK           0x0180U
  #define TMRA2_CTRL_SCS_BITNUM         0x07U
  #define TMRA2_CTRL_PCS_MASK           0x1E00U
  #define TMRA2_CTRL_PCS_BITNUM         0x09U
  #define TMRA2_CTRL_CM_MASK            0xE000U
  #define TMRA2_CTRL_CM_BITNUM          0x0DU
  #define TMRA2_CTRL                    (*((volatile word *)0x0000F026))


  /*** TMRA2_SCTRL - Timer A Channel 2 Status and Control Register; 0x0000F027 ***/
  union {
    word Word;
  } TMRA2_SCTRL_STR;
  
  #define TMRA2_SCTRL_OEN_MASK          0x01U
  #define TMRA2_SCTRL_OPS_MASK          0x02U
  #define TMRA2_SCTRL_FORCE_MASK        0x04U
  #define TMRA2_SCTRL_VAL_MASK          0x08U
  #define TMRA2_SCTRL_EEOF_MASK         0x10U
  #define TMRA2_SCTRL_MSTR_MASK         0x20U
  #define TMRA2_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRA2_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRA2_SCTRL_INPUT_MASK        0x0100U
  #define TMRA2_SCTRL_IPS_MASK          0x0200U
  #define TMRA2_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA2_SCTRL_IEF_MASK          0x0800U
  #define TMRA2_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA2_SCTRL_TOF_MASK          0x2000U
  #define TMRA2_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA2_SCTRL_TCF_MASK          0x8000U
  #define TMRA2_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRA2_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRA2_SCTRL                   (*((volatile word *)0x0000F027))


  /*** TMRA2_CMPLD1 - Timer A Channel 2 Comparator Load Register 1; 0x0000F028 ***/
  union {
    word Word;
  } TMRA2_CMPLD1_STR;
  
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA2_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA2_CMPLD1                  (*((volatile word *)0x0000F028))


  /*** TMRA2_CMPLD2 - Timer A Channel 2 Comparator Load Register 2; 0x0000F029 ***/
  union {
    word Word;
  } TMRA2_CMPLD2_STR;
  
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA2_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA2_CMPLD2                  (*((volatile word *)0x0000F029))


  /*** TMRA2_CSCTRL - Timer A Channel 2 Comparator Status and Control Register; 0x0000F02A ***/
  union {
    word Word;
  } TMRA2_CSCTRL_STR;
  
  #define TMRA2_CSCTRL_CL10_MASK        0x01U
  #define TMRA2_CSCTRL_CL11_MASK        0x02U
  #define TMRA2_CSCTRL_CL20_MASK        0x04U
  #define TMRA2_CSCTRL_CL21_MASK        0x08U
  #define TMRA2_CSCTRL_TCF1_MASK        0x10U
  #define TMRA2_CSCTRL_TCF2_MASK        0x20U
  #define TMRA2_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA2_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA2_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA2_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA2_CSCTRL_CL1_MASK         0x03U
  #define TMRA2_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA2_CSCTRL_CL2_MASK         0x0CU
  #define TMRA2_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA2_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA2_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA2_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA2_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA2_CSCTRL                  (*((volatile word *)0x0000F02A))


  /*** TMRA2_FILT - Timer A Channel 2 Input Filter Register; 0x0000F02B ***/
  union {
    word Word;
  } TMRA2_FILT_STR;
  
  #define TMRA2_FILT_FILT_PER0_MASK     0x01U
  #define TMRA2_FILT_FILT_PER1_MASK     0x02U
  #define TMRA2_FILT_FILT_PER2_MASK     0x04U
  #define TMRA2_FILT_FILT_PER3_MASK     0x08U
  #define TMRA2_FILT_FILT_PER4_MASK     0x10U
  #define TMRA2_FILT_FILT_PER5_MASK     0x20U
  #define TMRA2_FILT_FILT_PER6_MASK     0x40U
  #define TMRA2_FILT_FILT_PER7_MASK     0x80U
  #define TMRA2_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA2_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA2_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA2_FILT_FILT_PER_MASK      0xFFU
  #define TMRA2_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA2_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA2_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA2_FILT                    (*((volatile word *)0x0000F02B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRA2_PRPH;

/******************************************
*** Peripheral TMRA3
*******************************************/
typedef volatile struct {
  /*** TMRA3_COMP1 - Timer A Channel 3 Compare Register #1; 0x0000F030 ***/
  union {
    word Word;
  } TMRA3_COMP1_STR;
  
  #define TMRA3_COMP1                   (*((volatile word *)0x0000F030))


  /*** TMRA3_COMP2 - Timer A Channel 3 Compare Register #2; 0x0000F031 ***/
  union {
    word Word;
  } TMRA3_COMP2_STR;
  
  #define TMRA3_COMP2                   (*((volatile word *)0x0000F031))


  /*** TMRA3_CAPT - Timer A Channel 3 Capture Register; 0x0000F032 ***/
  union {
    word Word;
  } TMRA3_CAPT_STR;
  
  #define TMRA3_CAPT                    (*((volatile word *)0x0000F032))


  /*** TMRA3_LOAD - Timer A Channel 3 Load Register; 0x0000F033 ***/
  union {
    word Word;
  } TMRA3_LOAD_STR;
  
  #define TMRA3_LOAD_LOAD0_MASK         0x01U
  #define TMRA3_LOAD_LOAD1_MASK         0x02U
  #define TMRA3_LOAD_LOAD2_MASK         0x04U
  #define TMRA3_LOAD_LOAD3_MASK         0x08U
  #define TMRA3_LOAD_LOAD4_MASK         0x10U
  #define TMRA3_LOAD_LOAD5_MASK         0x20U
  #define TMRA3_LOAD_LOAD6_MASK         0x40U
  #define TMRA3_LOAD_LOAD7_MASK         0x80U
  #define TMRA3_LOAD_LOAD8_MASK         0x0100U
  #define TMRA3_LOAD_LOAD9_MASK         0x0200U
  #define TMRA3_LOAD_LOAD10_MASK        0x0400U
  #define TMRA3_LOAD_LOAD11_MASK        0x0800U
  #define TMRA3_LOAD_LOAD12_MASK        0x1000U
  #define TMRA3_LOAD_LOAD13_MASK        0x2000U
  #define TMRA3_LOAD_LOAD14_MASK        0x4000U
  #define TMRA3_LOAD_LOAD15_MASK        0x8000U
  #define TMRA3_LOAD                    (*((volatile word *)0x0000F033))


  /*** TMRA3_HOLD - Timer A Channel 3 Hold Register; 0x0000F034 ***/
  union {
    word Word;
  } TMRA3_HOLD_STR;
  
  #define TMRA3_HOLD_HOLD0_MASK         0x01U
  #define TMRA3_HOLD_HOLD1_MASK         0x02U
  #define TMRA3_HOLD_HOLD2_MASK         0x04U
  #define TMRA3_HOLD_HOLD3_MASK         0x08U
  #define TMRA3_HOLD_HOLD4_MASK         0x10U
  #define TMRA3_HOLD_HOLD5_MASK         0x20U
  #define TMRA3_HOLD_HOLD6_MASK         0x40U
  #define TMRA3_HOLD_HOLD7_MASK         0x80U
  #define TMRA3_HOLD_HOLD8_MASK         0x0100U
  #define TMRA3_HOLD_HOLD9_MASK         0x0200U
  #define TMRA3_HOLD_HOLD10_MASK        0x0400U
  #define TMRA3_HOLD_HOLD11_MASK        0x0800U
  #define TMRA3_HOLD_HOLD12_MASK        0x1000U
  #define TMRA3_HOLD_HOLD13_MASK        0x2000U
  #define TMRA3_HOLD_HOLD14_MASK        0x4000U
  #define TMRA3_HOLD_HOLD15_MASK        0x8000U
  #define TMRA3_HOLD                    (*((volatile word *)0x0000F034))


  /*** TMRA3_CNTR - Timer A Channel 3 Counter Register; 0x0000F035 ***/
  union {
    word Word;
  } TMRA3_CNTR_STR;
  
  #define TMRA3_CNTR                    (*((volatile word *)0x0000F035))


  /*** TMRA3_CTRL - Timer A Channel 3 Control Register; 0x0000F036 ***/
  union {
    word Word;
  } TMRA3_CTRL_STR;
  
  #define TMRA3_CTRL_OM0_MASK           0x01U
  #define TMRA3_CTRL_OM1_MASK           0x02U
  #define TMRA3_CTRL_OM2_MASK           0x04U
  #define TMRA3_CTRL_Co_INIT_MASK       0x08U
  #define TMRA3_CTRL_DIR_MASK           0x10U
  #define TMRA3_CTRL_LENGTH_MASK        0x20U
  #define TMRA3_CTRL_ONCE_MASK          0x40U
  #define TMRA3_CTRL_SCS0_MASK          0x80U
  #define TMRA3_CTRL_SCS1_MASK          0x0100U
  #define TMRA3_CTRL_PCS0_MASK          0x0200U
  #define TMRA3_CTRL_PCS1_MASK          0x0400U
  #define TMRA3_CTRL_PCS2_MASK          0x0800U
  #define TMRA3_CTRL_PCS3_MASK          0x1000U
  #define TMRA3_CTRL_CM0_MASK           0x2000U
  #define TMRA3_CTRL_CM1_MASK           0x4000U
  #define TMRA3_CTRL_CM2_MASK           0x8000U
  #define TMRA3_CTRL_OM_MASK            0x07U
  #define TMRA3_CTRL_OM_BITNUM          0x00U
  #define TMRA3_CTRL_SCS_MASK           0x0180U
  #define TMRA3_CTRL_SCS_BITNUM         0x07U
  #define TMRA3_CTRL_PCS_MASK           0x1E00U
  #define TMRA3_CTRL_PCS_BITNUM         0x09U
  #define TMRA3_CTRL_CM_MASK            0xE000U
  #define TMRA3_CTRL_CM_BITNUM          0x0DU
  #define TMRA3_CTRL                    (*((volatile word *)0x0000F036))


  /*** TMRA3_SCTRL - Timer A Channel 3 Status and Control Register; 0x0000F037 ***/
  union {
    word Word;
  } TMRA3_SCTRL_STR;
  
  #define TMRA3_SCTRL_OEN_MASK          0x01U
  #define TMRA3_SCTRL_OPS_MASK          0x02U
  #define TMRA3_SCTRL_FORCE_MASK        0x04U
  #define TMRA3_SCTRL_VAL_MASK          0x08U
  #define TMRA3_SCTRL_EEOF_MASK         0x10U
  #define TMRA3_SCTRL_MSTR_MASK         0x20U
  #define TMRA3_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRA3_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRA3_SCTRL_INPUT_MASK        0x0100U
  #define TMRA3_SCTRL_IPS_MASK          0x0200U
  #define TMRA3_SCTRL_IEFIE_MASK        0x0400U
  #define TMRA3_SCTRL_IEF_MASK          0x0800U
  #define TMRA3_SCTRL_TOFIE_MASK        0x1000U
  #define TMRA3_SCTRL_TOF_MASK          0x2000U
  #define TMRA3_SCTRL_TCFIE_MASK        0x4000U
  #define TMRA3_SCTRL_TCF_MASK          0x8000U
  #define TMRA3_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRA3_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRA3_SCTRL                   (*((volatile word *)0x0000F037))


  /*** TMRA3_CMPLD1 - Timer A Channel 3 Comparator Load Register 1; 0x0000F038 ***/
  union {
    word Word;
  } TMRA3_CMPLD1_STR;
  
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRA3_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRA3_CMPLD1                  (*((volatile word *)0x0000F038))


  /*** TMRA3_CMPLD2 - Timer A Channel 3 Comparator Load Register 2; 0x0000F039 ***/
  union {
    word Word;
  } TMRA3_CMPLD2_STR;
  
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRA3_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRA3_CMPLD2                  (*((volatile word *)0x0000F039))


  /*** TMRA3_CSCTRL - Timer A Channel 3 Comparator Status and Control Register; 0x0000F03A ***/
  union {
    word Word;
  } TMRA3_CSCTRL_STR;
  
  #define TMRA3_CSCTRL_CL10_MASK        0x01U
  #define TMRA3_CSCTRL_CL11_MASK        0x02U
  #define TMRA3_CSCTRL_CL20_MASK        0x04U
  #define TMRA3_CSCTRL_CL21_MASK        0x08U
  #define TMRA3_CSCTRL_TCF1_MASK        0x10U
  #define TMRA3_CSCTRL_TCF2_MASK        0x20U
  #define TMRA3_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRA3_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRA3_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRA3_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRA3_CSCTRL_CL1_MASK         0x03U
  #define TMRA3_CSCTRL_CL1_BITNUM       0x00U
  #define TMRA3_CSCTRL_CL2_MASK         0x0CU
  #define TMRA3_CSCTRL_CL2_BITNUM       0x02U
  #define TMRA3_CSCTRL_TCF_1_MASK       0x30U
  #define TMRA3_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRA3_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRA3_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRA3_CSCTRL                  (*((volatile word *)0x0000F03A))


  /*** TMRA3_FILT - Timer A Channel 3 Input Filter Register; 0x0000F03B ***/
  union {
    word Word;
  } TMRA3_FILT_STR;
  
  #define TMRA3_FILT_FILT_PER0_MASK     0x01U
  #define TMRA3_FILT_FILT_PER1_MASK     0x02U
  #define TMRA3_FILT_FILT_PER2_MASK     0x04U
  #define TMRA3_FILT_FILT_PER3_MASK     0x08U
  #define TMRA3_FILT_FILT_PER4_MASK     0x10U
  #define TMRA3_FILT_FILT_PER5_MASK     0x20U
  #define TMRA3_FILT_FILT_PER6_MASK     0x40U
  #define TMRA3_FILT_FILT_PER7_MASK     0x80U
  #define TMRA3_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRA3_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRA3_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRA3_FILT_FILT_PER_MASK      0xFFU
  #define TMRA3_FILT_FILT_PER_BITNUM    0x00U
  #define TMRA3_FILT_FILT_CNT_MASK      0x0700U
  #define TMRA3_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRA3_FILT                    (*((volatile word *)0x0000F03B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRA3_PRPH;

/******************************************
*** Peripheral TMRB0
*******************************************/
typedef volatile struct {
  /*** TMRB0_COMP1 - Timer B Channel 0 Compare Register #1; 0x0000F040 ***/
  union {
    word Word;
  } TMRB0_COMP1_STR;
  
  #define TMRB0_COMP1                   (*((volatile word *)0x0000F040))


  /*** TMRB0_COMP2 - Timer B Channel 0 Compare Register #2; 0x0000F041 ***/
  union {
    word Word;
  } TMRB0_COMP2_STR;
  
  #define TMRB0_COMP2                   (*((volatile word *)0x0000F041))


  /*** TMRB0_CAPT - Timer B Channel 0 Capture Register; 0x0000F042 ***/
  union {
    word Word;
  } TMRB0_CAPT_STR;
  
  #define TMRB0_CAPT                    (*((volatile word *)0x0000F042))


  /*** TMRB0_LOAD - Timer B Channel 0 Load Register; 0x0000F043 ***/
  union {
    word Word;
  } TMRB0_LOAD_STR;
  
  #define TMRB0_LOAD_LOAD0_MASK         0x01U
  #define TMRB0_LOAD_LOAD1_MASK         0x02U
  #define TMRB0_LOAD_LOAD2_MASK         0x04U
  #define TMRB0_LOAD_LOAD3_MASK         0x08U
  #define TMRB0_LOAD_LOAD4_MASK         0x10U
  #define TMRB0_LOAD_LOAD5_MASK         0x20U
  #define TMRB0_LOAD_LOAD6_MASK         0x40U
  #define TMRB0_LOAD_LOAD7_MASK         0x80U
  #define TMRB0_LOAD_LOAD8_MASK         0x0100U
  #define TMRB0_LOAD_LOAD9_MASK         0x0200U
  #define TMRB0_LOAD_LOAD10_MASK        0x0400U
  #define TMRB0_LOAD_LOAD11_MASK        0x0800U
  #define TMRB0_LOAD_LOAD12_MASK        0x1000U
  #define TMRB0_LOAD_LOAD13_MASK        0x2000U
  #define TMRB0_LOAD_LOAD14_MASK        0x4000U
  #define TMRB0_LOAD_LOAD15_MASK        0x8000U
  #define TMRB0_LOAD                    (*((volatile word *)0x0000F043))


  /*** TMRB0_HOLD - Timer B Channel 0 Hold Register; 0x0000F044 ***/
  union {
    word Word;
  } TMRB0_HOLD_STR;
  
  #define TMRB0_HOLD_HOLD0_MASK         0x01U
  #define TMRB0_HOLD_HOLD1_MASK         0x02U
  #define TMRB0_HOLD_HOLD2_MASK         0x04U
  #define TMRB0_HOLD_HOLD3_MASK         0x08U
  #define TMRB0_HOLD_HOLD4_MASK         0x10U
  #define TMRB0_HOLD_HOLD5_MASK         0x20U
  #define TMRB0_HOLD_HOLD6_MASK         0x40U
  #define TMRB0_HOLD_HOLD7_MASK         0x80U
  #define TMRB0_HOLD_HOLD8_MASK         0x0100U
  #define TMRB0_HOLD_HOLD9_MASK         0x0200U
  #define TMRB0_HOLD_HOLD10_MASK        0x0400U
  #define TMRB0_HOLD_HOLD11_MASK        0x0800U
  #define TMRB0_HOLD_HOLD12_MASK        0x1000U
  #define TMRB0_HOLD_HOLD13_MASK        0x2000U
  #define TMRB0_HOLD_HOLD14_MASK        0x4000U
  #define TMRB0_HOLD_HOLD15_MASK        0x8000U
  #define TMRB0_HOLD                    (*((volatile word *)0x0000F044))


  /*** TMRB0_CNTR - Timer B Channel 0 Counter Register; 0x0000F045 ***/
  union {
    word Word;
  } TMRB0_CNTR_STR;
  
  #define TMRB0_CNTR                    (*((volatile word *)0x0000F045))


  /*** TMRB0_CTRL - Timer B Channel 0 Control Register; 0x0000F046 ***/
  union {
    word Word;
  } TMRB0_CTRL_STR;
  
  #define TMRB0_CTRL_OM0_MASK           0x01U
  #define TMRB0_CTRL_OM1_MASK           0x02U
  #define TMRB0_CTRL_OM2_MASK           0x04U
  #define TMRB0_CTRL_Co_INIT_MASK       0x08U
  #define TMRB0_CTRL_DIR_MASK           0x10U
  #define TMRB0_CTRL_LENGTH_MASK        0x20U
  #define TMRB0_CTRL_ONCE_MASK          0x40U
  #define TMRB0_CTRL_SCS0_MASK          0x80U
  #define TMRB0_CTRL_SCS1_MASK          0x0100U
  #define TMRB0_CTRL_PCS0_MASK          0x0200U
  #define TMRB0_CTRL_PCS1_MASK          0x0400U
  #define TMRB0_CTRL_PCS2_MASK          0x0800U
  #define TMRB0_CTRL_PCS3_MASK          0x1000U
  #define TMRB0_CTRL_CM0_MASK           0x2000U
  #define TMRB0_CTRL_CM1_MASK           0x4000U
  #define TMRB0_CTRL_CM2_MASK           0x8000U
  #define TMRB0_CTRL_OM_MASK            0x07U
  #define TMRB0_CTRL_OM_BITNUM          0x00U
  #define TMRB0_CTRL_SCS_MASK           0x0180U
  #define TMRB0_CTRL_SCS_BITNUM         0x07U
  #define TMRB0_CTRL_PCS_MASK           0x1E00U
  #define TMRB0_CTRL_PCS_BITNUM         0x09U
  #define TMRB0_CTRL_CM_MASK            0xE000U
  #define TMRB0_CTRL_CM_BITNUM          0x0DU
  #define TMRB0_CTRL                    (*((volatile word *)0x0000F046))


  /*** TMRB0_SCTRL - Timer B Channel 0 Status and Control Register; 0x0000F047 ***/
  union {
    word Word;
  } TMRB0_SCTRL_STR;
  
  #define TMRB0_SCTRL_OEN_MASK          0x01U
  #define TMRB0_SCTRL_OPS_MASK          0x02U
  #define TMRB0_SCTRL_FORCE_MASK        0x04U
  #define TMRB0_SCTRL_VAL_MASK          0x08U
  #define TMRB0_SCTRL_EEOF_MASK         0x10U
  #define TMRB0_SCTRL_MSTR_MASK         0x20U
  #define TMRB0_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRB0_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRB0_SCTRL_INPUT_MASK        0x0100U
  #define TMRB0_SCTRL_IPS_MASK          0x0200U
  #define TMRB0_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB0_SCTRL_IEF_MASK          0x0800U
  #define TMRB0_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB0_SCTRL_TOF_MASK          0x2000U
  #define TMRB0_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB0_SCTRL_TCF_MASK          0x8000U
  #define TMRB0_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRB0_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRB0_SCTRL                   (*((volatile word *)0x0000F047))


  /*** TMRB0_CMPLD1 - Timer B Channel 0 Comparator Load Register 1; 0x0000F048 ***/
  union {
    word Word;
  } TMRB0_CMPLD1_STR;
  
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB0_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB0_CMPLD1                  (*((volatile word *)0x0000F048))


  /*** TMRB0_CMPLD2 - Timer B Channel 0 Comparator Load Register 2; 0x0000F049 ***/
  union {
    word Word;
  } TMRB0_CMPLD2_STR;
  
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB0_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB0_CMPLD2                  (*((volatile word *)0x0000F049))


  /*** TMRB0_CSCTRL - Timer B Channel 0 Comparator Status and Control Register; 0x0000F04A ***/
  union {
    word Word;
  } TMRB0_CSCTRL_STR;
  
  #define TMRB0_CSCTRL_CL10_MASK        0x01U
  #define TMRB0_CSCTRL_CL11_MASK        0x02U
  #define TMRB0_CSCTRL_CL20_MASK        0x04U
  #define TMRB0_CSCTRL_CL21_MASK        0x08U
  #define TMRB0_CSCTRL_TCF1_MASK        0x10U
  #define TMRB0_CSCTRL_TCF2_MASK        0x20U
  #define TMRB0_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB0_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB0_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB0_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB0_CSCTRL_CL1_MASK         0x03U
  #define TMRB0_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB0_CSCTRL_CL2_MASK         0x0CU
  #define TMRB0_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB0_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB0_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB0_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB0_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB0_CSCTRL                  (*((volatile word *)0x0000F04A))


  /*** TMRB0_FILT - Timer B Channel 0 Input Filter Register; 0x0000F04B ***/
  union {
    word Word;
  } TMRB0_FILT_STR;
  
  #define TMRB0_FILT_FILT_PER0_MASK     0x01U
  #define TMRB0_FILT_FILT_PER1_MASK     0x02U
  #define TMRB0_FILT_FILT_PER2_MASK     0x04U
  #define TMRB0_FILT_FILT_PER3_MASK     0x08U
  #define TMRB0_FILT_FILT_PER4_MASK     0x10U
  #define TMRB0_FILT_FILT_PER5_MASK     0x20U
  #define TMRB0_FILT_FILT_PER6_MASK     0x40U
  #define TMRB0_FILT_FILT_PER7_MASK     0x80U
  #define TMRB0_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB0_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB0_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB0_FILT_FILT_PER_MASK      0xFFU
  #define TMRB0_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB0_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB0_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB0_FILT                    (*((volatile word *)0x0000F04B))


  word Reserved0[3];                   /* Reserved (unused) registers */
  
  /*** TMRB_ENBL - Timer B Channel Enable Register; 0x0000F04F ***/
  union {
    word Word;
  } TMRB_ENBL_STR;
  
  #define TMRB_ENBL_ENBL0_MASK          0x01U
  #define TMRB_ENBL_ENBL1_MASK          0x02U
  #define TMRB_ENBL_ENBL2_MASK          0x04U
  #define TMRB_ENBL_ENBL3_MASK          0x08U
  #define TMRB_ENBL_ENBL_MASK           0x0FU
  #define TMRB_ENBL_ENBL_BITNUM         0x00U
  #define TMRB_ENBL                     (*((volatile word *)0x0000F04F))


} TMRB0_PRPH;

/******************************************
*** Peripheral TMRB1
*******************************************/
typedef volatile struct {
  /*** TMRB1_COMP1 - Timer B Channel 1 Compare Register #1; 0x0000F050 ***/
  union {
    word Word;
  } TMRB1_COMP1_STR;
  
  #define TMRB1_COMP1                   (*((volatile word *)0x0000F050))


  /*** TMRB1_COMP2 - Timer B Channel 1 Compare Register #2; 0x0000F051 ***/
  union {
    word Word;
  } TMRB1_COMP2_STR;
  
  #define TMRB1_COMP2                   (*((volatile word *)0x0000F051))


  /*** TMRB1_CAPT - Timer B Channel 1 Capture Register; 0x0000F052 ***/
  union {
    word Word;
  } TMRB1_CAPT_STR;
  
  #define TMRB1_CAPT                    (*((volatile word *)0x0000F052))


  /*** TMRB1_LOAD - Timer B Channel 1 Load Register; 0x0000F053 ***/
  union {
    word Word;
  } TMRB1_LOAD_STR;
  
  #define TMRB1_LOAD_LOAD0_MASK         0x01U
  #define TMRB1_LOAD_LOAD1_MASK         0x02U
  #define TMRB1_LOAD_LOAD2_MASK         0x04U
  #define TMRB1_LOAD_LOAD3_MASK         0x08U
  #define TMRB1_LOAD_LOAD4_MASK         0x10U
  #define TMRB1_LOAD_LOAD5_MASK         0x20U
  #define TMRB1_LOAD_LOAD6_MASK         0x40U
  #define TMRB1_LOAD_LOAD7_MASK         0x80U
  #define TMRB1_LOAD_LOAD8_MASK         0x0100U
  #define TMRB1_LOAD_LOAD9_MASK         0x0200U
  #define TMRB1_LOAD_LOAD10_MASK        0x0400U
  #define TMRB1_LOAD_LOAD11_MASK        0x0800U
  #define TMRB1_LOAD_LOAD12_MASK        0x1000U
  #define TMRB1_LOAD_LOAD13_MASK        0x2000U
  #define TMRB1_LOAD_LOAD14_MASK        0x4000U
  #define TMRB1_LOAD_LOAD15_MASK        0x8000U
  #define TMRB1_LOAD                    (*((volatile word *)0x0000F053))


  /*** TMRB1_HOLD - Timer B Channel 1 Hold Register; 0x0000F054 ***/
  union {
    word Word;
  } TMRB1_HOLD_STR;
  
  #define TMRB1_HOLD_HOLD0_MASK         0x01U
  #define TMRB1_HOLD_HOLD1_MASK         0x02U
  #define TMRB1_HOLD_HOLD2_MASK         0x04U
  #define TMRB1_HOLD_HOLD3_MASK         0x08U
  #define TMRB1_HOLD_HOLD4_MASK         0x10U
  #define TMRB1_HOLD_HOLD5_MASK         0x20U
  #define TMRB1_HOLD_HOLD6_MASK         0x40U
  #define TMRB1_HOLD_HOLD7_MASK         0x80U
  #define TMRB1_HOLD_HOLD8_MASK         0x0100U
  #define TMRB1_HOLD_HOLD9_MASK         0x0200U
  #define TMRB1_HOLD_HOLD10_MASK        0x0400U
  #define TMRB1_HOLD_HOLD11_MASK        0x0800U
  #define TMRB1_HOLD_HOLD12_MASK        0x1000U
  #define TMRB1_HOLD_HOLD13_MASK        0x2000U
  #define TMRB1_HOLD_HOLD14_MASK        0x4000U
  #define TMRB1_HOLD_HOLD15_MASK        0x8000U
  #define TMRB1_HOLD                    (*((volatile word *)0x0000F054))


  /*** TMRB1_CNTR - Timer B Channel 1 Counter Register; 0x0000F055 ***/
  union {
    word Word;
  } TMRB1_CNTR_STR;
  
  #define TMRB1_CNTR                    (*((volatile word *)0x0000F055))


  /*** TMRB1_CTRL - Timer B Channel 1 Control Register; 0x0000F056 ***/
  union {
    word Word;
  } TMRB1_CTRL_STR;
  
  #define TMRB1_CTRL_OM0_MASK           0x01U
  #define TMRB1_CTRL_OM1_MASK           0x02U
  #define TMRB1_CTRL_OM2_MASK           0x04U
  #define TMRB1_CTRL_Co_INIT_MASK       0x08U
  #define TMRB1_CTRL_DIR_MASK           0x10U
  #define TMRB1_CTRL_LENGTH_MASK        0x20U
  #define TMRB1_CTRL_ONCE_MASK          0x40U
  #define TMRB1_CTRL_SCS0_MASK          0x80U
  #define TMRB1_CTRL_SCS1_MASK          0x0100U
  #define TMRB1_CTRL_PCS0_MASK          0x0200U
  #define TMRB1_CTRL_PCS1_MASK          0x0400U
  #define TMRB1_CTRL_PCS2_MASK          0x0800U
  #define TMRB1_CTRL_PCS3_MASK          0x1000U
  #define TMRB1_CTRL_CM0_MASK           0x2000U
  #define TMRB1_CTRL_CM1_MASK           0x4000U
  #define TMRB1_CTRL_CM2_MASK           0x8000U
  #define TMRB1_CTRL_OM_MASK            0x07U
  #define TMRB1_CTRL_OM_BITNUM          0x00U
  #define TMRB1_CTRL_SCS_MASK           0x0180U
  #define TMRB1_CTRL_SCS_BITNUM         0x07U
  #define TMRB1_CTRL_PCS_MASK           0x1E00U
  #define TMRB1_CTRL_PCS_BITNUM         0x09U
  #define TMRB1_CTRL_CM_MASK            0xE000U
  #define TMRB1_CTRL_CM_BITNUM          0x0DU
  #define TMRB1_CTRL                    (*((volatile word *)0x0000F056))


  /*** TMRB1_SCTRL - Timer B Channel 1 Status and Control Register; 0x0000F057 ***/
  union {
    word Word;
  } TMRB1_SCTRL_STR;
  
  #define TMRB1_SCTRL_OEN_MASK          0x01U
  #define TMRB1_SCTRL_OPS_MASK          0x02U
  #define TMRB1_SCTRL_FORCE_MASK        0x04U
  #define TMRB1_SCTRL_VAL_MASK          0x08U
  #define TMRB1_SCTRL_EEOF_MASK         0x10U
  #define TMRB1_SCTRL_MSTR_MASK         0x20U
  #define TMRB1_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRB1_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRB1_SCTRL_INPUT_MASK        0x0100U
  #define TMRB1_SCTRL_IPS_MASK          0x0200U
  #define TMRB1_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB1_SCTRL_IEF_MASK          0x0800U
  #define TMRB1_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB1_SCTRL_TOF_MASK          0x2000U
  #define TMRB1_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB1_SCTRL_TCF_MASK          0x8000U
  #define TMRB1_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRB1_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRB1_SCTRL                   (*((volatile word *)0x0000F057))


  /*** TMRB1_CMPLD1 - Timer B Channel 1 Comparator Load Register 1; 0x0000F058 ***/
  union {
    word Word;
  } TMRB1_CMPLD1_STR;
  
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB1_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB1_CMPLD1                  (*((volatile word *)0x0000F058))


  /*** TMRB1_CMPLD2 - Timer B Channel 1 Comparator Load Register 2; 0x0000F059 ***/
  union {
    word Word;
  } TMRB1_CMPLD2_STR;
  
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB1_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB1_CMPLD2                  (*((volatile word *)0x0000F059))


  /*** TMRB1_CSCTRL - Timer B Channel 1 Comparator Status and Control Register; 0x0000F05A ***/
  union {
    word Word;
  } TMRB1_CSCTRL_STR;
  
  #define TMRB1_CSCTRL_CL10_MASK        0x01U
  #define TMRB1_CSCTRL_CL11_MASK        0x02U
  #define TMRB1_CSCTRL_CL20_MASK        0x04U
  #define TMRB1_CSCTRL_CL21_MASK        0x08U
  #define TMRB1_CSCTRL_TCF1_MASK        0x10U
  #define TMRB1_CSCTRL_TCF2_MASK        0x20U
  #define TMRB1_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB1_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB1_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB1_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB1_CSCTRL_CL1_MASK         0x03U
  #define TMRB1_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB1_CSCTRL_CL2_MASK         0x0CU
  #define TMRB1_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB1_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB1_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB1_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB1_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB1_CSCTRL                  (*((volatile word *)0x0000F05A))


  /*** TMRB1_FILT - Timer B Channel 1 Input Filter Register; 0x0000F05B ***/
  union {
    word Word;
  } TMRB1_FILT_STR;
  
  #define TMRB1_FILT_FILT_PER0_MASK     0x01U
  #define TMRB1_FILT_FILT_PER1_MASK     0x02U
  #define TMRB1_FILT_FILT_PER2_MASK     0x04U
  #define TMRB1_FILT_FILT_PER3_MASK     0x08U
  #define TMRB1_FILT_FILT_PER4_MASK     0x10U
  #define TMRB1_FILT_FILT_PER5_MASK     0x20U
  #define TMRB1_FILT_FILT_PER6_MASK     0x40U
  #define TMRB1_FILT_FILT_PER7_MASK     0x80U
  #define TMRB1_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB1_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB1_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB1_FILT_FILT_PER_MASK      0xFFU
  #define TMRB1_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB1_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB1_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB1_FILT                    (*((volatile word *)0x0000F05B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRB1_PRPH;

/******************************************
*** Peripheral TMRB2
*******************************************/
typedef volatile struct {
  /*** TMRB2_COMP1 - Timer B Channel 2 Compare Register #1; 0x0000F060 ***/
  union {
    word Word;
  } TMRB2_COMP1_STR;
  
  #define TMRB2_COMP1                   (*((volatile word *)0x0000F060))


  /*** TMRB2_COMP2 - Timer B Channel 2 Compare Register #2; 0x0000F061 ***/
  union {
    word Word;
  } TMRB2_COMP2_STR;
  
  #define TMRB2_COMP2                   (*((volatile word *)0x0000F061))


  /*** TMRB2_CAPT - Timer B Channel 2 Capture Register; 0x0000F062 ***/
  union {
    word Word;
  } TMRB2_CAPT_STR;
  
  #define TMRB2_CAPT                    (*((volatile word *)0x0000F062))


  /*** TMRB2_LOAD - Timer B Channel 2 Load Register; 0x0000F063 ***/
  union {
    word Word;
  } TMRB2_LOAD_STR;
  
  #define TMRB2_LOAD_LOAD0_MASK         0x01U
  #define TMRB2_LOAD_LOAD1_MASK         0x02U
  #define TMRB2_LOAD_LOAD2_MASK         0x04U
  #define TMRB2_LOAD_LOAD3_MASK         0x08U
  #define TMRB2_LOAD_LOAD4_MASK         0x10U
  #define TMRB2_LOAD_LOAD5_MASK         0x20U
  #define TMRB2_LOAD_LOAD6_MASK         0x40U
  #define TMRB2_LOAD_LOAD7_MASK         0x80U
  #define TMRB2_LOAD_LOAD8_MASK         0x0100U
  #define TMRB2_LOAD_LOAD9_MASK         0x0200U
  #define TMRB2_LOAD_LOAD10_MASK        0x0400U
  #define TMRB2_LOAD_LOAD11_MASK        0x0800U
  #define TMRB2_LOAD_LOAD12_MASK        0x1000U
  #define TMRB2_LOAD_LOAD13_MASK        0x2000U
  #define TMRB2_LOAD_LOAD14_MASK        0x4000U
  #define TMRB2_LOAD_LOAD15_MASK        0x8000U
  #define TMRB2_LOAD                    (*((volatile word *)0x0000F063))


  /*** TMRB2_HOLD - Timer B Channel 2 Hold Register; 0x0000F064 ***/
  union {
    word Word;
  } TMRB2_HOLD_STR;
  
  #define TMRB2_HOLD_HOLD0_MASK         0x01U
  #define TMRB2_HOLD_HOLD1_MASK         0x02U
  #define TMRB2_HOLD_HOLD2_MASK         0x04U
  #define TMRB2_HOLD_HOLD3_MASK         0x08U
  #define TMRB2_HOLD_HOLD4_MASK         0x10U
  #define TMRB2_HOLD_HOLD5_MASK         0x20U
  #define TMRB2_HOLD_HOLD6_MASK         0x40U
  #define TMRB2_HOLD_HOLD7_MASK         0x80U
  #define TMRB2_HOLD_HOLD8_MASK         0x0100U
  #define TMRB2_HOLD_HOLD9_MASK         0x0200U
  #define TMRB2_HOLD_HOLD10_MASK        0x0400U
  #define TMRB2_HOLD_HOLD11_MASK        0x0800U
  #define TMRB2_HOLD_HOLD12_MASK        0x1000U
  #define TMRB2_HOLD_HOLD13_MASK        0x2000U
  #define TMRB2_HOLD_HOLD14_MASK        0x4000U
  #define TMRB2_HOLD_HOLD15_MASK        0x8000U
  #define TMRB2_HOLD                    (*((volatile word *)0x0000F064))


  /*** TMRB2_CNTR - Timer B Channel 2 Counter Register; 0x0000F065 ***/
  union {
    word Word;
  } TMRB2_CNTR_STR;
  
  #define TMRB2_CNTR                    (*((volatile word *)0x0000F065))


  /*** TMRB2_CTRL - Timer B Channel 2 Control Register; 0x0000F066 ***/
  union {
    word Word;
  } TMRB2_CTRL_STR;
  
  #define TMRB2_CTRL_OM0_MASK           0x01U
  #define TMRB2_CTRL_OM1_MASK           0x02U
  #define TMRB2_CTRL_OM2_MASK           0x04U
  #define TMRB2_CTRL_Co_INIT_MASK       0x08U
  #define TMRB2_CTRL_DIR_MASK           0x10U
  #define TMRB2_CTRL_LENGTH_MASK        0x20U
  #define TMRB2_CTRL_ONCE_MASK          0x40U
  #define TMRB2_CTRL_SCS0_MASK          0x80U
  #define TMRB2_CTRL_SCS1_MASK          0x0100U
  #define TMRB2_CTRL_PCS0_MASK          0x0200U
  #define TMRB2_CTRL_PCS1_MASK          0x0400U
  #define TMRB2_CTRL_PCS2_MASK          0x0800U
  #define TMRB2_CTRL_PCS3_MASK          0x1000U
  #define TMRB2_CTRL_CM0_MASK           0x2000U
  #define TMRB2_CTRL_CM1_MASK           0x4000U
  #define TMRB2_CTRL_CM2_MASK           0x8000U
  #define TMRB2_CTRL_OM_MASK            0x07U
  #define TMRB2_CTRL_OM_BITNUM          0x00U
  #define TMRB2_CTRL_SCS_MASK           0x0180U
  #define TMRB2_CTRL_SCS_BITNUM         0x07U
  #define TMRB2_CTRL_PCS_MASK           0x1E00U
  #define TMRB2_CTRL_PCS_BITNUM         0x09U
  #define TMRB2_CTRL_CM_MASK            0xE000U
  #define TMRB2_CTRL_CM_BITNUM          0x0DU
  #define TMRB2_CTRL                    (*((volatile word *)0x0000F066))


  /*** TMRB2_SCTRL - Timer B Channel 2 Status and Control Register; 0x0000F067 ***/
  union {
    word Word;
  } TMRB2_SCTRL_STR;
  
  #define TMRB2_SCTRL_OEN_MASK          0x01U
  #define TMRB2_SCTRL_OPS_MASK          0x02U
  #define TMRB2_SCTRL_FORCE_MASK        0x04U
  #define TMRB2_SCTRL_VAL_MASK          0x08U
  #define TMRB2_SCTRL_EEOF_MASK         0x10U
  #define TMRB2_SCTRL_MSTR_MASK         0x20U
  #define TMRB2_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRB2_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRB2_SCTRL_INPUT_MASK        0x0100U
  #define TMRB2_SCTRL_IPS_MASK          0x0200U
  #define TMRB2_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB2_SCTRL_IEF_MASK          0x0800U
  #define TMRB2_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB2_SCTRL_TOF_MASK          0x2000U
  #define TMRB2_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB2_SCTRL_TCF_MASK          0x8000U
  #define TMRB2_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRB2_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRB2_SCTRL                   (*((volatile word *)0x0000F067))


  /*** TMRB2_CMPLD1 - Timer B Channel 2 Comparator Load Register 1; 0x0000F068 ***/
  union {
    word Word;
  } TMRB2_CMPLD1_STR;
  
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB2_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB2_CMPLD1                  (*((volatile word *)0x0000F068))


  /*** TMRB2_CMPLD2 - Timer B Channel 2 Comparator Load Register 2; 0x0000F069 ***/
  union {
    word Word;
  } TMRB2_CMPLD2_STR;
  
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB2_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB2_CMPLD2                  (*((volatile word *)0x0000F069))


  /*** TMRB2_CSCTRL - Timer B Channel 2 Comparator Status and Control Register; 0x0000F06A ***/
  union {
    word Word;
  } TMRB2_CSCTRL_STR;
  
  #define TMRB2_CSCTRL_CL10_MASK        0x01U
  #define TMRB2_CSCTRL_CL11_MASK        0x02U
  #define TMRB2_CSCTRL_CL20_MASK        0x04U
  #define TMRB2_CSCTRL_CL21_MASK        0x08U
  #define TMRB2_CSCTRL_TCF1_MASK        0x10U
  #define TMRB2_CSCTRL_TCF2_MASK        0x20U
  #define TMRB2_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB2_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB2_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB2_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB2_CSCTRL_CL1_MASK         0x03U
  #define TMRB2_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB2_CSCTRL_CL2_MASK         0x0CU
  #define TMRB2_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB2_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB2_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB2_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB2_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB2_CSCTRL                  (*((volatile word *)0x0000F06A))


  /*** TMRB2_FILT - Timer B Channel 2 Input Filter Register; 0x0000F06B ***/
  union {
    word Word;
  } TMRB2_FILT_STR;
  
  #define TMRB2_FILT_FILT_PER0_MASK     0x01U
  #define TMRB2_FILT_FILT_PER1_MASK     0x02U
  #define TMRB2_FILT_FILT_PER2_MASK     0x04U
  #define TMRB2_FILT_FILT_PER3_MASK     0x08U
  #define TMRB2_FILT_FILT_PER4_MASK     0x10U
  #define TMRB2_FILT_FILT_PER5_MASK     0x20U
  #define TMRB2_FILT_FILT_PER6_MASK     0x40U
  #define TMRB2_FILT_FILT_PER7_MASK     0x80U
  #define TMRB2_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB2_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB2_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB2_FILT_FILT_PER_MASK      0xFFU
  #define TMRB2_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB2_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB2_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB2_FILT                    (*((volatile word *)0x0000F06B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRB2_PRPH;

/******************************************
*** Peripheral TMRB3
*******************************************/
typedef volatile struct {
  /*** TMRB3_COMP1 - Timer B Channel 3 Compare Register #1; 0x0000F070 ***/
  union {
    word Word;
  } TMRB3_COMP1_STR;
  
  #define TMRB3_COMP1                   (*((volatile word *)0x0000F070))


  /*** TMRB3_COMP2 - Timer B Channel 3 Compare Register #2; 0x0000F071 ***/
  union {
    word Word;
  } TMRB3_COMP2_STR;
  
  #define TMRB3_COMP2                   (*((volatile word *)0x0000F071))


  /*** TMRB3_CAPT - Timer B Channel 3 Capture Register; 0x0000F072 ***/
  union {
    word Word;
  } TMRB3_CAPT_STR;
  
  #define TMRB3_CAPT                    (*((volatile word *)0x0000F072))


  /*** TMRB3_LOAD - Timer B Channel 3 Load Register; 0x0000F073 ***/
  union {
    word Word;
  } TMRB3_LOAD_STR;
  
  #define TMRB3_LOAD_LOAD0_MASK         0x01U
  #define TMRB3_LOAD_LOAD1_MASK         0x02U
  #define TMRB3_LOAD_LOAD2_MASK         0x04U
  #define TMRB3_LOAD_LOAD3_MASK         0x08U
  #define TMRB3_LOAD_LOAD4_MASK         0x10U
  #define TMRB3_LOAD_LOAD5_MASK         0x20U
  #define TMRB3_LOAD_LOAD6_MASK         0x40U
  #define TMRB3_LOAD_LOAD7_MASK         0x80U
  #define TMRB3_LOAD_LOAD8_MASK         0x0100U
  #define TMRB3_LOAD_LOAD9_MASK         0x0200U
  #define TMRB3_LOAD_LOAD10_MASK        0x0400U
  #define TMRB3_LOAD_LOAD11_MASK        0x0800U
  #define TMRB3_LOAD_LOAD12_MASK        0x1000U
  #define TMRB3_LOAD_LOAD13_MASK        0x2000U
  #define TMRB3_LOAD_LOAD14_MASK        0x4000U
  #define TMRB3_LOAD_LOAD15_MASK        0x8000U
  #define TMRB3_LOAD                    (*((volatile word *)0x0000F073))


  /*** TMRB3_HOLD - Timer B Channel 3 Hold Register; 0x0000F074 ***/
  union {
    word Word;
  } TMRB3_HOLD_STR;
  
  #define TMRB3_HOLD_HOLD0_MASK         0x01U
  #define TMRB3_HOLD_HOLD1_MASK         0x02U
  #define TMRB3_HOLD_HOLD2_MASK         0x04U
  #define TMRB3_HOLD_HOLD3_MASK         0x08U
  #define TMRB3_HOLD_HOLD4_MASK         0x10U
  #define TMRB3_HOLD_HOLD5_MASK         0x20U
  #define TMRB3_HOLD_HOLD6_MASK         0x40U
  #define TMRB3_HOLD_HOLD7_MASK         0x80U
  #define TMRB3_HOLD_HOLD8_MASK         0x0100U
  #define TMRB3_HOLD_HOLD9_MASK         0x0200U
  #define TMRB3_HOLD_HOLD10_MASK        0x0400U
  #define TMRB3_HOLD_HOLD11_MASK        0x0800U
  #define TMRB3_HOLD_HOLD12_MASK        0x1000U
  #define TMRB3_HOLD_HOLD13_MASK        0x2000U
  #define TMRB3_HOLD_HOLD14_MASK        0x4000U
  #define TMRB3_HOLD_HOLD15_MASK        0x8000U
  #define TMRB3_HOLD                    (*((volatile word *)0x0000F074))


  /*** TMRB3_CNTR - Timer B Channel 3 Counter Register; 0x0000F075 ***/
  union {
    word Word;
  } TMRB3_CNTR_STR;
  
  #define TMRB3_CNTR                    (*((volatile word *)0x0000F075))


  /*** TMRB3_CTRL - Timer B Channel 3 Control Register; 0x0000F076 ***/
  union {
    word Word;
  } TMRB3_CTRL_STR;
  
  #define TMRB3_CTRL_OM0_MASK           0x01U
  #define TMRB3_CTRL_OM1_MASK           0x02U
  #define TMRB3_CTRL_OM2_MASK           0x04U
  #define TMRB3_CTRL_Co_INIT_MASK       0x08U
  #define TMRB3_CTRL_DIR_MASK           0x10U
  #define TMRB3_CTRL_LENGTH_MASK        0x20U
  #define TMRB3_CTRL_ONCE_MASK          0x40U
  #define TMRB3_CTRL_SCS0_MASK          0x80U
  #define TMRB3_CTRL_SCS1_MASK          0x0100U
  #define TMRB3_CTRL_PCS0_MASK          0x0200U
  #define TMRB3_CTRL_PCS1_MASK          0x0400U
  #define TMRB3_CTRL_PCS2_MASK          0x0800U
  #define TMRB3_CTRL_PCS3_MASK          0x1000U
  #define TMRB3_CTRL_CM0_MASK           0x2000U
  #define TMRB3_CTRL_CM1_MASK           0x4000U
  #define TMRB3_CTRL_CM2_MASK           0x8000U
  #define TMRB3_CTRL_OM_MASK            0x07U
  #define TMRB3_CTRL_OM_BITNUM          0x00U
  #define TMRB3_CTRL_SCS_MASK           0x0180U
  #define TMRB3_CTRL_SCS_BITNUM         0x07U
  #define TMRB3_CTRL_PCS_MASK           0x1E00U
  #define TMRB3_CTRL_PCS_BITNUM         0x09U
  #define TMRB3_CTRL_CM_MASK            0xE000U
  #define TMRB3_CTRL_CM_BITNUM          0x0DU
  #define TMRB3_CTRL                    (*((volatile word *)0x0000F076))


  /*** TMRB3_SCTRL - Timer B Channel 3 Status and Control Register; 0x0000F077 ***/
  union {
    word Word;
  } TMRB3_SCTRL_STR;
  
  #define TMRB3_SCTRL_OEN_MASK          0x01U
  #define TMRB3_SCTRL_OPS_MASK          0x02U
  #define TMRB3_SCTRL_FORCE_MASK        0x04U
  #define TMRB3_SCTRL_VAL_MASK          0x08U
  #define TMRB3_SCTRL_EEOF_MASK         0x10U
  #define TMRB3_SCTRL_MSTR_MASK         0x20U
  #define TMRB3_SCTRL_Capture_Mode0_MASK 0x40U
  #define TMRB3_SCTRL_Capture_Mode1_MASK 0x80U
  #define TMRB3_SCTRL_INPUT_MASK        0x0100U
  #define TMRB3_SCTRL_IPS_MASK          0x0200U
  #define TMRB3_SCTRL_IEFIE_MASK        0x0400U
  #define TMRB3_SCTRL_IEF_MASK          0x0800U
  #define TMRB3_SCTRL_TOFIE_MASK        0x1000U
  #define TMRB3_SCTRL_TOF_MASK          0x2000U
  #define TMRB3_SCTRL_TCFIE_MASK        0x4000U
  #define TMRB3_SCTRL_TCF_MASK          0x8000U
  #define TMRB3_SCTRL_Capture_Mode_MASK 0xC0U
  #define TMRB3_SCTRL_Capture_Mode_BITNUM 0x06U
  #define TMRB3_SCTRL                   (*((volatile word *)0x0000F077))


  /*** TMRB3_CMPLD1 - Timer B Channel 3 Comparator Load Register 1; 0x0000F078 ***/
  union {
    word Word;
  } TMRB3_CMPLD1_STR;
  
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_10_MASK 0x01U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_11_MASK 0x02U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_12_MASK 0x04U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_13_MASK 0x08U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_14_MASK 0x10U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_15_MASK 0x20U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_16_MASK 0x40U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_17_MASK 0x80U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_18_MASK 0x0100U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_19_MASK 0x0200U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_110_MASK 0x0400U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_111_MASK 0x0800U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_112_MASK 0x1000U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_113_MASK 0x2000U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_114_MASK 0x4000U
  #define TMRB3_CMPLD1_COMPARATOR_LOAD_115_MASK 0x8000U
  #define TMRB3_CMPLD1                  (*((volatile word *)0x0000F078))


  /*** TMRB3_CMPLD2 - Timer B Channel 3 Comparator Load Register 2; 0x0000F079 ***/
  union {
    word Word;
  } TMRB3_CMPLD2_STR;
  
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_20_MASK 0x01U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_21_MASK 0x02U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_22_MASK 0x04U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_23_MASK 0x08U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_24_MASK 0x10U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_25_MASK 0x20U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_26_MASK 0x40U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_27_MASK 0x80U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_28_MASK 0x0100U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_29_MASK 0x0200U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_210_MASK 0x0400U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_211_MASK 0x0800U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_212_MASK 0x1000U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_213_MASK 0x2000U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_214_MASK 0x4000U
  #define TMRB3_CMPLD2_COMPARATOR_LOAD_215_MASK 0x8000U
  #define TMRB3_CMPLD2                  (*((volatile word *)0x0000F079))


  /*** TMRB3_CSCTRL - Timer B Channel 3 Comparator Status and Control Register; 0x0000F07A ***/
  union {
    word Word;
  } TMRB3_CSCTRL_STR;
  
  #define TMRB3_CSCTRL_CL10_MASK        0x01U
  #define TMRB3_CSCTRL_CL11_MASK        0x02U
  #define TMRB3_CSCTRL_CL20_MASK        0x04U
  #define TMRB3_CSCTRL_CL21_MASK        0x08U
  #define TMRB3_CSCTRL_TCF1_MASK        0x10U
  #define TMRB3_CSCTRL_TCF2_MASK        0x20U
  #define TMRB3_CSCTRL_TCF1EN_MASK      0x40U
  #define TMRB3_CSCTRL_TCF2EN_MASK      0x80U
  #define TMRB3_CSCTRL_DBG_EN0_MASK     0x4000U
  #define TMRB3_CSCTRL_DBG_EN1_MASK     0x8000U
  #define TMRB3_CSCTRL_CL1_MASK         0x03U
  #define TMRB3_CSCTRL_CL1_BITNUM       0x00U
  #define TMRB3_CSCTRL_CL2_MASK         0x0CU
  #define TMRB3_CSCTRL_CL2_BITNUM       0x02U
  #define TMRB3_CSCTRL_TCF_1_MASK       0x30U
  #define TMRB3_CSCTRL_TCF_1_BITNUM     0x04U
  #define TMRB3_CSCTRL_DBG_EN_MASK      0xC000U
  #define TMRB3_CSCTRL_DBG_EN_BITNUM    0x0EU
  #define TMRB3_CSCTRL                  (*((volatile word *)0x0000F07A))


  /*** TMRB3_FILT - Timer B Channel 3 Input Filter Register; 0x0000F07B ***/
  union {
    word Word;
  } TMRB3_FILT_STR;
  
  #define TMRB3_FILT_FILT_PER0_MASK     0x01U
  #define TMRB3_FILT_FILT_PER1_MASK     0x02U
  #define TMRB3_FILT_FILT_PER2_MASK     0x04U
  #define TMRB3_FILT_FILT_PER3_MASK     0x08U
  #define TMRB3_FILT_FILT_PER4_MASK     0x10U
  #define TMRB3_FILT_FILT_PER5_MASK     0x20U
  #define TMRB3_FILT_FILT_PER6_MASK     0x40U
  #define TMRB3_FILT_FILT_PER7_MASK     0x80U
  #define TMRB3_FILT_FILT_CNT0_MASK     0x0100U
  #define TMRB3_FILT_FILT_CNT1_MASK     0x0200U
  #define TMRB3_FILT_FILT_CNT2_MASK     0x0400U
  #define TMRB3_FILT_FILT_PER_MASK      0xFFU
  #define TMRB3_FILT_FILT_PER_BITNUM    0x00U
  #define TMRB3_FILT_FILT_CNT_MASK      0x0700U
  #define TMRB3_FILT_FILT_CNT_BITNUM    0x08U
  #define TMRB3_FILT                    (*((volatile word *)0x0000F07B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} TMRB3_PRPH;

/******************************************
*** Peripheral ADC
*******************************************/
typedef volatile struct {
  /*** ADC_CTRL1 - ADC Control Register; 0x0000F080 ***/
  union {
    word Word;
  } ADC_CTRL1_STR;
  
  #define ADC_CTRL1_SMODE0_MASK         0x01U
  #define ADC_CTRL1_SMODE1_MASK         0x02U
  #define ADC_CTRL1_SMODE2_MASK         0x04U
  #define ADC_CTRL1_CHNCFG_L0_MASK      0x10U
  #define ADC_CTRL1_CHNCFG_L1_MASK      0x20U
  #define ADC_CTRL1_CHNCFG_L2_MASK      0x40U
  #define ADC_CTRL1_CHNCFG_L3_MASK      0x80U
  #define ADC_CTRL1_HLMTIE_MASK         0x0100U
  #define ADC_CTRL1_LLMTIE_MASK         0x0200U
  #define ADC_CTRL1_ZCIE_MASK           0x0400U
  #define ADC_CTRL1_EOSIE0_MASK         0x0800U
  #define ADC_CTRL1_SYNC0_MASK          0x1000U
  #define ADC_CTRL1_START0_MASK         0x2000U
  #define ADC_CTRL1_STOP0_MASK          0x4000U
  #define ADC_CTRL1_SMODE_MASK          0x07U
  #define ADC_CTRL1_SMODE_BITNUM        0x00U
  #define ADC_CTRL1_CHNCFG_L_MASK       0xF0U
  #define ADC_CTRL1_CHNCFG_L_BITNUM     0x04U
  #define ADC_CTRL1                     (*((volatile word *)0x0000F080))


  /*** ADC_CTRL2 - ADC Control Register 2; 0x0000F081 ***/
  union {
    word Word;
  } ADC_CTRL2_STR;
  
  #define ADC_CTRL2_DIV0_MASK           0x01U
  #define ADC_CTRL2_DIV1_MASK           0x02U
  #define ADC_CTRL2_DIV2_MASK           0x04U
  #define ADC_CTRL2_DIV3_MASK           0x08U
  #define ADC_CTRL2_DIV4_MASK           0x10U
  #define ADC_CTRL2_SIMULT_MASK         0x20U
  #define ADC_CTRL2_CHNCFG_H0_MASK      0x40U
  #define ADC_CTRL2_CHNCFG_H1_MASK      0x80U
  #define ADC_CTRL2_CHNCFG_H2_MASK      0x0100U
  #define ADC_CTRL2_CHNCFG_H3_MASK      0x0200U
  #define ADC_CTRL2_EOSIE1_MASK         0x0800U
  #define ADC_CTRL2_SYNC1_MASK          0x1000U
  #define ADC_CTRL2_START1_MASK         0x2000U
  #define ADC_CTRL2_STOP1_MASK          0x4000U
  #define ADC_CTRL2_DIV_MASK            0x1FU
  #define ADC_CTRL2_DIV_BITNUM          0x00U
  #define ADC_CTRL2_CHNCFG_H_MASK       0x03C0U
  #define ADC_CTRL2_CHNCFG_H_BITNUM     0x06U
  #define ADC_CTRL2                     (*((volatile word *)0x0000F081))


  /*** ADC_ZXCTRL - ADC Zero Crossing Control Register; 0x0000F082 ***/
  union {
    word Word;
  } ADC_ZXCTRL_STR;
  
  #define ADC_ZXCTRL_ZCE00_MASK         0x01U
  #define ADC_ZXCTRL_ZCE01_MASK         0x02U
  #define ADC_ZXCTRL_ZCE10_MASK         0x04U
  #define ADC_ZXCTRL_ZCE11_MASK         0x08U
  #define ADC_ZXCTRL_ZCE20_MASK         0x10U
  #define ADC_ZXCTRL_ZCE21_MASK         0x20U
  #define ADC_ZXCTRL_ZCE30_MASK         0x40U
  #define ADC_ZXCTRL_ZCE31_MASK         0x80U
  #define ADC_ZXCTRL_ZCE40_MASK         0x0100U
  #define ADC_ZXCTRL_ZCE41_MASK         0x0200U
  #define ADC_ZXCTRL_ZCE50_MASK         0x0400U
  #define ADC_ZXCTRL_ZCE51_MASK         0x0800U
  #define ADC_ZXCTRL_ZCE60_MASK         0x1000U
  #define ADC_ZXCTRL_ZCE61_MASK         0x2000U
  #define ADC_ZXCTRL_ZCE70_MASK         0x4000U
  #define ADC_ZXCTRL_ZCE71_MASK         0x8000U
  #define ADC_ZXCTRL_ZCE0_MASK          0x03U
  #define ADC_ZXCTRL_ZCE0_BITNUM        0x00U
  #define ADC_ZXCTRL_ZCE1_MASK          0x0CU
  #define ADC_ZXCTRL_ZCE1_BITNUM        0x02U
  #define ADC_ZXCTRL_ZCE2_MASK          0x30U
  #define ADC_ZXCTRL_ZCE2_BITNUM        0x04U
  #define ADC_ZXCTRL_ZCE3_MASK          0xC0U
  #define ADC_ZXCTRL_ZCE3_BITNUM        0x06U
  #define ADC_ZXCTRL_ZCE4_MASK          0x0300U
  #define ADC_ZXCTRL_ZCE4_BITNUM        0x08U
  #define ADC_ZXCTRL_ZCE5_MASK          0x0C00U
  #define ADC_ZXCTRL_ZCE5_BITNUM        0x0AU
  #define ADC_ZXCTRL_ZCE6_MASK          0x3000U
  #define ADC_ZXCTRL_ZCE6_BITNUM        0x0CU
  #define ADC_ZXCTRL_ZCE7_MASK          0xC000U
  #define ADC_ZXCTRL_ZCE7_BITNUM        0x0EU
  #define ADC_ZXCTRL                    (*((volatile word *)0x0000F082))


  /*** ADC_CLIST1 - ADC Channel List Register 1; 0x0000F083 ***/
  union {
    word Word;
  } ADC_CLIST1_STR;
  
  #define ADC_CLIST1_SAMPLE00_MASK      0x01U
  #define ADC_CLIST1_SAMPLE01_MASK      0x02U
  #define ADC_CLIST1_SAMPLE02_MASK      0x04U
  #define ADC_CLIST1_SAMPLE03_MASK      0x08U
  #define ADC_CLIST1_SAMPLE10_MASK      0x10U
  #define ADC_CLIST1_SAMPLE11_MASK      0x20U
  #define ADC_CLIST1_SAMPLE12_MASK      0x40U
  #define ADC_CLIST1_SAMPLE13_MASK      0x80U
  #define ADC_CLIST1_SAMPLE20_MASK      0x0100U
  #define ADC_CLIST1_SAMPLE21_MASK      0x0200U
  #define ADC_CLIST1_SAMPLE22_MASK      0x0400U
  #define ADC_CLIST1_SAMPLE23_MASK      0x0800U
  #define ADC_CLIST1_SAMPLE30_MASK      0x1000U
  #define ADC_CLIST1_SAMPLE31_MASK      0x2000U
  #define ADC_CLIST1_SAMPLE32_MASK      0x4000U
  #define ADC_CLIST1_SAMPLE33_MASK      0x8000U
  #define ADC_CLIST1_SAMPLE0_MASK       0x0FU
  #define ADC_CLIST1_SAMPLE0_BITNUM     0x00U
  #define ADC_CLIST1_SAMPLE1_MASK       0xF0U
  #define ADC_CLIST1_SAMPLE1_BITNUM     0x04U
  #define ADC_CLIST1_SAMPLE2_MASK       0x0F00U
  #define ADC_CLIST1_SAMPLE2_BITNUM     0x08U
  #define ADC_CLIST1_SAMPLE3_MASK       0xF000U
  #define ADC_CLIST1_SAMPLE3_BITNUM     0x0CU
  #define ADC_CLIST1                    (*((volatile word *)0x0000F083))


  /*** ADC_CLIST2 - ADC Channel List Register 2; 0x0000F084 ***/
  union {
    word Word;
  } ADC_CLIST2_STR;
  
  #define ADC_CLIST2_SAMPLE40_MASK      0x01U
  #define ADC_CLIST2_SAMPLE41_MASK      0x02U
  #define ADC_CLIST2_SAMPLE42_MASK      0x04U
  #define ADC_CLIST2_SAMPLE43_MASK      0x08U
  #define ADC_CLIST2_SAMPLE50_MASK      0x10U
  #define ADC_CLIST2_SAMPLE51_MASK      0x20U
  #define ADC_CLIST2_SAMPLE52_MASK      0x40U
  #define ADC_CLIST2_SAMPLE53_MASK      0x80U
  #define ADC_CLIST2_SAMPLE60_MASK      0x0100U
  #define ADC_CLIST2_SAMPLE61_MASK      0x0200U
  #define ADC_CLIST2_SAMPLE62_MASK      0x0400U
  #define ADC_CLIST2_SAMPLE63_MASK      0x0800U
  #define ADC_CLIST2_SAMPLE70_MASK      0x1000U
  #define ADC_CLIST2_SAMPLE71_MASK      0x2000U
  #define ADC_CLIST2_SAMPLE72_MASK      0x4000U
  #define ADC_CLIST2_SAMPLE73_MASK      0x8000U
  #define ADC_CLIST2_SAMPLE4_MASK       0x0FU
  #define ADC_CLIST2_SAMPLE4_BITNUM     0x00U
  #define ADC_CLIST2_SAMPLE5_MASK       0xF0U
  #define ADC_CLIST2_SAMPLE5_BITNUM     0x04U
  #define ADC_CLIST2_SAMPLE6_MASK       0x0F00U
  #define ADC_CLIST2_SAMPLE6_BITNUM     0x08U
  #define ADC_CLIST2_SAMPLE7_MASK       0xF000U
  #define ADC_CLIST2_SAMPLE7_BITNUM     0x0CU
  #define ADC_CLIST2                    (*((volatile word *)0x0000F084))


  /*** ADC_CLIST3 - ADC Channel List Register 3; 0x0000F085 ***/
  union {
    word Word;
  } ADC_CLIST3_STR;
  
  #define ADC_CLIST3_SAMPLE80_MASK      0x01U
  #define ADC_CLIST3_SAMPLE81_MASK      0x02U
  #define ADC_CLIST3_SAMPLE82_MASK      0x04U
  #define ADC_CLIST3_SAMPLE83_MASK      0x08U
  #define ADC_CLIST3_SAMPLE90_MASK      0x10U
  #define ADC_CLIST3_SAMPLE91_MASK      0x20U
  #define ADC_CLIST3_SAMPLE92_MASK      0x40U
  #define ADC_CLIST3_SAMPLE93_MASK      0x80U
  #define ADC_CLIST3_SAMPLE100_MASK     0x0100U
  #define ADC_CLIST3_SAMPLE101_MASK     0x0200U
  #define ADC_CLIST3_SAMPLE102_MASK     0x0400U
  #define ADC_CLIST3_SAMPLE103_MASK     0x0800U
  #define ADC_CLIST3_SAMPLE110_MASK     0x1000U
  #define ADC_CLIST3_SAMPLE111_MASK     0x2000U
  #define ADC_CLIST3_SAMPLE112_MASK     0x4000U
  #define ADC_CLIST3_SAMPLE113_MASK     0x8000U
  #define ADC_CLIST3_SAMPLE8_MASK       0x0FU
  #define ADC_CLIST3_SAMPLE8_BITNUM     0x00U
  #define ADC_CLIST3_SAMPLE9_MASK       0xF0U
  #define ADC_CLIST3_SAMPLE9_BITNUM     0x04U
  #define ADC_CLIST3_SAMPLE10_MASK      0x0F00U
  #define ADC_CLIST3_SAMPLE10_BITNUM    0x08U
  #define ADC_CLIST3_SAMPLE11_MASK      0xF000U
  #define ADC_CLIST3_SAMPLE11_BITNUM    0x0CU
  #define ADC_CLIST3                    (*((volatile word *)0x0000F085))


  /*** ADC_CLIST4 - ADC Channel List Register 4; 0x0000F086 ***/
  union {
    word Word;
  } ADC_CLIST4_STR;
  
  #define ADC_CLIST4_SAMPLE120_MASK     0x01U
  #define ADC_CLIST4_SAMPLE121_MASK     0x02U
  #define ADC_CLIST4_SAMPLE122_MASK     0x04U
  #define ADC_CLIST4_SAMPLE123_MASK     0x08U
  #define ADC_CLIST4_SAMPLE130_MASK     0x10U
  #define ADC_CLIST4_SAMPLE131_MASK     0x20U
  #define ADC_CLIST4_SAMPLE132_MASK     0x40U
  #define ADC_CLIST4_SAMPLE133_MASK     0x80U
  #define ADC_CLIST4_SAMPLE140_MASK     0x0100U
  #define ADC_CLIST4_SAMPLE141_MASK     0x0200U
  #define ADC_CLIST4_SAMPLE142_MASK     0x0400U
  #define ADC_CLIST4_SAMPLE143_MASK     0x0800U
  #define ADC_CLIST4_SAMPLE150_MASK     0x1000U
  #define ADC_CLIST4_SAMPLE151_MASK     0x2000U
  #define ADC_CLIST4_SAMPLE152_MASK     0x4000U
  #define ADC_CLIST4_SAMPLE153_MASK     0x8000U
  #define ADC_CLIST4_SAMPLE12_MASK      0x0FU
  #define ADC_CLIST4_SAMPLE12_BITNUM    0x00U
  #define ADC_CLIST4_SAMPLE13_MASK      0xF0U
  #define ADC_CLIST4_SAMPLE13_BITNUM    0x04U
  #define ADC_CLIST4_SAMPLE14_MASK      0x0F00U
  #define ADC_CLIST4_SAMPLE14_BITNUM    0x08U
  #define ADC_CLIST4_SAMPLE15_MASK      0xF000U
  #define ADC_CLIST4_SAMPLE15_BITNUM    0x0CU
  #define ADC_CLIST4                    (*((volatile word *)0x0000F086))


  /*** ADC_SDIS - ADC Sample Disable Register; 0x0000F087 ***/
  union {
    word Word;
  } ADC_SDIS_STR;
  
  #define ADC_SDIS_DS0_MASK             0x01U
  #define ADC_SDIS_DS1_MASK             0x02U
  #define ADC_SDIS_DS2_MASK             0x04U
  #define ADC_SDIS_DS3_MASK             0x08U
  #define ADC_SDIS_DS4_MASK             0x10U
  #define ADC_SDIS_DS5_MASK             0x20U
  #define ADC_SDIS_DS6_MASK             0x40U
  #define ADC_SDIS_DS7_MASK             0x80U
  #define ADC_SDIS_DS8_MASK             0x0100U
  #define ADC_SDIS_DS9_MASK             0x0200U
  #define ADC_SDIS_DS10_MASK            0x0400U
  #define ADC_SDIS_DS11_MASK            0x0800U
  #define ADC_SDIS_DS12_MASK            0x1000U
  #define ADC_SDIS_DS13_MASK            0x2000U
  #define ADC_SDIS_DS14_MASK            0x4000U
  #define ADC_SDIS_DS15_MASK            0x8000U
  #define ADC_SDIS                      (*((volatile word *)0x0000F087))


  /*** ADC_STAT - ADC Status Register; 0x0000F088 ***/
  union {
    word Word;
  } ADC_STAT_STR;
  
  #define ADC_STAT_RDY0_MASK            0x01U
  #define ADC_STAT_RDY1_MASK            0x02U
  #define ADC_STAT_RDY2_MASK            0x04U
  #define ADC_STAT_RDY3_MASK            0x08U
  #define ADC_STAT_RDY4_MASK            0x10U
  #define ADC_STAT_RDY5_MASK            0x20U
  #define ADC_STAT_RDY6_MASK            0x40U
  #define ADC_STAT_RDY7_MASK            0x80U
  #define ADC_STAT_HLMTI_MASK           0x0100U
  #define ADC_STAT_LLMTI_MASK           0x0200U
  #define ADC_STAT_ZCI_MASK             0x0400U
  #define ADC_STAT_EOSI0_MASK           0x0800U
  #define ADC_STAT_EOSI1_MASK           0x1000U
  #define ADC_STAT_CIP1_MASK            0x4000U
  #define ADC_STAT_CIP0_MASK            0x8000U
  #define ADC_STAT_RDY_MASK             0xFFU
  #define ADC_STAT_RDY_BITNUM           0x00U
  #define ADC_STAT_EOSI_MASK            0x1800U
  #define ADC_STAT_EOSI_BITNUM          0x0BU
  #define ADC_STAT                      (*((volatile word *)0x0000F088))


  /*** ADC_RDY - ADC Conversion Ready Register; 0x0000F089 ***/
  union {
    word Word;
  } ADC_RDY_STR;
  
  #define ADC_RDY_RDY0_MASK             0x01U
  #define ADC_RDY_RDY1_MASK             0x02U
  #define ADC_RDY_RDY2_MASK             0x04U
  #define ADC_RDY_RDY3_MASK             0x08U
  #define ADC_RDY_RDY4_MASK             0x10U
  #define ADC_RDY_RDY5_MASK             0x20U
  #define ADC_RDY_RDY6_MASK             0x40U
  #define ADC_RDY_RDY7_MASK             0x80U
  #define ADC_RDY_RDY8_MASK             0x0100U
  #define ADC_RDY_RDY9_MASK             0x0200U
  #define ADC_RDY_RDY10_MASK            0x0400U
  #define ADC_RDY_RDY11_MASK            0x0800U
  #define ADC_RDY_RDY12_MASK            0x1000U
  #define ADC_RDY_RDY13_MASK            0x2000U
  #define ADC_RDY_RDY14_MASK            0x4000U
  #define ADC_RDY_RDY15_MASK            0x8000U
  #define ADC_RDY                       (*((volatile word *)0x0000F089))


  /*** ADC_LIMSTAT - ADC Limit Status Register; 0x0000F08A ***/
  union {
    word Word;
  } ADC_LIMSTAT_STR;
  
  #define ADC_LIMSTAT_LLS0_MASK         0x01U
  #define ADC_LIMSTAT_LLS1_MASK         0x02U
  #define ADC_LIMSTAT_LLS2_MASK         0x04U
  #define ADC_LIMSTAT_LLS3_MASK         0x08U
  #define ADC_LIMSTAT_LLS4_MASK         0x10U
  #define ADC_LIMSTAT_LLS5_MASK         0x20U
  #define ADC_LIMSTAT_LLS6_MASK         0x40U
  #define ADC_LIMSTAT_LLS7_MASK         0x80U
  #define ADC_LIMSTAT_HLS0_MASK         0x0100U
  #define ADC_LIMSTAT_HLS1_MASK         0x0200U
  #define ADC_LIMSTAT_HLS2_MASK         0x0400U
  #define ADC_LIMSTAT_HLS3_MASK         0x0800U
  #define ADC_LIMSTAT_HLS4_MASK         0x1000U
  #define ADC_LIMSTAT_HLS5_MASK         0x2000U
  #define ADC_LIMSTAT_HLS6_MASK         0x4000U
  #define ADC_LIMSTAT_HLS7_MASK         0x8000U
  #define ADC_LIMSTAT_LLS_MASK          0xFFU
  #define ADC_LIMSTAT_LLS_BITNUM        0x00U
  #define ADC_LIMSTAT_HLS_MASK          0xFF00U
  #define ADC_LIMSTAT_HLS_BITNUM        0x08U
  #define ADC_LIMSTAT                   (*((volatile word *)0x0000F08A))


  /*** ADC_ZXSTAT - ADC Zero Crossing Status Register; 0x0000F08B ***/
  union {
    word Word;
  } ADC_ZXSTAT_STR;
  
  #define ADC_ZXSTAT_ZCS0_MASK          0x01U
  #define ADC_ZXSTAT_ZCS1_MASK          0x02U
  #define ADC_ZXSTAT_ZCS2_MASK          0x04U
  #define ADC_ZXSTAT_ZCS3_MASK          0x08U
  #define ADC_ZXSTAT_ZCS4_MASK          0x10U
  #define ADC_ZXSTAT_ZCS5_MASK          0x20U
  #define ADC_ZXSTAT_ZCS6_MASK          0x40U
  #define ADC_ZXSTAT_ZCS7_MASK          0x80U
  #define ADC_ZXSTAT_ZCS_MASK           0xFFU
  #define ADC_ZXSTAT_ZCS_BITNUM         0x00U
  #define ADC_ZXSTAT                    (*((volatile word *)0x0000F08B))


  /*** ADC_RSLT0 - ADC Result Register 0; 0x0000F08C ***/
  union {
    word Word;
  } ADC_RSLT0_STR;
  
  #define ADC_RSLT0_RSLT0_MASK          0x08U
  #define ADC_RSLT0_RSLT1_MASK          0x10U
  #define ADC_RSLT0_RSLT2_MASK          0x20U
  #define ADC_RSLT0_RSLT3_MASK          0x40U
  #define ADC_RSLT0_RSLT4_MASK          0x80U
  #define ADC_RSLT0_RSLT5_MASK          0x0100U
  #define ADC_RSLT0_RSLT6_MASK          0x0200U
  #define ADC_RSLT0_RSLT7_MASK          0x0400U
  #define ADC_RSLT0_RSLT8_MASK          0x0800U
  #define ADC_RSLT0_RSLT9_MASK          0x1000U
  #define ADC_RSLT0_RSLT10_MASK         0x2000U
  #define ADC_RSLT0_RSLT11_MASK         0x4000U
  #define ADC_RSLT0_SEXT_MASK           0x8000U
  #define ADC_RSLT0_RSLT_MASK           0x7FF8U
  #define ADC_RSLT0_RSLT_BITNUM         0x03U
  #define ADC_RSLT0                     (*((volatile word *)0x0000F08C))


  /*** ADC_RSLT1 - ADC Result Register 1; 0x0000F08D ***/
  union {
    word Word;
  } ADC_RSLT1_STR;
  
  #define ADC_RSLT1_RSLT0_MASK          0x08U
  #define ADC_RSLT1_RSLT1_MASK          0x10U
  #define ADC_RSLT1_RSLT2_MASK          0x20U
  #define ADC_RSLT1_RSLT3_MASK          0x40U
  #define ADC_RSLT1_RSLT4_MASK          0x80U
  #define ADC_RSLT1_RSLT5_MASK          0x0100U
  #define ADC_RSLT1_RSLT6_MASK          0x0200U
  #define ADC_RSLT1_RSLT7_MASK          0x0400U
  #define ADC_RSLT1_RSLT8_MASK          0x0800U
  #define ADC_RSLT1_RSLT9_MASK          0x1000U
  #define ADC_RSLT1_RSLT10_MASK         0x2000U
  #define ADC_RSLT1_RSLT11_MASK         0x4000U
  #define ADC_RSLT1_SEXT_MASK           0x8000U
  #define ADC_RSLT1_RSLT_MASK           0x7FF8U
  #define ADC_RSLT1_RSLT_BITNUM         0x03U
  #define ADC_RSLT1                     (*((volatile word *)0x0000F08D))


  /*** ADC_RSLT2 - ADC Result Register 2; 0x0000F08E ***/
  union {
    word Word;
  } ADC_RSLT2_STR;
  
  #define ADC_RSLT2_RSLT0_MASK          0x08U
  #define ADC_RSLT2_RSLT1_MASK          0x10U
  #define ADC_RSLT2_RSLT2_MASK          0x20U
  #define ADC_RSLT2_RSLT3_MASK          0x40U
  #define ADC_RSLT2_RSLT4_MASK          0x80U
  #define ADC_RSLT2_RSLT5_MASK          0x0100U
  #define ADC_RSLT2_RSLT6_MASK          0x0200U
  #define ADC_RSLT2_RSLT7_MASK          0x0400U
  #define ADC_RSLT2_RSLT8_MASK          0x0800U
  #define ADC_RSLT2_RSLT9_MASK          0x1000U
  #define ADC_RSLT2_RSLT10_MASK         0x2000U
  #define ADC_RSLT2_RSLT11_MASK         0x4000U
  #define ADC_RSLT2_SEXT_MASK           0x8000U
  #define ADC_RSLT2_RSLT_MASK           0x7FF8U
  #define ADC_RSLT2_RSLT_BITNUM         0x03U
  #define ADC_RSLT2                     (*((volatile word *)0x0000F08E))


  /*** ADC_RSLT3 - ADC Result Register 3; 0x0000F08F ***/
  union {
    word Word;
  } ADC_RSLT3_STR;
  
  #define ADC_RSLT3_RSLT0_MASK          0x08U
  #define ADC_RSLT3_RSLT1_MASK          0x10U
  #define ADC_RSLT3_RSLT2_MASK          0x20U
  #define ADC_RSLT3_RSLT3_MASK          0x40U
  #define ADC_RSLT3_RSLT4_MASK          0x80U
  #define ADC_RSLT3_RSLT5_MASK          0x0100U
  #define ADC_RSLT3_RSLT6_MASK          0x0200U
  #define ADC_RSLT3_RSLT7_MASK          0x0400U
  #define ADC_RSLT3_RSLT8_MASK          0x0800U
  #define ADC_RSLT3_RSLT9_MASK          0x1000U
  #define ADC_RSLT3_RSLT10_MASK         0x2000U
  #define ADC_RSLT3_RSLT11_MASK         0x4000U
  #define ADC_RSLT3_SEXT_MASK           0x8000U
  #define ADC_RSLT3_RSLT_MASK           0x7FF8U
  #define ADC_RSLT3_RSLT_BITNUM         0x03U
  #define ADC_RSLT3                     (*((volatile word *)0x0000F08F))


  /*** ADC_RSLT4 - ADC Result Register 4; 0x0000F090 ***/
  union {
    word Word;
  } ADC_RSLT4_STR;
  
  #define ADC_RSLT4_RSLT0_MASK          0x08U
  #define ADC_RSLT4_RSLT1_MASK          0x10U
  #define ADC_RSLT4_RSLT2_MASK          0x20U
  #define ADC_RSLT4_RSLT3_MASK          0x40U
  #define ADC_RSLT4_RSLT4_MASK          0x80U
  #define ADC_RSLT4_RSLT5_MASK          0x0100U
  #define ADC_RSLT4_RSLT6_MASK          0x0200U
  #define ADC_RSLT4_RSLT7_MASK          0x0400U
  #define ADC_RSLT4_RSLT8_MASK          0x0800U
  #define ADC_RSLT4_RSLT9_MASK          0x1000U
  #define ADC_RSLT4_RSLT10_MASK         0x2000U
  #define ADC_RSLT4_RSLT11_MASK         0x4000U
  #define ADC_RSLT4_SEXT_MASK           0x8000U
  #define ADC_RSLT4_RSLT_MASK           0x7FF8U
  #define ADC_RSLT4_RSLT_BITNUM         0x03U
  #define ADC_RSLT4                     (*((volatile word *)0x0000F090))


  /*** ADC_RSLT5 - ADC Result Register 5; 0x0000F091 ***/
  union {
    word Word;
  } ADC_RSLT5_STR;
  
  #define ADC_RSLT5_RSLT0_MASK          0x08U
  #define ADC_RSLT5_RSLT1_MASK          0x10U
  #define ADC_RSLT5_RSLT2_MASK          0x20U
  #define ADC_RSLT5_RSLT3_MASK          0x40U
  #define ADC_RSLT5_RSLT4_MASK          0x80U
  #define ADC_RSLT5_RSLT5_MASK          0x0100U
  #define ADC_RSLT5_RSLT6_MASK          0x0200U
  #define ADC_RSLT5_RSLT7_MASK          0x0400U
  #define ADC_RSLT5_RSLT8_MASK          0x0800U
  #define ADC_RSLT5_RSLT9_MASK          0x1000U
  #define ADC_RSLT5_RSLT10_MASK         0x2000U
  #define ADC_RSLT5_RSLT11_MASK         0x4000U
  #define ADC_RSLT5_SEXT_MASK           0x8000U
  #define ADC_RSLT5_RSLT_MASK           0x7FF8U
  #define ADC_RSLT5_RSLT_BITNUM         0x03U
  #define ADC_RSLT5                     (*((volatile word *)0x0000F091))


  /*** ADC_RSLT6 - ADC Result Register 6; 0x0000F092 ***/
  union {
    word Word;
  } ADC_RSLT6_STR;
  
  #define ADC_RSLT6_RSLT0_MASK          0x08U
  #define ADC_RSLT6_RSLT1_MASK          0x10U
  #define ADC_RSLT6_RSLT2_MASK          0x20U
  #define ADC_RSLT6_RSLT3_MASK          0x40U
  #define ADC_RSLT6_RSLT4_MASK          0x80U
  #define ADC_RSLT6_RSLT5_MASK          0x0100U
  #define ADC_RSLT6_RSLT6_MASK          0x0200U
  #define ADC_RSLT6_RSLT7_MASK          0x0400U
  #define ADC_RSLT6_RSLT8_MASK          0x0800U
  #define ADC_RSLT6_RSLT9_MASK          0x1000U
  #define ADC_RSLT6_RSLT10_MASK         0x2000U
  #define ADC_RSLT6_RSLT11_MASK         0x4000U
  #define ADC_RSLT6_SEXT_MASK           0x8000U
  #define ADC_RSLT6_RSLT_MASK           0x7FF8U
  #define ADC_RSLT6_RSLT_BITNUM         0x03U
  #define ADC_RSLT6                     (*((volatile word *)0x0000F092))


  /*** ADC_RSLT7 - ADC Result Register 7; 0x0000F093 ***/
  union {
    word Word;
  } ADC_RSLT7_STR;
  
  #define ADC_RSLT7_RSLT0_MASK          0x08U
  #define ADC_RSLT7_RSLT1_MASK          0x10U
  #define ADC_RSLT7_RSLT2_MASK          0x20U
  #define ADC_RSLT7_RSLT3_MASK          0x40U
  #define ADC_RSLT7_RSLT4_MASK          0x80U
  #define ADC_RSLT7_RSLT5_MASK          0x0100U
  #define ADC_RSLT7_RSLT6_MASK          0x0200U
  #define ADC_RSLT7_RSLT7_MASK          0x0400U
  #define ADC_RSLT7_RSLT8_MASK          0x0800U
  #define ADC_RSLT7_RSLT9_MASK          0x1000U
  #define ADC_RSLT7_RSLT10_MASK         0x2000U
  #define ADC_RSLT7_RSLT11_MASK         0x4000U
  #define ADC_RSLT7_SEXT_MASK           0x8000U
  #define ADC_RSLT7_RSLT_MASK           0x7FF8U
  #define ADC_RSLT7_RSLT_BITNUM         0x03U
  #define ADC_RSLT7                     (*((volatile word *)0x0000F093))


  /*** ADC_RSLT8 - ADC Result Register 8; 0x0000F094 ***/
  union {
    word Word;
  } ADC_RSLT8_STR;
  
  #define ADC_RSLT8_RSLT0_MASK          0x08U
  #define ADC_RSLT8_RSLT1_MASK          0x10U
  #define ADC_RSLT8_RSLT2_MASK          0x20U
  #define ADC_RSLT8_RSLT3_MASK          0x40U
  #define ADC_RSLT8_RSLT4_MASK          0x80U
  #define ADC_RSLT8_RSLT5_MASK          0x0100U
  #define ADC_RSLT8_RSLT6_MASK          0x0200U
  #define ADC_RSLT8_RSLT7_MASK          0x0400U
  #define ADC_RSLT8_RSLT8_MASK          0x0800U
  #define ADC_RSLT8_RSLT9_MASK          0x1000U
  #define ADC_RSLT8_RSLT10_MASK         0x2000U
  #define ADC_RSLT8_RSLT11_MASK         0x4000U
  #define ADC_RSLT8_SEXT_MASK           0x8000U
  #define ADC_RSLT8_RSLT_MASK           0x7FF8U
  #define ADC_RSLT8_RSLT_BITNUM         0x03U
  #define ADC_RSLT8                     (*((volatile word *)0x0000F094))


  /*** ADC_RSLT9 - ADC Result Register 9; 0x0000F095 ***/
  union {
    word Word;
  } ADC_RSLT9_STR;
  
  #define ADC_RSLT9_RSLT0_MASK          0x08U
  #define ADC_RSLT9_RSLT1_MASK          0x10U
  #define ADC_RSLT9_RSLT2_MASK          0x20U
  #define ADC_RSLT9_RSLT3_MASK          0x40U
  #define ADC_RSLT9_RSLT4_MASK          0x80U
  #define ADC_RSLT9_RSLT5_MASK          0x0100U
  #define ADC_RSLT9_RSLT6_MASK          0x0200U
  #define ADC_RSLT9_RSLT7_MASK          0x0400U
  #define ADC_RSLT9_RSLT8_MASK          0x0800U
  #define ADC_RSLT9_RSLT9_MASK          0x1000U
  #define ADC_RSLT9_RSLT10_MASK         0x2000U
  #define ADC_RSLT9_RSLT11_MASK         0x4000U
  #define ADC_RSLT9_SEXT_MASK           0x8000U
  #define ADC_RSLT9_RSLT_MASK           0x7FF8U
  #define ADC_RSLT9_RSLT_BITNUM         0x03U
  #define ADC_RSLT9                     (*((volatile word *)0x0000F095))


  /*** ADC_RSLT10 - ADC Result Register 10; 0x0000F096 ***/
  union {
    word Word;
  } ADC_RSLT10_STR;
  
  #define ADC_RSLT10_RSLT0_MASK         0x08U
  #define ADC_RSLT10_RSLT1_MASK         0x10U
  #define ADC_RSLT10_RSLT2_MASK         0x20U
  #define ADC_RSLT10_RSLT3_MASK         0x40U
  #define ADC_RSLT10_RSLT4_MASK         0x80U
  #define ADC_RSLT10_RSLT5_MASK         0x0100U
  #define ADC_RSLT10_RSLT6_MASK         0x0200U
  #define ADC_RSLT10_RSLT7_MASK         0x0400U
  #define ADC_RSLT10_RSLT8_MASK         0x0800U
  #define ADC_RSLT10_RSLT9_MASK         0x1000U
  #define ADC_RSLT10_RSLT10_MASK        0x2000U
  #define ADC_RSLT10_RSLT11_MASK        0x4000U
  #define ADC_RSLT10_SEXT_MASK          0x8000U
  #define ADC_RSLT10_RSLT_MASK          0x7FF8U
  #define ADC_RSLT10_RSLT_BITNUM        0x03U
  #define ADC_RSLT10                    (*((volatile word *)0x0000F096))


  /*** ADC_RSLT11 - ADC Result Register 11; 0x0000F097 ***/
  union {
    word Word;
  } ADC_RSLT11_STR;
  
  #define ADC_RSLT11_RSLT0_MASK         0x08U
  #define ADC_RSLT11_RSLT1_MASK         0x10U
  #define ADC_RSLT11_RSLT2_MASK         0x20U
  #define ADC_RSLT11_RSLT3_MASK         0x40U
  #define ADC_RSLT11_RSLT4_MASK         0x80U
  #define ADC_RSLT11_RSLT5_MASK         0x0100U
  #define ADC_RSLT11_RSLT6_MASK         0x0200U
  #define ADC_RSLT11_RSLT7_MASK         0x0400U
  #define ADC_RSLT11_RSLT8_MASK         0x0800U
  #define ADC_RSLT11_RSLT9_MASK         0x1000U
  #define ADC_RSLT11_RSLT10_MASK        0x2000U
  #define ADC_RSLT11_RSLT11_MASK        0x4000U
  #define ADC_RSLT11_SEXT_MASK          0x8000U
  #define ADC_RSLT11_RSLT_MASK          0x7FF8U
  #define ADC_RSLT11_RSLT_BITNUM        0x03U
  #define ADC_RSLT11                    (*((volatile word *)0x0000F097))


  /*** ADC_RSLT12 - ADC Result Register 12; 0x0000F098 ***/
  union {
    word Word;
  } ADC_RSLT12_STR;
  
  #define ADC_RSLT12_RSLT0_MASK         0x08U
  #define ADC_RSLT12_RSLT1_MASK         0x10U
  #define ADC_RSLT12_RSLT2_MASK         0x20U
  #define ADC_RSLT12_RSLT3_MASK         0x40U
  #define ADC_RSLT12_RSLT4_MASK         0x80U
  #define ADC_RSLT12_RSLT5_MASK         0x0100U
  #define ADC_RSLT12_RSLT6_MASK         0x0200U
  #define ADC_RSLT12_RSLT7_MASK         0x0400U
  #define ADC_RSLT12_RSLT8_MASK         0x0800U
  #define ADC_RSLT12_RSLT9_MASK         0x1000U
  #define ADC_RSLT12_RSLT10_MASK        0x2000U
  #define ADC_RSLT12_RSLT11_MASK        0x4000U
  #define ADC_RSLT12_SEXT_MASK          0x8000U
  #define ADC_RSLT12_RSLT_MASK          0x7FF8U
  #define ADC_RSLT12_RSLT_BITNUM        0x03U
  #define ADC_RSLT12                    (*((volatile word *)0x0000F098))


  /*** ADC_RSLT13 - ADC Result Register 13; 0x0000F099 ***/
  union {
    word Word;
  } ADC_RSLT13_STR;
  
  #define ADC_RSLT13_RSLT0_MASK         0x08U
  #define ADC_RSLT13_RSLT1_MASK         0x10U
  #define ADC_RSLT13_RSLT2_MASK         0x20U
  #define ADC_RSLT13_RSLT3_MASK         0x40U
  #define ADC_RSLT13_RSLT4_MASK         0x80U
  #define ADC_RSLT13_RSLT5_MASK         0x0100U
  #define ADC_RSLT13_RSLT6_MASK         0x0200U
  #define ADC_RSLT13_RSLT7_MASK         0x0400U
  #define ADC_RSLT13_RSLT8_MASK         0x0800U
  #define ADC_RSLT13_RSLT9_MASK         0x1000U
  #define ADC_RSLT13_RSLT10_MASK        0x2000U
  #define ADC_RSLT13_RSLT11_MASK        0x4000U
  #define ADC_RSLT13_SEXT_MASK          0x8000U
  #define ADC_RSLT13_RSLT_MASK          0x7FF8U
  #define ADC_RSLT13_RSLT_BITNUM        0x03U
  #define ADC_RSLT13                    (*((volatile word *)0x0000F099))


  /*** ADC_RSLT14 - ADC Result Register 14; 0x0000F09A ***/
  union {
    word Word;
  } ADC_RSLT14_STR;
  
  #define ADC_RSLT14_RSLT0_MASK         0x08U
  #define ADC_RSLT14_RSLT1_MASK         0x10U
  #define ADC_RSLT14_RSLT2_MASK         0x20U
  #define ADC_RSLT14_RSLT3_MASK         0x40U
  #define ADC_RSLT14_RSLT4_MASK         0x80U
  #define ADC_RSLT14_RSLT5_MASK         0x0100U
  #define ADC_RSLT14_RSLT6_MASK         0x0200U
  #define ADC_RSLT14_RSLT7_MASK         0x0400U
  #define ADC_RSLT14_RSLT8_MASK         0x0800U
  #define ADC_RSLT14_RSLT9_MASK         0x1000U
  #define ADC_RSLT14_RSLT10_MASK        0x2000U
  #define ADC_RSLT14_RSLT11_MASK        0x4000U
  #define ADC_RSLT14_SEXT_MASK          0x8000U
  #define ADC_RSLT14_RSLT_MASK          0x7FF8U
  #define ADC_RSLT14_RSLT_BITNUM        0x03U
  #define ADC_RSLT14                    (*((volatile word *)0x0000F09A))


  /*** ADC_RSLT15 - ADC Result Register 15; 0x0000F09B ***/
  union {
    word Word;
  } ADC_RSLT15_STR;
  
  #define ADC_RSLT15_RSLT0_MASK         0x08U
  #define ADC_RSLT15_RSLT1_MASK         0x10U
  #define ADC_RSLT15_RSLT2_MASK         0x20U
  #define ADC_RSLT15_RSLT3_MASK         0x40U
  #define ADC_RSLT15_RSLT4_MASK         0x80U
  #define ADC_RSLT15_RSLT5_MASK         0x0100U
  #define ADC_RSLT15_RSLT6_MASK         0x0200U
  #define ADC_RSLT15_RSLT7_MASK         0x0400U
  #define ADC_RSLT15_RSLT8_MASK         0x0800U
  #define ADC_RSLT15_RSLT9_MASK         0x1000U
  #define ADC_RSLT15_RSLT10_MASK        0x2000U
  #define ADC_RSLT15_RSLT11_MASK        0x4000U
  #define ADC_RSLT15_SEXT_MASK          0x8000U
  #define ADC_RSLT15_RSLT_MASK          0x7FF8U
  #define ADC_RSLT15_RSLT_BITNUM        0x03U
  #define ADC_RSLT15                    (*((volatile word *)0x0000F09B))


  /*** ADC_LOLIM0 - ADC Low Limit Register 0; 0x0000F09C ***/
  union {
    word Word;
  } ADC_LOLIM0_STR;
  
  #define ADC_LOLIM0_LLMT0_MASK         0x08U
  #define ADC_LOLIM0_LLMT1_MASK         0x10U
  #define ADC_LOLIM0_LLMT2_MASK         0x20U
  #define ADC_LOLIM0_LLMT3_MASK         0x40U
  #define ADC_LOLIM0_LLMT4_MASK         0x80U
  #define ADC_LOLIM0_LLMT5_MASK         0x0100U
  #define ADC_LOLIM0_LLMT6_MASK         0x0200U
  #define ADC_LOLIM0_LLMT7_MASK         0x0400U
  #define ADC_LOLIM0_LLMT8_MASK         0x0800U
  #define ADC_LOLIM0_LLMT9_MASK         0x1000U
  #define ADC_LOLIM0_LLMT10_MASK        0x2000U
  #define ADC_LOLIM0_LLMT11_MASK        0x4000U
  #define ADC_LOLIM0_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM0_LLMT_BITNUM        0x03U
  #define ADC_LOLIM0                    (*((volatile word *)0x0000F09C))


  /*** ADC_LOLIM1 - ADC Low Limit Register 1; 0x0000F09D ***/
  union {
    word Word;
  } ADC_LOLIM1_STR;
  
  #define ADC_LOLIM1_LLMT0_MASK         0x08U
  #define ADC_LOLIM1_LLMT1_MASK         0x10U
  #define ADC_LOLIM1_LLMT2_MASK         0x20U
  #define ADC_LOLIM1_LLMT3_MASK         0x40U
  #define ADC_LOLIM1_LLMT4_MASK         0x80U
  #define ADC_LOLIM1_LLMT5_MASK         0x0100U
  #define ADC_LOLIM1_LLMT6_MASK         0x0200U
  #define ADC_LOLIM1_LLMT7_MASK         0x0400U
  #define ADC_LOLIM1_LLMT8_MASK         0x0800U
  #define ADC_LOLIM1_LLMT9_MASK         0x1000U
  #define ADC_LOLIM1_LLMT10_MASK        0x2000U
  #define ADC_LOLIM1_LLMT11_MASK        0x4000U
  #define ADC_LOLIM1_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM1_LLMT_BITNUM        0x03U
  #define ADC_LOLIM1                    (*((volatile word *)0x0000F09D))


  /*** ADC_LOLIM2 - ADC Low Limit Register 2; 0x0000F09E ***/
  union {
    word Word;
  } ADC_LOLIM2_STR;
  
  #define ADC_LOLIM2_LLMT0_MASK         0x08U
  #define ADC_LOLIM2_LLMT1_MASK         0x10U
  #define ADC_LOLIM2_LLMT2_MASK         0x20U
  #define ADC_LOLIM2_LLMT3_MASK         0x40U
  #define ADC_LOLIM2_LLMT4_MASK         0x80U
  #define ADC_LOLIM2_LLMT5_MASK         0x0100U
  #define ADC_LOLIM2_LLMT6_MASK         0x0200U
  #define ADC_LOLIM2_LLMT7_MASK         0x0400U
  #define ADC_LOLIM2_LLMT8_MASK         0x0800U
  #define ADC_LOLIM2_LLMT9_MASK         0x1000U
  #define ADC_LOLIM2_LLMT10_MASK        0x2000U
  #define ADC_LOLIM2_LLMT11_MASK        0x4000U
  #define ADC_LOLIM2_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM2_LLMT_BITNUM        0x03U
  #define ADC_LOLIM2                    (*((volatile word *)0x0000F09E))


  /*** ADC_LOLIM3 - ADC Low Limit Register 3; 0x0000F09F ***/
  union {
    word Word;
  } ADC_LOLIM3_STR;
  
  #define ADC_LOLIM3_LLMT0_MASK         0x08U
  #define ADC_LOLIM3_LLMT1_MASK         0x10U
  #define ADC_LOLIM3_LLMT2_MASK         0x20U
  #define ADC_LOLIM3_LLMT3_MASK         0x40U
  #define ADC_LOLIM3_LLMT4_MASK         0x80U
  #define ADC_LOLIM3_LLMT5_MASK         0x0100U
  #define ADC_LOLIM3_LLMT6_MASK         0x0200U
  #define ADC_LOLIM3_LLMT7_MASK         0x0400U
  #define ADC_LOLIM3_LLMT8_MASK         0x0800U
  #define ADC_LOLIM3_LLMT9_MASK         0x1000U
  #define ADC_LOLIM3_LLMT10_MASK        0x2000U
  #define ADC_LOLIM3_LLMT11_MASK        0x4000U
  #define ADC_LOLIM3_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM3_LLMT_BITNUM        0x03U
  #define ADC_LOLIM3                    (*((volatile word *)0x0000F09F))


  /*** ADC_LOLIM4 - ADC Low Limit Register 4; 0x0000F0A0 ***/
  union {
    word Word;
  } ADC_LOLIM4_STR;
  
  #define ADC_LOLIM4_LLMT0_MASK         0x08U
  #define ADC_LOLIM4_LLMT1_MASK         0x10U
  #define ADC_LOLIM4_LLMT2_MASK         0x20U
  #define ADC_LOLIM4_LLMT3_MASK         0x40U
  #define ADC_LOLIM4_LLMT4_MASK         0x80U
  #define ADC_LOLIM4_LLMT5_MASK         0x0100U
  #define ADC_LOLIM4_LLMT6_MASK         0x0200U
  #define ADC_LOLIM4_LLMT7_MASK         0x0400U
  #define ADC_LOLIM4_LLMT8_MASK         0x0800U
  #define ADC_LOLIM4_LLMT9_MASK         0x1000U
  #define ADC_LOLIM4_LLMT10_MASK        0x2000U
  #define ADC_LOLIM4_LLMT11_MASK        0x4000U
  #define ADC_LOLIM4_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM4_LLMT_BITNUM        0x03U
  #define ADC_LOLIM4                    (*((volatile word *)0x0000F0A0))


  /*** ADC_LOLIM5 - ADC Low Limit Register 5; 0x0000F0A1 ***/
  union {
    word Word;
  } ADC_LOLIM5_STR;
  
  #define ADC_LOLIM5_LLMT0_MASK         0x08U
  #define ADC_LOLIM5_LLMT1_MASK         0x10U
  #define ADC_LOLIM5_LLMT2_MASK         0x20U
  #define ADC_LOLIM5_LLMT3_MASK         0x40U
  #define ADC_LOLIM5_LLMT4_MASK         0x80U
  #define ADC_LOLIM5_LLMT5_MASK         0x0100U
  #define ADC_LOLIM5_LLMT6_MASK         0x0200U
  #define ADC_LOLIM5_LLMT7_MASK         0x0400U
  #define ADC_LOLIM5_LLMT8_MASK         0x0800U
  #define ADC_LOLIM5_LLMT9_MASK         0x1000U
  #define ADC_LOLIM5_LLMT10_MASK        0x2000U
  #define ADC_LOLIM5_LLMT11_MASK        0x4000U
  #define ADC_LOLIM5_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM5_LLMT_BITNUM        0x03U
  #define ADC_LOLIM5                    (*((volatile word *)0x0000F0A1))


  /*** ADC_LOLIM6 - ADC Low Limit Register 6; 0x0000F0A2 ***/
  union {
    word Word;
  } ADC_LOLIM6_STR;
  
  #define ADC_LOLIM6_LLMT0_MASK         0x08U
  #define ADC_LOLIM6_LLMT1_MASK         0x10U
  #define ADC_LOLIM6_LLMT2_MASK         0x20U
  #define ADC_LOLIM6_LLMT3_MASK         0x40U
  #define ADC_LOLIM6_LLMT4_MASK         0x80U
  #define ADC_LOLIM6_LLMT5_MASK         0x0100U
  #define ADC_LOLIM6_LLMT6_MASK         0x0200U
  #define ADC_LOLIM6_LLMT7_MASK         0x0400U
  #define ADC_LOLIM6_LLMT8_MASK         0x0800U
  #define ADC_LOLIM6_LLMT9_MASK         0x1000U
  #define ADC_LOLIM6_LLMT10_MASK        0x2000U
  #define ADC_LOLIM6_LLMT11_MASK        0x4000U
  #define ADC_LOLIM6_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM6_LLMT_BITNUM        0x03U
  #define ADC_LOLIM6                    (*((volatile word *)0x0000F0A2))


  /*** ADC_LOLIM7 - ADC Low Limit Register 7; 0x0000F0A3 ***/
  union {
    word Word;
  } ADC_LOLIM7_STR;
  
  #define ADC_LOLIM7_LLMT0_MASK         0x08U
  #define ADC_LOLIM7_LLMT1_MASK         0x10U
  #define ADC_LOLIM7_LLMT2_MASK         0x20U
  #define ADC_LOLIM7_LLMT3_MASK         0x40U
  #define ADC_LOLIM7_LLMT4_MASK         0x80U
  #define ADC_LOLIM7_LLMT5_MASK         0x0100U
  #define ADC_LOLIM7_LLMT6_MASK         0x0200U
  #define ADC_LOLIM7_LLMT7_MASK         0x0400U
  #define ADC_LOLIM7_LLMT8_MASK         0x0800U
  #define ADC_LOLIM7_LLMT9_MASK         0x1000U
  #define ADC_LOLIM7_LLMT10_MASK        0x2000U
  #define ADC_LOLIM7_LLMT11_MASK        0x4000U
  #define ADC_LOLIM7_LLMT_MASK          0x7FF8U
  #define ADC_LOLIM7_LLMT_BITNUM        0x03U
  #define ADC_LOLIM7                    (*((volatile word *)0x0000F0A3))


  /*** ADC_HILIM0 - ADC High Limit Register 0; 0x0000F0A4 ***/
  union {
    word Word;
  } ADC_HILIM0_STR;
  
  #define ADC_HILIM0_HLMT0_MASK         0x08U
  #define ADC_HILIM0_HLMT1_MASK         0x10U
  #define ADC_HILIM0_HLMT2_MASK         0x20U
  #define ADC_HILIM0_HLMT3_MASK         0x40U
  #define ADC_HILIM0_HLMT4_MASK         0x80U
  #define ADC_HILIM0_HLMT5_MASK         0x0100U
  #define ADC_HILIM0_HLMT6_MASK         0x0200U
  #define ADC_HILIM0_HLMT7_MASK         0x0400U
  #define ADC_HILIM0_HLMT8_MASK         0x0800U
  #define ADC_HILIM0_HLMT9_MASK         0x1000U
  #define ADC_HILIM0_HLMT10_MASK        0x2000U
  #define ADC_HILIM0_HLMT11_MASK        0x4000U
  #define ADC_HILIM0_HLMT_MASK          0x7FF8U
  #define ADC_HILIM0_HLMT_BITNUM        0x03U
  #define ADC_HILIM0                    (*((volatile word *)0x0000F0A4))


  /*** ADC_HILIM1 - ADC High Limit Register 1; 0x0000F0A5 ***/
  union {
    word Word;
  } ADC_HILIM1_STR;
  
  #define ADC_HILIM1_HLMT0_MASK         0x08U
  #define ADC_HILIM1_HLMT1_MASK         0x10U
  #define ADC_HILIM1_HLMT2_MASK         0x20U
  #define ADC_HILIM1_HLMT3_MASK         0x40U
  #define ADC_HILIM1_HLMT4_MASK         0x80U
  #define ADC_HILIM1_HLMT5_MASK         0x0100U
  #define ADC_HILIM1_HLMT6_MASK         0x0200U
  #define ADC_HILIM1_HLMT7_MASK         0x0400U
  #define ADC_HILIM1_HLMT8_MASK         0x0800U
  #define ADC_HILIM1_HLMT9_MASK         0x1000U
  #define ADC_HILIM1_HLMT10_MASK        0x2000U
  #define ADC_HILIM1_HLMT11_MASK        0x4000U
  #define ADC_HILIM1_HLMT_MASK          0x7FF8U
  #define ADC_HILIM1_HLMT_BITNUM        0x03U
  #define ADC_HILIM1                    (*((volatile word *)0x0000F0A5))


  /*** ADC_HILIM2 - ADC High Limit Register 2; 0x0000F0A6 ***/
  union {
    word Word;
  } ADC_HILIM2_STR;
  
  #define ADC_HILIM2_HLMT0_MASK         0x08U
  #define ADC_HILIM2_HLMT1_MASK         0x10U
  #define ADC_HILIM2_HLMT2_MASK         0x20U
  #define ADC_HILIM2_HLMT3_MASK         0x40U
  #define ADC_HILIM2_HLMT4_MASK         0x80U
  #define ADC_HILIM2_HLMT5_MASK         0x0100U
  #define ADC_HILIM2_HLMT6_MASK         0x0200U
  #define ADC_HILIM2_HLMT7_MASK         0x0400U
  #define ADC_HILIM2_HLMT8_MASK         0x0800U
  #define ADC_HILIM2_HLMT9_MASK         0x1000U
  #define ADC_HILIM2_HLMT10_MASK        0x2000U
  #define ADC_HILIM2_HLMT11_MASK        0x4000U
  #define ADC_HILIM2_HLMT_MASK          0x7FF8U
  #define ADC_HILIM2_HLMT_BITNUM        0x03U
  #define ADC_HILIM2                    (*((volatile word *)0x0000F0A6))


  /*** ADC_HILIM3 - ADC High Limit Register 3; 0x0000F0A7 ***/
  union {
    word Word;
  } ADC_HILIM3_STR;
  
  #define ADC_HILIM3_HLMT0_MASK         0x08U
  #define ADC_HILIM3_HLMT1_MASK         0x10U
  #define ADC_HILIM3_HLMT2_MASK         0x20U
  #define ADC_HILIM3_HLMT3_MASK         0x40U
  #define ADC_HILIM3_HLMT4_MASK         0x80U
  #define ADC_HILIM3_HLMT5_MASK         0x0100U
  #define ADC_HILIM3_HLMT6_MASK         0x0200U
  #define ADC_HILIM3_HLMT7_MASK         0x0400U
  #define ADC_HILIM3_HLMT8_MASK         0x0800U
  #define ADC_HILIM3_HLMT9_MASK         0x1000U
  #define ADC_HILIM3_HLMT10_MASK        0x2000U
  #define ADC_HILIM3_HLMT11_MASK        0x4000U
  #define ADC_HILIM3_HLMT_MASK          0x7FF8U
  #define ADC_HILIM3_HLMT_BITNUM        0x03U
  #define ADC_HILIM3                    (*((volatile word *)0x0000F0A7))


  /*** ADC_HILIM4 - ADC High Limit Register 4; 0x0000F0A8 ***/
  union {
    word Word;
  } ADC_HILIM4_STR;
  
  #define ADC_HILIM4_HLMT0_MASK         0x08U
  #define ADC_HILIM4_HLMT1_MASK         0x10U
  #define ADC_HILIM4_HLMT2_MASK         0x20U
  #define ADC_HILIM4_HLMT3_MASK         0x40U
  #define ADC_HILIM4_HLMT4_MASK         0x80U
  #define ADC_HILIM4_HLMT5_MASK         0x0100U
  #define ADC_HILIM4_HLMT6_MASK         0x0200U
  #define ADC_HILIM4_HLMT7_MASK         0x0400U
  #define ADC_HILIM4_HLMT8_MASK         0x0800U
  #define ADC_HILIM4_HLMT9_MASK         0x1000U
  #define ADC_HILIM4_HLMT10_MASK        0x2000U
  #define ADC_HILIM4_HLMT11_MASK        0x4000U
  #define ADC_HILIM4_HLMT_MASK          0x7FF8U
  #define ADC_HILIM4_HLMT_BITNUM        0x03U
  #define ADC_HILIM4                    (*((volatile word *)0x0000F0A8))


  /*** ADC_HILIM5 - ADC High Limit Register 5; 0x0000F0A9 ***/
  union {
    word Word;
  } ADC_HILIM5_STR;
  
  #define ADC_HILIM5_HLMT0_MASK         0x08U
  #define ADC_HILIM5_HLMT1_MASK         0x10U
  #define ADC_HILIM5_HLMT2_MASK         0x20U
  #define ADC_HILIM5_HLMT3_MASK         0x40U
  #define ADC_HILIM5_HLMT4_MASK         0x80U
  #define ADC_HILIM5_HLMT5_MASK         0x0100U
  #define ADC_HILIM5_HLMT6_MASK         0x0200U
  #define ADC_HILIM5_HLMT7_MASK         0x0400U
  #define ADC_HILIM5_HLMT8_MASK         0x0800U
  #define ADC_HILIM5_HLMT9_MASK         0x1000U
  #define ADC_HILIM5_HLMT10_MASK        0x2000U
  #define ADC_HILIM5_HLMT11_MASK        0x4000U
  #define ADC_HILIM5_HLMT_MASK          0x7FF8U
  #define ADC_HILIM5_HLMT_BITNUM        0x03U
  #define ADC_HILIM5                    (*((volatile word *)0x0000F0A9))


  /*** ADC_HILIM6 - ADC High Limit Register 6; 0x0000F0AA ***/
  union {
    word Word;
  } ADC_HILIM6_STR;
  
  #define ADC_HILIM6_HLMT0_MASK         0x08U
  #define ADC_HILIM6_HLMT1_MASK         0x10U
  #define ADC_HILIM6_HLMT2_MASK         0x20U
  #define ADC_HILIM6_HLMT3_MASK         0x40U
  #define ADC_HILIM6_HLMT4_MASK         0x80U
  #define ADC_HILIM6_HLMT5_MASK         0x0100U
  #define ADC_HILIM6_HLMT6_MASK         0x0200U
  #define ADC_HILIM6_HLMT7_MASK         0x0400U
  #define ADC_HILIM6_HLMT8_MASK         0x0800U
  #define ADC_HILIM6_HLMT9_MASK         0x1000U
  #define ADC_HILIM6_HLMT10_MASK        0x2000U
  #define ADC_HILIM6_HLMT11_MASK        0x4000U
  #define ADC_HILIM6_HLMT_MASK          0x7FF8U
  #define ADC_HILIM6_HLMT_BITNUM        0x03U
  #define ADC_HILIM6                    (*((volatile word *)0x0000F0AA))


  /*** ADC_HILIM7 - ADC High Limit Register 7; 0x0000F0AB ***/
  union {
    word Word;
  } ADC_HILIM7_STR;
  
  #define ADC_HILIM7_HLMT0_MASK         0x08U
  #define ADC_HILIM7_HLMT1_MASK         0x10U
  #define ADC_HILIM7_HLMT2_MASK         0x20U
  #define ADC_HILIM7_HLMT3_MASK         0x40U
  #define ADC_HILIM7_HLMT4_MASK         0x80U
  #define ADC_HILIM7_HLMT5_MASK         0x0100U
  #define ADC_HILIM7_HLMT6_MASK         0x0200U
  #define ADC_HILIM7_HLMT7_MASK         0x0400U
  #define ADC_HILIM7_HLMT8_MASK         0x0800U
  #define ADC_HILIM7_HLMT9_MASK         0x1000U
  #define ADC_HILIM7_HLMT10_MASK        0x2000U
  #define ADC_HILIM7_HLMT11_MASK        0x4000U
  #define ADC_HILIM7_HLMT_MASK          0x7FF8U
  #define ADC_HILIM7_HLMT_BITNUM        0x03U
  #define ADC_HILIM7                    (*((volatile word *)0x0000F0AB))


  /*** ADC_OFFST0 - ADC Offset Register 0; 0x0000F0AC ***/
  union {
    word Word;
  } ADC_OFFST0_STR;
  
  #define ADC_OFFST0_OFFSET0_MASK       0x08U
  #define ADC_OFFST0_OFFSET1_MASK       0x10U
  #define ADC_OFFST0_OFFSET2_MASK       0x20U
  #define ADC_OFFST0_OFFSET3_MASK       0x40U
  #define ADC_OFFST0_OFFSET4_MASK       0x80U
  #define ADC_OFFST0_OFFSET5_MASK       0x0100U
  #define ADC_OFFST0_OFFSET6_MASK       0x0200U
  #define ADC_OFFST0_OFFSET7_MASK       0x0400U
  #define ADC_OFFST0_OFFSET8_MASK       0x0800U
  #define ADC_OFFST0_OFFSET9_MASK       0x1000U
  #define ADC_OFFST0_OFFSET10_MASK      0x2000U
  #define ADC_OFFST0_OFFSET11_MASK      0x4000U
  #define ADC_OFFST0_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST0_OFFSET_BITNUM      0x03U
  #define ADC_OFFST0                    (*((volatile word *)0x0000F0AC))


  /*** ADC_OFFST1 - ADC Offset Register 1; 0x0000F0AD ***/
  union {
    word Word;
  } ADC_OFFST1_STR;
  
  #define ADC_OFFST1_OFFSET0_MASK       0x08U
  #define ADC_OFFST1_OFFSET1_MASK       0x10U
  #define ADC_OFFST1_OFFSET2_MASK       0x20U
  #define ADC_OFFST1_OFFSET3_MASK       0x40U
  #define ADC_OFFST1_OFFSET4_MASK       0x80U
  #define ADC_OFFST1_OFFSET5_MASK       0x0100U
  #define ADC_OFFST1_OFFSET6_MASK       0x0200U
  #define ADC_OFFST1_OFFSET7_MASK       0x0400U
  #define ADC_OFFST1_OFFSET8_MASK       0x0800U
  #define ADC_OFFST1_OFFSET9_MASK       0x1000U
  #define ADC_OFFST1_OFFSET10_MASK      0x2000U
  #define ADC_OFFST1_OFFSET11_MASK      0x4000U
  #define ADC_OFFST1_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST1_OFFSET_BITNUM      0x03U
  #define ADC_OFFST1                    (*((volatile word *)0x0000F0AD))


  /*** ADC_OFFST2 - ADC Offset Register 2; 0x0000F0AE ***/
  union {
    word Word;
  } ADC_OFFST2_STR;
  
  #define ADC_OFFST2_OFFSET0_MASK       0x08U
  #define ADC_OFFST2_OFFSET1_MASK       0x10U
  #define ADC_OFFST2_OFFSET2_MASK       0x20U
  #define ADC_OFFST2_OFFSET3_MASK       0x40U
  #define ADC_OFFST2_OFFSET4_MASK       0x80U
  #define ADC_OFFST2_OFFSET5_MASK       0x0100U
  #define ADC_OFFST2_OFFSET6_MASK       0x0200U
  #define ADC_OFFST2_OFFSET7_MASK       0x0400U
  #define ADC_OFFST2_OFFSET8_MASK       0x0800U
  #define ADC_OFFST2_OFFSET9_MASK       0x1000U
  #define ADC_OFFST2_OFFSET10_MASK      0x2000U
  #define ADC_OFFST2_OFFSET11_MASK      0x4000U
  #define ADC_OFFST2_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST2_OFFSET_BITNUM      0x03U
  #define ADC_OFFST2                    (*((volatile word *)0x0000F0AE))


  /*** ADC_OFFST3 - ADC Offset Register 3; 0x0000F0AF ***/
  union {
    word Word;
  } ADC_OFFST3_STR;
  
  #define ADC_OFFST3_OFFSET0_MASK       0x08U
  #define ADC_OFFST3_OFFSET1_MASK       0x10U
  #define ADC_OFFST3_OFFSET2_MASK       0x20U
  #define ADC_OFFST3_OFFSET3_MASK       0x40U
  #define ADC_OFFST3_OFFSET4_MASK       0x80U
  #define ADC_OFFST3_OFFSET5_MASK       0x0100U
  #define ADC_OFFST3_OFFSET6_MASK       0x0200U
  #define ADC_OFFST3_OFFSET7_MASK       0x0400U
  #define ADC_OFFST3_OFFSET8_MASK       0x0800U
  #define ADC_OFFST3_OFFSET9_MASK       0x1000U
  #define ADC_OFFST3_OFFSET10_MASK      0x2000U
  #define ADC_OFFST3_OFFSET11_MASK      0x4000U
  #define ADC_OFFST3_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST3_OFFSET_BITNUM      0x03U
  #define ADC_OFFST3                    (*((volatile word *)0x0000F0AF))


  /*** ADC_OFFST4 - ADC Offset Register 4; 0x0000F0B0 ***/
  union {
    word Word;
  } ADC_OFFST4_STR;
  
  #define ADC_OFFST4_OFFSET0_MASK       0x08U
  #define ADC_OFFST4_OFFSET1_MASK       0x10U
  #define ADC_OFFST4_OFFSET2_MASK       0x20U
  #define ADC_OFFST4_OFFSET3_MASK       0x40U
  #define ADC_OFFST4_OFFSET4_MASK       0x80U
  #define ADC_OFFST4_OFFSET5_MASK       0x0100U
  #define ADC_OFFST4_OFFSET6_MASK       0x0200U
  #define ADC_OFFST4_OFFSET7_MASK       0x0400U
  #define ADC_OFFST4_OFFSET8_MASK       0x0800U
  #define ADC_OFFST4_OFFSET9_MASK       0x1000U
  #define ADC_OFFST4_OFFSET10_MASK      0x2000U
  #define ADC_OFFST4_OFFSET11_MASK      0x4000U
  #define ADC_OFFST4_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST4_OFFSET_BITNUM      0x03U
  #define ADC_OFFST4                    (*((volatile word *)0x0000F0B0))


  /*** ADC_OFFST5 - ADC Offset Register 5; 0x0000F0B1 ***/
  union {
    word Word;
  } ADC_OFFST5_STR;
  
  #define ADC_OFFST5_OFFSET0_MASK       0x08U
  #define ADC_OFFST5_OFFSET1_MASK       0x10U
  #define ADC_OFFST5_OFFSET2_MASK       0x20U
  #define ADC_OFFST5_OFFSET3_MASK       0x40U
  #define ADC_OFFST5_OFFSET4_MASK       0x80U
  #define ADC_OFFST5_OFFSET5_MASK       0x0100U
  #define ADC_OFFST5_OFFSET6_MASK       0x0200U
  #define ADC_OFFST5_OFFSET7_MASK       0x0400U
  #define ADC_OFFST5_OFFSET8_MASK       0x0800U
  #define ADC_OFFST5_OFFSET9_MASK       0x1000U
  #define ADC_OFFST5_OFFSET10_MASK      0x2000U
  #define ADC_OFFST5_OFFSET11_MASK      0x4000U
  #define ADC_OFFST5_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST5_OFFSET_BITNUM      0x03U
  #define ADC_OFFST5                    (*((volatile word *)0x0000F0B1))


  /*** ADC_OFFST6 - ADC Offset Register 6; 0x0000F0B2 ***/
  union {
    word Word;
  } ADC_OFFST6_STR;
  
  #define ADC_OFFST6_OFFSET0_MASK       0x08U
  #define ADC_OFFST6_OFFSET1_MASK       0x10U
  #define ADC_OFFST6_OFFSET2_MASK       0x20U
  #define ADC_OFFST6_OFFSET3_MASK       0x40U
  #define ADC_OFFST6_OFFSET4_MASK       0x80U
  #define ADC_OFFST6_OFFSET5_MASK       0x0100U
  #define ADC_OFFST6_OFFSET6_MASK       0x0200U
  #define ADC_OFFST6_OFFSET7_MASK       0x0400U
  #define ADC_OFFST6_OFFSET8_MASK       0x0800U
  #define ADC_OFFST6_OFFSET9_MASK       0x1000U
  #define ADC_OFFST6_OFFSET10_MASK      0x2000U
  #define ADC_OFFST6_OFFSET11_MASK      0x4000U
  #define ADC_OFFST6_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST6_OFFSET_BITNUM      0x03U
  #define ADC_OFFST6                    (*((volatile word *)0x0000F0B2))


  /*** ADC_OFFST7 - ADC Offset Register 7; 0x0000F0B3 ***/
  union {
    word Word;
  } ADC_OFFST7_STR;
  
  #define ADC_OFFST7_OFFSET0_MASK       0x08U
  #define ADC_OFFST7_OFFSET1_MASK       0x10U
  #define ADC_OFFST7_OFFSET2_MASK       0x20U
  #define ADC_OFFST7_OFFSET3_MASK       0x40U
  #define ADC_OFFST7_OFFSET4_MASK       0x80U
  #define ADC_OFFST7_OFFSET5_MASK       0x0100U
  #define ADC_OFFST7_OFFSET6_MASK       0x0200U
  #define ADC_OFFST7_OFFSET7_MASK       0x0400U
  #define ADC_OFFST7_OFFSET8_MASK       0x0800U
  #define ADC_OFFST7_OFFSET9_MASK       0x1000U
  #define ADC_OFFST7_OFFSET10_MASK      0x2000U
  #define ADC_OFFST7_OFFSET11_MASK      0x4000U
  #define ADC_OFFST7_OFFSET_MASK        0x7FF8U
  #define ADC_OFFST7_OFFSET_BITNUM      0x03U
  #define ADC_OFFST7                    (*((volatile word *)0x0000F0B3))


  /*** ADC_PWR - ADC Power Control Register; 0x0000F0B4 ***/
  union {
    word Word;
  } ADC_PWR_STR;
  
  #define ADC_PWR_PD0_MASK              0x01U
  #define ADC_PWR_PD1_MASK              0x02U
  #define ADC_PWR_PD2_MASK              0x04U
  #define ADC_PWR_APD_MASK              0x08U
  #define ADC_PWR_PUDELAY0_MASK         0x10U
  #define ADC_PWR_PUDELAY1_MASK         0x20U
  #define ADC_PWR_PUDELAY2_MASK         0x40U
  #define ADC_PWR_PUDELAY3_MASK         0x80U
  #define ADC_PWR_PUDELAY4_MASK         0x0100U
  #define ADC_PWR_PUDELAY5_MASK         0x0200U
  #define ADC_PWR_PSTS0_MASK            0x0400U
  #define ADC_PWR_PSTS1_MASK            0x0800U
  #define ADC_PWR_PSTS2_MASK            0x1000U
  #define ADC_PWR_ASB_MASK              0x8000U
  #define ADC_PWR_PD_MASK               0x07U
  #define ADC_PWR_PD_BITNUM             0x00U
  #define ADC_PWR_PUDELAY_MASK          0x03F0U
  #define ADC_PWR_PUDELAY_BITNUM        0x04U
  #define ADC_PWR_PSTS_MASK             0x1C00U
  #define ADC_PWR_PSTS_BITNUM           0x0AU
  #define ADC_PWR                       (*((volatile word *)0x0000F0B4))


  /*** ADC_CAL - ADC Calibration Register; 0x0000F0B5 ***/
  union {
    word Word;
  } ADC_CAL_STR;
  
  #define ADC_CAL_SEL_DAC0_MASK         0x01U
  #define ADC_CAL_SEL_DAC1_MASK         0x02U
  #define ADC_CAL_SEL_VREFLO_0_MASK     0x1000U
  #define ADC_CAL_SEL_VREFH_0_MASK      0x2000U
  #define ADC_CAL_SEL_VREFLO_1_MASK     0x4000U
  #define ADC_CAL_SEL_VREFH_1_MASK      0x8000U
  #define ADC_CAL_SEL_DAC_MASK          0x03U
  #define ADC_CAL_SEL_DAC_BITNUM        0x00U
  #define ADC_CAL                       (*((volatile word *)0x0000F0B5))


  word Reserved0[10];                  /* Reserved (unused) registers */

} ADC_PRPH;

/******************************************
*** Peripheral PWM
*******************************************/
typedef volatile struct {
  /*** PWM_CTRL - PWM control register; 0x0000F0C0 ***/
  union {
    word Word;
  } PWM_CTRL_STR;
  
  #define PWM_CTRL_PWMEN_MASK           0x01U
  #define PWM_CTRL_LDOK_MASK            0x02U
  #define PWM_CTRL_PWMF_MASK            0x10U
  #define PWM_CTRL_PWMRIE_MASK          0x20U
  #define PWM_CTRL_PRSC0_MASK           0x40U
  #define PWM_CTRL_PRSC1_MASK           0x80U
  #define PWM_CTRL_IPOL0_MASK           0x0100U
  #define PWM_CTRL_IPOL1_MASK           0x0200U
  #define PWM_CTRL_IPOL2_MASK           0x0400U
  #define PWM_CTRL_HALF_MASK            0x0800U
  #define PWM_CTRL_LDFQ0_MASK           0x1000U
  #define PWM_CTRL_LDFQ1_MASK           0x2000U
  #define PWM_CTRL_LDFQ2_MASK           0x4000U
  #define PWM_CTRL_LDFQ3_MASK           0x8000U
  #define PWM_CTRL_PRSC_MASK            0xC0U
  #define PWM_CTRL_PRSC_BITNUM          0x06U
  #define PWM_CTRL_IPOL_MASK            0x0700U
  #define PWM_CTRL_IPOL_BITNUM          0x08U
  #define PWM_CTRL_LDFQ_MASK            0xF000U
  #define PWM_CTRL_LDFQ_BITNUM          0x0CU
  #define PWM_CTRL                      (*((volatile word *)0x0000F0C0))


  /*** PWM_FCTRL - PWM fault control register; 0x0000F0C1 ***/
  union {
    word Word;
  } PWM_FCTRL_STR;
  
  #define PWM_FCTRL_FMODE0_MASK         0x01U
  #define PWM_FCTRL_FIE0_MASK           0x02U
  #define PWM_FCTRL_FMODE1_MASK         0x04U
  #define PWM_FCTRL_FIE1_MASK           0x08U
  #define PWM_FCTRL_FMODE2_MASK         0x10U
  #define PWM_FCTRL_FIE2_MASK           0x20U
  #define PWM_FCTRL_FMODE3_MASK         0x40U
  #define PWM_FCTRL_FIE3_MASK           0x80U
  #define PWM_FCTRL_FPOL0_MASK          0x0100U
  #define PWM_FCTRL_FPOL1_MASK          0x0200U
  #define PWM_FCTRL_FPOL2_MASK          0x0400U
  #define PWM_FCTRL_FPOL3_MASK          0x0800U
  #define PWM_FCTRL_FPOL_MASK           0x0F00U
  #define PWM_FCTRL_FPOL_BITNUM         0x08U
  #define PWM_FCTRL                     (*((volatile word *)0x0000F0C1))


  /*** PWM_FLTACK - PWM fault status acknowledge register; 0x0000F0C2 ***/
  union {
    word Word;
  } PWM_FLTACK_STR;
  
  #define PWM_FLTACK_FTACK0_MASK        0x01U
  #define PWM_FLTACK_FTACK1_MASK        0x04U
  #define PWM_FLTACK_FTACK2_MASK        0x10U
  #define PWM_FLTACK_FTACK3_MASK        0x40U
  #define PWM_FLTACK_FFLAG0_MASK        0x0100U
  #define PWM_FLTACK_FPIN0_MASK         0x0200U
  #define PWM_FLTACK_FFLAG1_MASK        0x0400U
  #define PWM_FLTACK_FPIN1_MASK         0x0800U
  #define PWM_FLTACK_FFLAG2_MASK        0x1000U
  #define PWM_FLTACK_FPIN2_MASK         0x2000U
  #define PWM_FLTACK_FFLAG3_MASK        0x4000U
  #define PWM_FLTACK_FPIN3_MASK         0x8000U
  #define PWM_FLTACK                    (*((volatile word *)0x0000F0C2))


  /*** PWM_OUT - PWM output control register; 0x0000F0C3 ***/
  union {
    word Word;
  } PWM_OUT_STR;
  
  #define PWM_OUT_OUT0_MASK             0x01U
  #define PWM_OUT_OUT1_MASK             0x02U
  #define PWM_OUT_OUT2_MASK             0x04U
  #define PWM_OUT_OUT3_MASK             0x08U
  #define PWM_OUT_OUT4_MASK             0x10U
  #define PWM_OUT_OUT5_MASK             0x20U
  #define PWM_OUT_OUTCTL0_MASK          0x0100U
  #define PWM_OUT_OUTCTL1_MASK          0x0200U
  #define PWM_OUT_OUTCTL2_MASK          0x0400U
  #define PWM_OUT_OUTCTL3_MASK          0x0800U
  #define PWM_OUT_OUTCTL4_MASK          0x1000U
  #define PWM_OUT_OUTCTL5_MASK          0x2000U
  #define PWM_OUT_PAD_EN_MASK           0x8000U
  #define PWM_OUT_OUT_MASK              0x3FU
  #define PWM_OUT_OUT_BITNUM            0x00U
  #define PWM_OUT_OUTCTL_MASK           0x3F00U
  #define PWM_OUT_OUTCTL_BITNUM         0x08U
  #define PWM_OUT                       (*((volatile word *)0x0000F0C3))


  /*** PWM_CNTR - PWM counter register; 0x0000F0C4 ***/
  union {
    word Word;
  } PWM_CNTR_STR;
  
  #define PWM_CNTR_CNT0_MASK            0x01U
  #define PWM_CNTR_CNT1_MASK            0x02U
  #define PWM_CNTR_CNT2_MASK            0x04U
  #define PWM_CNTR_CNT3_MASK            0x08U
  #define PWM_CNTR_CNT4_MASK            0x10U
  #define PWM_CNTR_CNT5_MASK            0x20U
  #define PWM_CNTR_CNT6_MASK            0x40U
  #define PWM_CNTR_CNT7_MASK            0x80U
  #define PWM_CNTR_CNT8_MASK            0x0100U
  #define PWM_CNTR_CNT9_MASK            0x0200U
  #define PWM_CNTR_CNT10_MASK           0x0400U
  #define PWM_CNTR_CNT11_MASK           0x0800U
  #define PWM_CNTR_CNT12_MASK           0x1000U
  #define PWM_CNTR_CNT13_MASK           0x2000U
  #define PWM_CNTR_CNT14_MASK           0x4000U
  #define PWM_CNTR_CNT_MASK             0x7FFFU
  #define PWM_CNTR_CNT_BITNUM           0x00U
  #define PWM_CNTR                      (*((volatile word *)0x0000F0C4))


  /*** PWM_CMOD - PWM counter modulo register; 0x0000F0C5 ***/
  union {
    word Word;
  } PWM_CMOD_STR;
  
  #define PWM_CMOD_CM0_MASK             0x01U
  #define PWM_CMOD_CM1_MASK             0x02U
  #define PWM_CMOD_CM2_MASK             0x04U
  #define PWM_CMOD_CM3_MASK             0x08U
  #define PWM_CMOD_CM4_MASK             0x10U
  #define PWM_CMOD_CM5_MASK             0x20U
  #define PWM_CMOD_CM6_MASK             0x40U
  #define PWM_CMOD_CM7_MASK             0x80U
  #define PWM_CMOD_CM8_MASK             0x0100U
  #define PWM_CMOD_CM9_MASK             0x0200U
  #define PWM_CMOD_CM10_MASK            0x0400U
  #define PWM_CMOD_CM11_MASK            0x0800U
  #define PWM_CMOD_CM12_MASK            0x1000U
  #define PWM_CMOD_CM13_MASK            0x2000U
  #define PWM_CMOD_CM14_MASK            0x4000U
  #define PWM_CMOD_CM_MASK              0x7FFFU
  #define PWM_CMOD_CM_BITNUM            0x00U
  #define PWM_CMOD                      (*((volatile word *)0x0000F0C5))


  /*** PWM_VAL0 - PWM value register 0; 0x0000F0C6 ***/
  union {
    word Word;
  } PWM_VAL0_STR;
  
  #define PWM_VAL0                      (*((volatile word *)0x0000F0C6))


  /*** PWM_VAL1 - PWM value register 1; 0x0000F0C7 ***/
  union {
    word Word;
  } PWM_VAL1_STR;
  
  #define PWM_VAL1                      (*((volatile word *)0x0000F0C7))


  /*** PWM_VAL2 - PWM value register 2; 0x0000F0C8 ***/
  union {
    word Word;
  } PWM_VAL2_STR;
  
  #define PWM_VAL2                      (*((volatile word *)0x0000F0C8))


  /*** PWM_VAL3 - PWM value register 3; 0x0000F0C9 ***/
  union {
    word Word;
  } PWM_VAL3_STR;
  
  #define PWM_VAL3                      (*((volatile word *)0x0000F0C9))


  /*** PWM_VAL4 - PWM value register 4; 0x0000F0CA ***/
  union {
    word Word;
  } PWM_VAL4_STR;
  
  #define PWM_VAL4                      (*((volatile word *)0x0000F0CA))


  /*** PWM_VAL5 - PWM value register 5; 0x0000F0CB ***/
  union {
    word Word;
  } PWM_VAL5_STR;
  
  #define PWM_VAL5                      (*((volatile word *)0x0000F0CB))


  /*** PWM_DTIM0 - PWM deadtime register 0; 0x0000F0CC ***/
  union {
    word Word;
  } PWM_DTIM0_STR;
  
  #define PWM_DTIM0_PWMDT00_MASK        0x01U
  #define PWM_DTIM0_PWMDT01_MASK        0x02U
  #define PWM_DTIM0_PWMDT02_MASK        0x04U
  #define PWM_DTIM0_PWMDT03_MASK        0x08U
  #define PWM_DTIM0_PWMDT04_MASK        0x10U
  #define PWM_DTIM0_PWMDT05_MASK        0x20U
  #define PWM_DTIM0_PWMDT06_MASK        0x40U
  #define PWM_DTIM0_PWMDT07_MASK        0x80U
  #define PWM_DTIM0_PWMDT08_MASK        0x0100U
  #define PWM_DTIM0_PWMDT09_MASK        0x0200U
  #define PWM_DTIM0_PWMDT010_MASK       0x0400U
  #define PWM_DTIM0_PWMDT011_MASK       0x0800U
  #define PWM_DTIM0_PWMDT0_MASK         0x0FFFU
  #define PWM_DTIM0_PWMDT0_BITNUM       0x00U
  #define PWM_DTIM0                     (*((volatile word *)0x0000F0CC))


  /*** PWM_DTIM1 - PWM deadtime register 1; 0x0000F0CD ***/
  union {
    word Word;
  } PWM_DTIM1_STR;
  
  #define PWM_DTIM1_PWMDT10_MASK        0x01U
  #define PWM_DTIM1_PWMDT11_MASK        0x02U
  #define PWM_DTIM1_PWMDT12_MASK        0x04U
  #define PWM_DTIM1_PWMDT13_MASK        0x08U
  #define PWM_DTIM1_PWMDT14_MASK        0x10U
  #define PWM_DTIM1_PWMDT15_MASK        0x20U
  #define PWM_DTIM1_PWMDT16_MASK        0x40U
  #define PWM_DTIM1_PWMDT17_MASK        0x80U
  #define PWM_DTIM1_PWMDT18_MASK        0x0100U
  #define PWM_DTIM1_PWMDT19_MASK        0x0200U
  #define PWM_DTIM1_PWMDT110_MASK       0x0400U
  #define PWM_DTIM1_PWMDT111_MASK       0x0800U
  #define PWM_DTIM1_PWMDT1_MASK         0x0FFFU
  #define PWM_DTIM1_PWMDT1_BITNUM       0x00U
  #define PWM_DTIM1                     (*((volatile word *)0x0000F0CD))


  /*** PWM_DMAP1 - PWM disable mapping register one; 0x0000F0CE ***/
  union {
    word Word;
  } PWM_DMAP1_STR;
  
  #define PWM_DMAP1_DISMAP0_MASK        0x01U
  #define PWM_DMAP1_DISMAP1_MASK        0x02U
  #define PWM_DMAP1_DISMAP2_MASK        0x04U
  #define PWM_DMAP1_DISMAP3_MASK        0x08U
  #define PWM_DMAP1_DISMAP4_MASK        0x10U
  #define PWM_DMAP1_DISMAP5_MASK        0x20U
  #define PWM_DMAP1_DISMAP6_MASK        0x40U
  #define PWM_DMAP1_DISMAP7_MASK        0x80U
  #define PWM_DMAP1_DISMAP8_MASK        0x0100U
  #define PWM_DMAP1_DISMAP9_MASK        0x0200U
  #define PWM_DMAP1_DISMAP10_MASK       0x0400U
  #define PWM_DMAP1_DISMAP11_MASK       0x0800U
  #define PWM_DMAP1_DISMAP12_MASK       0x1000U
  #define PWM_DMAP1_DISMAP13_MASK       0x2000U
  #define PWM_DMAP1_DISMAP14_MASK       0x4000U
  #define PWM_DMAP1_DISMAP15_MASK       0x8000U
  #define PWM_DMAP1                     (*((volatile word *)0x0000F0CE))


  /*** PWM_DMAP2 - PWM disable mapping register two; 0x0000F0CF ***/
  union {
    word Word;
  } PWM_DMAP2_STR;
  
  #define PWM_DMAP2_DISMAP0_MASK        0x01U
  #define PWM_DMAP2_DISMAP1_MASK        0x02U
  #define PWM_DMAP2_DISMAP2_MASK        0x04U
  #define PWM_DMAP2_DISMAP3_MASK        0x08U
  #define PWM_DMAP2_DISMAP4_MASK        0x10U
  #define PWM_DMAP2_DISMAP5_MASK        0x20U
  #define PWM_DMAP2_DISMAP6_MASK        0x40U
  #define PWM_DMAP2_DISMAP7_MASK        0x80U
  #define PWM_DMAP2_DISMAP_MASK         0xFFU
  #define PWM_DMAP2_DISMAP_BITNUM       0x00U
  #define PWM_DMAP2                     (*((volatile word *)0x0000F0CF))


  /*** PWM_CNFG - PWM config register; 0x0000F0D0 ***/
  union {
    word Word;
  } PWM_CNFG_STR;
  
  #define PWM_CNFG_WP_MASK              0x01U
  #define PWM_CNFG_INDEP01_MASK         0x02U
  #define PWM_CNFG_INDEP23_MASK         0x04U
  #define PWM_CNFG_INDEP45_MASK         0x08U
  #define PWM_CNFG_BOTNEG01_MASK        0x10U
  #define PWM_CNFG_BOTNEG23_MASK        0x20U
  #define PWM_CNFG_BOTNEG45_MASK        0x40U
  #define PWM_CNFG_TOPNEG01_MASK        0x0100U
  #define PWM_CNFG_TOPNEG23_MASK        0x0200U
  #define PWM_CNFG_TOPNEG45_MASK        0x0400U
  #define PWM_CNFG_EDG_MASK             0x1000U
  #define PWM_CNFG_WAIT_EN_MASK         0x2000U
  #define PWM_CNFG_DBG_EN_MASK          0x4000U
  #define PWM_CNFG                      (*((volatile word *)0x0000F0D0))


  /*** PWM_CCTRL - PWM channel control register; 0x0000F0D1 ***/
  union {
    word Word;
  } PWM_CCTRL_STR;
  
  #define PWM_CCTRL_SWP01_MASK          0x01U
  #define PWM_CCTRL_SWP23_MASK          0x02U
  #define PWM_CCTRL_SWP45_MASK          0x04U
  #define PWM_CCTRL_VLMODE0_MASK        0x10U
  #define PWM_CCTRL_VLMODE1_MASK        0x20U
  #define PWM_CCTRL_MSK0_MASK           0x0100U
  #define PWM_CCTRL_MSK1_MASK           0x0200U
  #define PWM_CCTRL_MSK2_MASK           0x0400U
  #define PWM_CCTRL_MSK3_MASK           0x0800U
  #define PWM_CCTRL_MSK4_MASK           0x1000U
  #define PWM_CCTRL_MSK5_MASK           0x2000U
  #define PWM_CCTRL_nBX_MASK            0x4000U
  #define PWM_CCTRL_ENHA_MASK           0x8000U
  #define PWM_CCTRL_VLMODE_MASK         0x30U
  #define PWM_CCTRL_VLMODE_BITNUM       0x04U
  #define PWM_CCTRL_MSK_MASK            0x3F00U
  #define PWM_CCTRL_MSK_BITNUM          0x08U
  #define PWM_CCTRL                     (*((volatile word *)0x0000F0D1))


  /*** PWM_PORT - PWM port register; 0x0000F0D2 ***/
  union {
    word Word;
  } PWM_PORT_STR;
  
  #define PWM_PORT_PORT0_MASK           0x01U
  #define PWM_PORT_PORT1_MASK           0x02U
  #define PWM_PORT_PORT2_MASK           0x04U
  #define PWM_PORT_PORT3_MASK           0x08U
  #define PWM_PORT_PORT_MASK            0x0FU
  #define PWM_PORT_PORT_BITNUM          0x00U
  #define PWM_PORT                      (*((volatile word *)0x0000F0D2))


  /*** PWM_ICCTRL - PWM Internal Correction Control Register; 0x0000F0D3 ***/
  union {
    word Word;
  } PWM_ICCTRL_STR;
  
  #define PWM_ICCTRL_ICC0_MASK          0x01U
  #define PWM_ICCTRL_ICC1_MASK          0x02U
  #define PWM_ICCTRL_ICC2_MASK          0x04U
  #define PWM_ICCTRL_ICC_MASK           0x07U
  #define PWM_ICCTRL_ICC_BITNUM         0x00U
  #define PWM_ICCTRL                    (*((volatile word *)0x0000F0D3))


  /*** PWM_SCTRL - PWM Source Control Register; 0x0000F0D4 ***/
  union {
    word Word;
  } PWM_SCTRL_STR;
  
  #define PWM_SCTRL_SRC0_MASK           0x01U
  #define PWM_SCTRL_SRC10_MASK          0x04U
  #define PWM_SCTRL_SRC11_MASK          0x08U
  #define PWM_SCTRL_SRC20_MASK          0x20U
  #define PWM_SCTRL_SRC21_MASK          0x40U
  #define PWM_SCTRL_CINV0_MASK          0x0100U
  #define PWM_SCTRL_CINV1_MASK          0x0200U
  #define PWM_SCTRL_CINV2_MASK          0x0400U
  #define PWM_SCTRL_CINV3_MASK          0x0800U
  #define PWM_SCTRL_CINV4_MASK          0x1000U
  #define PWM_SCTRL_CINV5_MASK          0x2000U
  #define PWM_SCTRL_SRC1_MASK           0x0CU
  #define PWM_SCTRL_SRC1_BITNUM         0x02U
  #define PWM_SCTRL_SRC2_MASK           0x60U
  #define PWM_SCTRL_SRC2_BITNUM         0x05U
  #define PWM_SCTRL_CINV_MASK           0x3F00U
  #define PWM_SCTRL_CINV_BITNUM         0x08U
  #define PWM_SCTRL                     (*((volatile word *)0x0000F0D4))


  /*** PWM_SYNC - PWM Synchronization Window Register; 0x0000F0D5 ***/
  union {
    word Word;
  } PWM_SYNC_STR;
  
  #define PWM_SYNC_SYNC_WINDOW0_MASK    0x01U
  #define PWM_SYNC_SYNC_WINDOW1_MASK    0x02U
  #define PWM_SYNC_SYNC_WINDOW2_MASK    0x04U
  #define PWM_SYNC_SYNC_WINDOW3_MASK    0x08U
  #define PWM_SYNC_SYNC_WINDOW4_MASK    0x10U
  #define PWM_SYNC_SYNC_WINDOW5_MASK    0x20U
  #define PWM_SYNC_SYNC_WINDOW6_MASK    0x40U
  #define PWM_SYNC_SYNC_WINDOW7_MASK    0x80U
  #define PWM_SYNC_SYNC_WINDOW8_MASK    0x0100U
  #define PWM_SYNC_SYNC_WINDOW9_MASK    0x0200U
  #define PWM_SYNC_SYNC_WINDOW10_MASK   0x0400U
  #define PWM_SYNC_SYNC_WINDOW11_MASK   0x0800U
  #define PWM_SYNC_SYNC_WINDOW12_MASK   0x1000U
  #define PWM_SYNC_SYNC_WINDOW13_MASK   0x2000U
  #define PWM_SYNC_SYNC_WINDOW14_MASK   0x4000U
  #define PWM_SYNC_SYNC_OUT_EN_MASK     0x8000U
  #define PWM_SYNC_SYNC_WINDOW_MASK     0x7FFFU
  #define PWM_SYNC_SYNC_WINDOW_BITNUM   0x00U
  #define PWM_SYNC                      (*((volatile word *)0x0000F0D5))


  /*** PWM_FFILT0 - PWM Fault 0 Filter Register; 0x0000F0D6 ***/
  union {
    word Word;
  } PWM_FFILT0_STR;
  
  #define PWM_FFILT0_FILT0_PER0_MASK    0x01U
  #define PWM_FFILT0_FILT0_PER1_MASK    0x02U
  #define PWM_FFILT0_FILT0_PER2_MASK    0x04U
  #define PWM_FFILT0_FILT0_PER3_MASK    0x08U
  #define PWM_FFILT0_FILT0_PER4_MASK    0x10U
  #define PWM_FFILT0_FILT0_PER5_MASK    0x20U
  #define PWM_FFILT0_FILT0_PER6_MASK    0x40U
  #define PWM_FFILT0_FILT0_PER7_MASK    0x80U
  #define PWM_FFILT0_FILT0_CNT0_MASK    0x0100U
  #define PWM_FFILT0_FILT0_CNT1_MASK    0x0200U
  #define PWM_FFILT0_FILT0_CNT2_MASK    0x0400U
  #define PWM_FFILT0_FILT0_PER_MASK     0xFFU
  #define PWM_FFILT0_FILT0_PER_BITNUM   0x00U
  #define PWM_FFILT0_FILT0_CNT_MASK     0x0700U
  #define PWM_FFILT0_FILT0_CNT_BITNUM   0x08U
  #define PWM_FFILT0                    (*((volatile word *)0x0000F0D6))


  /*** PWM_FFILT1 - PWM Fault 1 Filter Register; 0x0000F0D7 ***/
  union {
    word Word;
  } PWM_FFILT1_STR;
  
  #define PWM_FFILT1_FILT1_PER0_MASK    0x01U
  #define PWM_FFILT1_FILT1_PER1_MASK    0x02U
  #define PWM_FFILT1_FILT1_PER2_MASK    0x04U
  #define PWM_FFILT1_FILT1_PER3_MASK    0x08U
  #define PWM_FFILT1_FILT1_PER4_MASK    0x10U
  #define PWM_FFILT1_FILT1_PER5_MASK    0x20U
  #define PWM_FFILT1_FILT1_PER6_MASK    0x40U
  #define PWM_FFILT1_FILT1_PER7_MASK    0x80U
  #define PWM_FFILT1_FILT1_CNT0_MASK    0x0100U
  #define PWM_FFILT1_FILT1_CNT1_MASK    0x0200U
  #define PWM_FFILT1_FILT1_CNT2_MASK    0x0400U
  #define PWM_FFILT1_FILT1_PER_MASK     0xFFU
  #define PWM_FFILT1_FILT1_PER_BITNUM   0x00U
  #define PWM_FFILT1_FILT1_CNT_MASK     0x0700U
  #define PWM_FFILT1_FILT1_CNT_BITNUM   0x08U
  #define PWM_FFILT1                    (*((volatile word *)0x0000F0D7))


  /*** PWM_FFILT2 - PWM Fault 2 Filter Register; 0x0000F0D8 ***/
  union {
    word Word;
  } PWM_FFILT2_STR;
  
  #define PWM_FFILT2_FILT2_PER0_MASK    0x01U
  #define PWM_FFILT2_FILT2_PER1_MASK    0x02U
  #define PWM_FFILT2_FILT2_PER2_MASK    0x04U
  #define PWM_FFILT2_FILT2_PER3_MASK    0x08U
  #define PWM_FFILT2_FILT2_PER4_MASK    0x10U
  #define PWM_FFILT2_FILT2_PER5_MASK    0x20U
  #define PWM_FFILT2_FILT2_PER6_MASK    0x40U
  #define PWM_FFILT2_FILT2_PER7_MASK    0x80U
  #define PWM_FFILT2_FILT2_CNT0_MASK    0x0100U
  #define PWM_FFILT2_FILT2_CNT1_MASK    0x0200U
  #define PWM_FFILT2_FILT2_CNT2_MASK    0x0400U
  #define PWM_FFILT2_FILT2_PER_MASK     0xFFU
  #define PWM_FFILT2_FILT2_PER_BITNUM   0x00U
  #define PWM_FFILT2_FILT2_CNT_MASK     0x0700U
  #define PWM_FFILT2_FILT2_CNT_BITNUM   0x08U
  #define PWM_FFILT2                    (*((volatile word *)0x0000F0D8))


  /*** PWM_FFILT3 - PWM Fault 3 Filter Register; 0x0000F0D9 ***/
  union {
    word Word;
  } PWM_FFILT3_STR;
  
  #define PWM_FFILT3_FILT3_PER0_MASK    0x01U
  #define PWM_FFILT3_FILT3_PER1_MASK    0x02U
  #define PWM_FFILT3_FILT3_PER2_MASK    0x04U
  #define PWM_FFILT3_FILT3_PER3_MASK    0x08U
  #define PWM_FFILT3_FILT3_PER4_MASK    0x10U
  #define PWM_FFILT3_FILT3_PER5_MASK    0x20U
  #define PWM_FFILT3_FILT3_PER6_MASK    0x40U
  #define PWM_FFILT3_FILT3_PER7_MASK    0x80U
  #define PWM_FFILT3_FILT3_CNT0_MASK    0x0100U
  #define PWM_FFILT3_FILT3_CNT1_MASK    0x0200U
  #define PWM_FFILT3_FILT3_CNT2_MASK    0x0400U
  #define PWM_FFILT3_FILT3_PER_MASK     0xFFU
  #define PWM_FFILT3_FILT3_PER_BITNUM   0x00U
  #define PWM_FFILT3_FILT3_CNT_MASK     0x0700U
  #define PWM_FFILT3_FILT3_CNT_BITNUM   0x08U
  #define PWM_FFILT3                    (*((volatile word *)0x0000F0D9))


  word Reserved0[6];                   /* Reserved (unused) registers */

} PWM_PRPH;

/******************************************
*** Peripheral INTC
*******************************************/
typedef volatile struct {
  /*** INTC_IPR0 - Interrupt Priority Register 0; 0x0000F0E0 ***/
  union {
    word Word;
  } INTC_IPR0_STR;
  
  #define INTC_IPR0_STPCNT_IPL0_MASK    0x01U
  #define INTC_IPR0_STPCNT_IPL1_MASK    0x02U
  #define INTC_IPR0_BKPT_U0_IPL0_MASK   0x04U
  #define INTC_IPR0_BKPT_U0_IPL1_MASK   0x08U
  #define INTC_IPR0_TRBUF_IPL0_MASK     0x10U
  #define INTC_IPR0_TRBUF_IPL1_MASK     0x20U
  #define INTC_IPR0_TX_REG_IPL0_MASK    0x40U
  #define INTC_IPR0_TX_REG_IPL1_MASK    0x80U
  #define INTC_IPR0_RX_REG_IPL0_MASK    0x0100U
  #define INTC_IPR0_RX_REG_IPL1_MASK    0x0200U
  #define INTC_IPR0_LVI_IPL0_MASK       0x1000U
  #define INTC_IPR0_LVI_IPL1_MASK       0x2000U
  #define INTC_IPR0_PLL_IPL0_MASK       0x4000U
  #define INTC_IPR0_PLL_IPL1_MASK       0x8000U
  #define INTC_IPR0_STPCNT_IPL_MASK     0x03U
  #define INTC_IPR0_STPCNT_IPL_BITNUM   0x00U
  #define INTC_IPR0_BKPT_U0_IPL_MASK    0x0CU
  #define INTC_IPR0_BKPT_U0_IPL_BITNUM  0x02U
  #define INTC_IPR0_TRBUF_IPL_MASK      0x30U
  #define INTC_IPR0_TRBUF_IPL_BITNUM    0x04U
  #define INTC_IPR0_TX_REG_IPL_MASK     0xC0U
  #define INTC_IPR0_TX_REG_IPL_BITNUM   0x06U
  #define INTC_IPR0_RX_REG_IPL_MASK     0x0300U
  #define INTC_IPR0_RX_REG_IPL_BITNUM   0x08U
  #define INTC_IPR0_LVI_IPL_MASK        0x3000U
  #define INTC_IPR0_LVI_IPL_BITNUM      0x0CU
  #define INTC_IPR0_PLL_IPL_MASK        0xC000U
  #define INTC_IPR0_PLL_IPL_BITNUM      0x0EU
  #define INTC_IPR0                     (*((volatile word *)0x0000F0E0))


  /*** INTC_IPR1 - Interrupt Priority Register 1; 0x0000F0E1 ***/
  union {
    word Word;
  } INTC_IPR1_STR;
  
  #define INTC_IPR1_HFM_ERR_IPL0_MASK   0x01U
  #define INTC_IPR1_HFM_ERR_IPL1_MASK   0x02U
  #define INTC_IPR1_HFM_CC_IPL0_MASK    0x04U
  #define INTC_IPR1_HFM_CC_IPL1_MASK    0x08U
  #define INTC_IPR1_HFM_CBE_IPL0_MASK   0x10U
  #define INTC_IPR1_HFM_CBE_IPL1_MASK   0x20U
  #define INTC_IPR1_MSCAN_ERR_IPL0_MASK 0x40U
  #define INTC_IPR1_MSCAN_ERR_IPL1_MASK 0x80U
  #define INTC_IPR1_MSCAN_RX_IPL0_MASK  0x0100U
  #define INTC_IPR1_MSCAN_RX_IPL1_MASK  0x0200U
  #define INTC_IPR1_MSCAN_TX_IPL0_MASK  0x0400U
  #define INTC_IPR1_MSCAN_TX_IPL1_MASK  0x0800U
  #define INTC_IPR1_MSCAN_WKUP_IPL0_MASK 0x1000U
  #define INTC_IPR1_MSCAN_WKUP_IPL1_MASK 0x2000U
  #define INTC_IPR1_GPIO_D_IPL0_MASK    0x4000U
  #define INTC_IPR1_GPIO_D_IPL1_MASK    0x8000U
  #define INTC_IPR1_HFM_ERR_IPL_MASK    0x03U
  #define INTC_IPR1_HFM_ERR_IPL_BITNUM  0x00U
  #define INTC_IPR1_HFM_CC_IPL_MASK     0x0CU
  #define INTC_IPR1_HFM_CC_IPL_BITNUM   0x02U
  #define INTC_IPR1_HFM_CBE_IPL_MASK    0x30U
  #define INTC_IPR1_HFM_CBE_IPL_BITNUM  0x04U
  #define INTC_IPR1_MSCAN_ERR_IPL_MASK  0xC0U
  #define INTC_IPR1_MSCAN_ERR_IPL_BITNUM 0x06U
  #define INTC_IPR1_MSCAN_RX_IPL_MASK   0x0300U
  #define INTC_IPR1_MSCAN_RX_IPL_BITNUM 0x08U
  #define INTC_IPR1_MSCAN_TX_IPL_MASK   0x0C00U
  #define INTC_IPR1_MSCAN_TX_IPL_BITNUM 0x0AU
  #define INTC_IPR1_MSCAN_WKUP_IPL_MASK 0x3000U
  #define INTC_IPR1_MSCAN_WKUP_IPL_BITNUM 0x0CU
  #define INTC_IPR1_GPIO_D_IPL_MASK     0xC000U
  #define INTC_IPR1_GPIO_D_IPL_BITNUM   0x0EU
  #define INTC_IPR1                     (*((volatile word *)0x0000F0E1))


  /*** INTC_IPR2 - Interrupt Priority Register 2; 0x0000F0E2 ***/
  union {
    word Word;
  } INTC_IPR2_STR;
  
  #define INTC_IPR2_GPIO_C_IPL0_MASK    0x01U
  #define INTC_IPR2_GPIO_C_IPL1_MASK    0x02U
  #define INTC_IPR2_GPIO_B_IPL0_MASK    0x04U
  #define INTC_IPR2_GPIO_B_IPL1_MASK    0x08U
  #define INTC_IPR2_GPIO_A_IPL0_MASK    0x10U
  #define INTC_IPR2_GPIO_A_IPL1_MASK    0x20U
  #define INTC_IPR2_SPI0_RCV_IPL0_MASK  0x40U
  #define INTC_IPR2_SPI0_RCV_IPL1_MASK  0x80U
  #define INTC_IPR2_SPI0_XMIT_IPL0_MASK 0x0100U
  #define INTC_IPR2_SPI0_XMIT_IPL1_MASK 0x0200U
  #define INTC_IPR2_SPI1_RCV_IPL0_MASK  0x0400U
  #define INTC_IPR2_SPI1_RCV_IPL1_MASK  0x0800U
  #define INTC_IPR2_SPI1_XMIT_IPL0_MASK 0x1000U
  #define INTC_IPR2_SPI1_XMIT_IPL1_MASK 0x2000U
  #define INTC_IPR2_SCI0_XMIT_IPL0_MASK 0x4000U
  #define INTC_IPR2_SCI0_XMIT_IPL1_MASK 0x8000U
  #define INTC_IPR2_GPIO_C_IPL_MASK     0x03U
  #define INTC_IPR2_GPIO_C_IPL_BITNUM   0x00U
  #define INTC_IPR2_GPIO_B_IPL_MASK     0x0CU
  #define INTC_IPR2_GPIO_B_IPL_BITNUM   0x02U
  #define INTC_IPR2_GPIO_A_IPL_MASK     0x30U
  #define INTC_IPR2_GPIO_A_IPL_BITNUM   0x04U
  #define INTC_IPR2_SPI0_RCV_IPL_MASK   0xC0U
  #define INTC_IPR2_SPI0_RCV_IPL_BITNUM 0x06U
  #define INTC_IPR2_SPI0_XMIT_IPL_MASK  0x0300U
  #define INTC_IPR2_SPI0_XMIT_IPL_BITNUM 0x08U
  #define INTC_IPR2_SPI1_RCV_IPL_MASK   0x0C00U
  #define INTC_IPR2_SPI1_RCV_IPL_BITNUM 0x0AU
  #define INTC_IPR2_SPI1_XMIT_IPL_MASK  0x3000U
  #define INTC_IPR2_SPI1_XMIT_IPL_BITNUM 0x0CU
  #define INTC_IPR2_SCI0_XMIT_IPL_MASK  0xC000U
  #define INTC_IPR2_SCI0_XMIT_IPL_BITNUM 0x0EU
  #define INTC_IPR2                     (*((volatile word *)0x0000F0E2))


  /*** INTC_IPR3 - Interrupt Priority Register 3; 0x0000F0E3 ***/
  union {
    word Word;
  } INTC_IPR3_STR;
  
  #define INTC_IPR3_SCI0_TIDL_IPL0_MASK 0x01U
  #define INTC_IPR3_SCI0_TIDL_IPL1_MASK 0x02U
  #define INTC_IPR3_SCI0_RERR_IPL0_MASK 0x04U
  #define INTC_IPR3_SCI0_RERR_IPL1_MASK 0x08U
  #define INTC_IPR3_SCI0_RCV_IPL0_MASK  0x10U
  #define INTC_IPR3_SCI0_RCV_IPL1_MASK  0x20U
  #define INTC_IPR3_SCI1_XMIT_IPL0_MASK 0x40U
  #define INTC_IPR3_SCI1_XMIT_IPL1_MASK 0x80U
  #define INTC_IPR3_SCI1_TIDL_IPL0_MASK 0x0100U
  #define INTC_IPR3_SCI1_TIDL_IPL1_MASK 0x0200U
  #define INTC_IPR3_SCI1_RERR_IPL0_MASK 0x0400U
  #define INTC_IPR3_SCI1_RERR_IPL1_MASK 0x0800U
  #define INTC_IPR3_SCI1_RCV_IPL0_MASK  0x1000U
  #define INTC_IPR3_SCI1_RCV_IPL1_MASK  0x2000U
  #define INTC_IPR3_I2C_ERR_IPL0_MASK   0x4000U
  #define INTC_IPR3_I2C_ERR_IPL1_MASK   0x8000U
  #define INTC_IPR3_SCI0_TIDL_IPL_MASK  0x03U
  #define INTC_IPR3_SCI0_TIDL_IPL_BITNUM 0x00U
  #define INTC_IPR3_SCI0_RERR_IPL_MASK  0x0CU
  #define INTC_IPR3_SCI0_RERR_IPL_BITNUM 0x02U
  #define INTC_IPR3_SCI0_RCV_IPL_MASK   0x30U
  #define INTC_IPR3_SCI0_RCV_IPL_BITNUM 0x04U
  #define INTC_IPR3_SCI1_XMIT_IPL_MASK  0xC0U
  #define INTC_IPR3_SCI1_XMIT_IPL_BITNUM 0x06U
  #define INTC_IPR3_SCI1_TIDL_IPL_MASK  0x0300U
  #define INTC_IPR3_SCI1_TIDL_IPL_BITNUM 0x08U
  #define INTC_IPR3_SCI1_RERR_IPL_MASK  0x0C00U
  #define INTC_IPR3_SCI1_RERR_IPL_BITNUM 0x0AU
  #define INTC_IPR3_SCI1_RCV_IPL_MASK   0x3000U
  #define INTC_IPR3_SCI1_RCV_IPL_BITNUM 0x0CU
  #define INTC_IPR3_I2C_ERR_IPL_MASK    0xC000U
  #define INTC_IPR3_I2C_ERR_IPL_BITNUM  0x0EU
  #define INTC_IPR3                     (*((volatile word *)0x0000F0E3))


  /*** INTC_IPR4 - Interrupt Priority Register 4; 0x0000F0E4 ***/
  union {
    word Word;
  } INTC_IPR4_STR;
  
  #define INTC_IPR4_I2C_GEN_IPL0_MASK   0x01U
  #define INTC_IPR4_I2C_GEN_IPL1_MASK   0x02U
  #define INTC_IPR4_I2C_RX_IPL0_MASK    0x04U
  #define INTC_IPR4_I2C_RX_IPL1_MASK    0x08U
  #define INTC_IPR4_I2C_TX_IPL0_MASK    0x10U
  #define INTC_IPR4_I2C_TX_IPL1_MASK    0x20U
  #define INTC_IPR4_I2C_STAT_IPL0_MASK  0x40U
  #define INTC_IPR4_I2C_STAT_IPL1_MASK  0x80U
  #define INTC_IPR4_TMRA_0_IPL0_MASK    0x0100U
  #define INTC_IPR4_TMRA_0_IPL1_MASK    0x0200U
  #define INTC_IPR4_TMRA_1_IPL0_MASK    0x0400U
  #define INTC_IPR4_TMRA_1_IPL1_MASK    0x0800U
  #define INTC_IPR4_TMRA_2_IPL0_MASK    0x1000U
  #define INTC_IPR4_TMRA_2_IPL1_MASK    0x2000U
  #define INTC_IPR4_TMRA_3_IPL0_MASK    0x4000U
  #define INTC_IPR4_TMRA_3_IPL1_MASK    0x8000U
  #define INTC_IPR4_I2C_GEN_IPL_MASK    0x03U
  #define INTC_IPR4_I2C_GEN_IPL_BITNUM  0x00U
  #define INTC_IPR4_I2C_RX_IPL_MASK     0x0CU
  #define INTC_IPR4_I2C_RX_IPL_BITNUM   0x02U
  #define INTC_IPR4_I2C_TX_IPL_MASK     0x30U
  #define INTC_IPR4_I2C_TX_IPL_BITNUM   0x04U
  #define INTC_IPR4_I2C_STAT_IPL_MASK   0xC0U
  #define INTC_IPR4_I2C_STAT_IPL_BITNUM 0x06U
  #define INTC_IPR4_TMRA_0_IPL_MASK     0x0300U
  #define INTC_IPR4_TMRA_0_IPL_BITNUM   0x08U
  #define INTC_IPR4_TMRA_1_IPL_MASK     0x0C00U
  #define INTC_IPR4_TMRA_1_IPL_BITNUM   0x0AU
  #define INTC_IPR4_TMRA_2_IPL_MASK     0x3000U
  #define INTC_IPR4_TMRA_2_IPL_BITNUM   0x0CU
  #define INTC_IPR4_TMRA_3_IPL_MASK     0xC000U
  #define INTC_IPR4_TMRA_3_IPL_BITNUM   0x0EU
  #define INTC_IPR4                     (*((volatile word *)0x0000F0E4))


  /*** INTC_IPR5 - Interrupt Priority Register 5; 0x0000F0E5 ***/
  union {
    word Word;
  } INTC_IPR5_STR;
  
  #define INTC_IPR5_TMRB_0_IPL0_MASK    0x01U
  #define INTC_IPR5_TMRB_0_IPL1_MASK    0x02U
  #define INTC_IPR5_TMRB_1_IPL0_MASK    0x04U
  #define INTC_IPR5_TMRB_1_IPL1_MASK    0x08U
  #define INTC_IPR5_TMRB_2_IPL0_MASK    0x10U
  #define INTC_IPR5_TMRB_2_IPL1_MASK    0x20U
  #define INTC_IPR5_TMRB_3_IPL0_MASK    0x40U
  #define INTC_IPR5_TMRB_3_IPL1_MASK    0x80U
  #define INTC_IPR5_COMPA_IPL0_MASK     0x0100U
  #define INTC_IPR5_COMPA_IPL1_MASK     0x0200U
  #define INTC_IPR5_COMPB_IPL0_MASK     0x0400U
  #define INTC_IPR5_COMPB_IPL1_MASK     0x0800U
  #define INTC_IPR5_PIT0_IPL0_MASK      0x1000U
  #define INTC_IPR5_PIT0_IPL1_MASK      0x2000U
  #define INTC_IPR5_PIT1_IPL0_MASK      0x4000U
  #define INTC_IPR5_PIT1_IPL1_MASK      0x8000U
  #define INTC_IPR5_TMRB_0_IPL_MASK     0x03U
  #define INTC_IPR5_TMRB_0_IPL_BITNUM   0x00U
  #define INTC_IPR5_TMRB_1_IPL_MASK     0x0CU
  #define INTC_IPR5_TMRB_1_IPL_BITNUM   0x02U
  #define INTC_IPR5_TMRB_2_IPL_MASK     0x30U
  #define INTC_IPR5_TMRB_2_IPL_BITNUM   0x04U
  #define INTC_IPR5_TMRB_3_IPL_MASK     0xC0U
  #define INTC_IPR5_TMRB_3_IPL_BITNUM   0x06U
  #define INTC_IPR5_COMPA_IPL_MASK      0x0300U
  #define INTC_IPR5_COMPA_IPL_BITNUM    0x08U
  #define INTC_IPR5_COMPB_IPL_MASK      0x0C00U
  #define INTC_IPR5_COMPB_IPL_BITNUM    0x0AU
  #define INTC_IPR5_PIT0_IPL_MASK       0x3000U
  #define INTC_IPR5_PIT0_IPL_BITNUM     0x0CU
  #define INTC_IPR5_PIT1_IPL_MASK       0xC000U
  #define INTC_IPR5_PIT1_IPL_BITNUM     0x0EU
  #define INTC_IPR5                     (*((volatile word *)0x0000F0E5))


  /*** INTC_IPR6 - Interrupt Priority Register 6; 0x0000F0E6 ***/
  union {
    word Word;
  } INTC_IPR6_STR;
  
  #define INTC_IPR6_PIT2_IPL0_MASK      0x01U
  #define INTC_IPR6_PIT2_IPL1_MASK      0x02U
  #define INTC_IPR6_ADCA_CC_IPL0_MASK   0x04U
  #define INTC_IPR6_ADCA_CC_IPL1_MASK   0x08U
  #define INTC_IPR6_ADCB_CC_IPL0_MASK   0x10U
  #define INTC_IPR6_ADCB_CC_IPL1_MASK   0x20U
  #define INTC_IPR6_ADC_ZC_IPL0_MASK    0x40U
  #define INTC_IPR6_ADC_ZC_IPL1_MASK    0x80U
  #define INTC_IPR6_PWM_RL_IPL0_MASK    0x0100U
  #define INTC_IPR6_PWM_RL_IPL1_MASK    0x0200U
  #define INTC_IPR6_PWM_F_IPL0_MASK     0x0400U
  #define INTC_IPR6_PWM_F_IPL1_MASK     0x0800U
  #define INTC_IPR6_PIT2_IPL_MASK       0x03U
  #define INTC_IPR6_PIT2_IPL_BITNUM     0x00U
  #define INTC_IPR6_ADCA_CC_IPL_MASK    0x0CU
  #define INTC_IPR6_ADCA_CC_IPL_BITNUM  0x02U
  #define INTC_IPR6_ADCB_CC_IPL_MASK    0x30U
  #define INTC_IPR6_ADCB_CC_IPL_BITNUM  0x04U
  #define INTC_IPR6_ADC_ZC_IPL_MASK     0xC0U
  #define INTC_IPR6_ADC_ZC_IPL_BITNUM   0x06U
  #define INTC_IPR6_PWM_RL_IPL_MASK     0x0300U
  #define INTC_IPR6_PWM_RL_IPL_BITNUM   0x08U
  #define INTC_IPR6_PWM_F_IPL_MASK      0x0C00U
  #define INTC_IPR6_PWM_F_IPL_BITNUM    0x0AU
  #define INTC_IPR6                     (*((volatile word *)0x0000F0E6))


  /*** INTC_VBA - Vector Base Address Register; 0x0000F0E7 ***/
  union {
    word Word;
  } INTC_VBA_STR;
  
  #define INTC_VBA_VECTOR_BASE_ADDRESS0_MASK 0x01U
  #define INTC_VBA_VECTOR_BASE_ADDRESS1_MASK 0x02U
  #define INTC_VBA_VECTOR_BASE_ADDRESS2_MASK 0x04U
  #define INTC_VBA_VECTOR_BASE_ADDRESS3_MASK 0x08U
  #define INTC_VBA_VECTOR_BASE_ADDRESS4_MASK 0x10U
  #define INTC_VBA_VECTOR_BASE_ADDRESS5_MASK 0x20U
  #define INTC_VBA_VECTOR_BASE_ADDRESS6_MASK 0x40U
  #define INTC_VBA_VECTOR_BASE_ADDRESS7_MASK 0x80U
  #define INTC_VBA_VECTOR_BASE_ADDRESS8_MASK 0x0100U
  #define INTC_VBA_VECTOR_BASE_ADDRESS9_MASK 0x0200U
  #define INTC_VBA_VECTOR_BASE_ADDRESS10_MASK 0x0400U
  #define INTC_VBA_VECTOR_BASE_ADDRESS11_MASK 0x0800U
  #define INTC_VBA_VECTOR_BASE_ADDRESS12_MASK 0x1000U
  #define INTC_VBA_VECTOR_BASE_ADDRESS13_MASK 0x2000U
  #define INTC_VBA_VECTOR_BASE_ADDRESS_MASK 0x3FFFU
  #define INTC_VBA_VECTOR_BASE_ADDRESS_BITNUM 0x00U
  #define INTC_VBA                      (*((volatile word *)0x0000F0E7))


  /*** INTC_FIM0 - Fast Interrupt 0 Match Register; 0x0000F0E8 ***/
  union {
    word Word;
  } INTC_FIM0_STR;
  
  #define INTC_FIM0_FAST_INTERRUPT_00_MASK 0x01U
  #define INTC_FIM0_FAST_INTERRUPT_01_MASK 0x02U
  #define INTC_FIM0_FAST_INTERRUPT_02_MASK 0x04U
  #define INTC_FIM0_FAST_INTERRUPT_03_MASK 0x08U
  #define INTC_FIM0_FAST_INTERRUPT_04_MASK 0x10U
  #define INTC_FIM0_FAST_INTERRUPT_05_MASK 0x20U
  #define INTC_FIM0_FAST_INTERRUPT_0_MASK 0x3FU
  #define INTC_FIM0_FAST_INTERRUPT_0_BITNUM 0x00U
  #define INTC_FIM0                     (*((volatile word *)0x0000F0E8))


  /*** INTC_FIVAL0 - Fast Interrupt 0 Vector Address Low Register; 0x0000F0E9 ***/
  union {
    word Word;
  } INTC_FIVAL0_STR;
  
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW0_MASK 0x01U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW1_MASK 0x02U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW2_MASK 0x04U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW3_MASK 0x08U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW4_MASK 0x10U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW5_MASK 0x20U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW6_MASK 0x40U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW7_MASK 0x80U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW8_MASK 0x0100U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW9_MASK 0x0200U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW10_MASK 0x0400U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW11_MASK 0x0800U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW12_MASK 0x1000U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW13_MASK 0x2000U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW14_MASK 0x4000U
  #define INTC_FIVAL0_FAST_INTERRUPT_0_VECTOR_ADDRESS_LOW15_MASK 0x8000U
  #define INTC_FIVAL0                   (*((volatile word *)0x0000F0E9))


  /*** INTC_FIVAH0 - Fast Interrupt 0 Vector Address High Register; 0x0000F0EA ***/
  union {
    word Word;
  } INTC_FIVAH0_STR;
  
  #define INTC_FIVAH0_FAST_INTERRUPT_0_VECTOR_ADDRESS_HIGH0_MASK 0x01U
  #define INTC_FIVAH0_FAST_INTERRUPT_0_VECTOR_ADDRESS_HIGH1_MASK 0x02U
  #define INTC_FIVAH0_FAST_INTERRUPT_0_VECTOR_ADDRESS_HIGH2_MASK 0x04U
  #define INTC_FIVAH0_FAST_INTERRUPT_0_VECTOR_ADDRESS_HIGH3_MASK 0x08U
  #define INTC_FIVAH0_FAST_INTERRUPT_0_VECTOR_ADDRESS_HIGH4_MASK 0x10U
  #define INTC_FIVAH0_FAST_INTERRUPT_0_VECTOR_ADDRESS_HIGH_MASK 0x1FU
  #define INTC_FIVAH0_FAST_INTERRUPT_0_VECTOR_ADDRESS_HIGH_BITNUM 0x00U
  #define INTC_FIVAH0                   (*((volatile word *)0x0000F0EA))


  /*** INTC_FIM1 - Fast Interrupt 1 Match Register; 0x0000F0EB ***/
  union {
    word Word;
  } INTC_FIM1_STR;
  
  #define INTC_FIM1_FAST_INTERRUPT_10_MASK 0x01U
  #define INTC_FIM1_FAST_INTERRUPT_11_MASK 0x02U
  #define INTC_FIM1_FAST_INTERRUPT_12_MASK 0x04U
  #define INTC_FIM1_FAST_INTERRUPT_13_MASK 0x08U
  #define INTC_FIM1_FAST_INTERRUPT_14_MASK 0x10U
  #define INTC_FIM1_FAST_INTERRUPT_15_MASK 0x20U
  #define INTC_FIM1_FAST_INTERRUPT_1_MASK 0x3FU
  #define INTC_FIM1_FAST_INTERRUPT_1_BITNUM 0x00U
  #define INTC_FIM1                     (*((volatile word *)0x0000F0EB))


  /*** INTC_FIVAL1 - Fast Interrupt 1 Vector Address Low Register; 0x0000F0EC ***/
  union {
    word Word;
  } INTC_FIVAL1_STR;
  
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW0_MASK 0x01U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW1_MASK 0x02U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW2_MASK 0x04U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW3_MASK 0x08U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW4_MASK 0x10U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW5_MASK 0x20U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW6_MASK 0x40U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW7_MASK 0x80U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW8_MASK 0x0100U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW9_MASK 0x0200U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW10_MASK 0x0400U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW11_MASK 0x0800U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW12_MASK 0x1000U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW13_MASK 0x2000U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW14_MASK 0x4000U
  #define INTC_FIVAL1_FAST_INTERRUPT_1_VECTOR_ADDRESS_LOW15_MASK 0x8000U
  #define INTC_FIVAL1                   (*((volatile word *)0x0000F0EC))


  /*** INTC_FIVAH1 - Fast Interrupt 1 Vector Address High Register; 0x0000F0ED ***/
  union {
    word Word;
  } INTC_FIVAH1_STR;
  
  #define INTC_FIVAH1_FAST_INTERRUPT_1_VECTOR_ADDRESS_HIGH0_MASK 0x01U
  #define INTC_FIVAH1_FAST_INTERRUPT_1_VECTOR_ADDRESS_HIGH1_MASK 0x02U
  #define INTC_FIVAH1_FAST_INTERRUPT_1_VECTOR_ADDRESS_HIGH2_MASK 0x04U
  #define INTC_FIVAH1_FAST_INTERRUPT_1_VECTOR_ADDRESS_HIGH3_MASK 0x08U
  #define INTC_FIVAH1_FAST_INTERRUPT_1_VECTOR_ADDRESS_HIGH4_MASK 0x10U
  #define INTC_FIVAH1_FAST_INTERRUPT_1_VECTOR_ADDRESS_HIGH_MASK 0x1FU
  #define INTC_FIVAH1_FAST_INTERRUPT_1_VECTOR_ADDRESS_HIGH_BITNUM 0x00U
  #define INTC_FIVAH1                   (*((volatile word *)0x0000F0ED))


  /*** INTC_IRQP0 - IRQ Pending Register 0; 0x0000F0EE ***/
  union {
    word Word;
  } INTC_IRQP0_STR;
  
  #define INTC_IRQP0_PENDING2_MASK      0x02U
  #define INTC_IRQP0_PENDING3_MASK      0x04U
  #define INTC_IRQP0_PENDING4_MASK      0x08U
  #define INTC_IRQP0_PENDING5_MASK      0x10U
  #define INTC_IRQP0_PENDING6_MASK      0x20U
  #define INTC_IRQP0_PENDING7_MASK      0x40U
  #define INTC_IRQP0_PENDING8_MASK      0x80U
  #define INTC_IRQP0_PENDING9_MASK      0x0100U
  #define INTC_IRQP0_PENDING10_MASK     0x0200U
  #define INTC_IRQP0_PENDING11_MASK     0x0400U
  #define INTC_IRQP0_PENDING12_MASK     0x0800U
  #define INTC_IRQP0_PENDING13_MASK     0x1000U
  #define INTC_IRQP0_PENDING14_MASK     0x2000U
  #define INTC_IRQP0_PENDING15_MASK     0x4000U
  #define INTC_IRQP0_PENDING16_MASK     0x8000U
  #define INTC_IRQP0_PENDING_2_MASK     0xFFFEU
  #define INTC_IRQP0_PENDING_2_BITNUM   0x01U
  #define INTC_IRQP0                    (*((volatile word *)0x0000F0EE))


  /*** INTC_IRQP1 - IRQ Pending Register 1; 0x0000F0EF ***/
  union {
    word Word;
  } INTC_IRQP1_STR;
  
  #define INTC_IRQP1_PENDING17_MASK     0x01U
  #define INTC_IRQP1_PENDING18_MASK     0x02U
  #define INTC_IRQP1_PENDING19_MASK     0x04U
  #define INTC_IRQP1_PENDING20_MASK     0x08U
  #define INTC_IRQP1_PENDING21_MASK     0x10U
  #define INTC_IRQP1_PENDING22_MASK     0x20U
  #define INTC_IRQP1_PENDING23_MASK     0x40U
  #define INTC_IRQP1_PENDING24_MASK     0x80U
  #define INTC_IRQP1_PENDING25_MASK     0x0100U
  #define INTC_IRQP1_PENDING26_MASK     0x0200U
  #define INTC_IRQP1_PENDING27_MASK     0x0400U
  #define INTC_IRQP1_PENDING28_MASK     0x0800U
  #define INTC_IRQP1_PENDING29_MASK     0x1000U
  #define INTC_IRQP1_PENDING30_MASK     0x2000U
  #define INTC_IRQP1_PENDING31_MASK     0x4000U
  #define INTC_IRQP1_PENDING32_MASK     0x8000U
  #define INTC_IRQP1                    (*((volatile word *)0x0000F0EF))


  /*** INTC_IRQP2 - IRQ Pending Register 2; 0x0000F0F0 ***/
  union {
    word Word;
  } INTC_IRQP2_STR;
  
  #define INTC_IRQP2_PENDING33_MASK     0x01U
  #define INTC_IRQP2_PENDING34_MASK     0x02U
  #define INTC_IRQP2_PENDING35_MASK     0x04U
  #define INTC_IRQP2_PENDING36_MASK     0x08U
  #define INTC_IRQP2_PENDING37_MASK     0x10U
  #define INTC_IRQP2_PENDING38_MASK     0x20U
  #define INTC_IRQP2_PENDING39_MASK     0x40U
  #define INTC_IRQP2_PENDING40_MASK     0x80U
  #define INTC_IRQP2_PENDING41_MASK     0x0100U
  #define INTC_IRQP2_PENDING42_MASK     0x0200U
  #define INTC_IRQP2_PENDING43_MASK     0x0400U
  #define INTC_IRQP2_PENDING44_MASK     0x0800U
  #define INTC_IRQP2_PENDING45_MASK     0x1000U
  #define INTC_IRQP2_PENDING46_MASK     0x2000U
  #define INTC_IRQP2_PENDING47_MASK     0x4000U
  #define INTC_IRQP2_PENDING48_MASK     0x8000U
  #define INTC_IRQP2                    (*((volatile word *)0x0000F0F0))


  /*** INTC_IRQP3 - IRQ Pending Register 3; 0x0000F0F1 ***/
  union {
    word Word;
  } INTC_IRQP3_STR;
  
  #define INTC_IRQP3_PENDING49_MASK     0x01U
  #define INTC_IRQP3_PENDING50_MASK     0x02U
  #define INTC_IRQP3_PENDING51_MASK     0x04U
  #define INTC_IRQP3_PENDING52_MASK     0x08U
  #define INTC_IRQP3_PENDING53_MASK     0x10U
  #define INTC_IRQP3_PENDING54_MASK     0x20U
  #define INTC_IRQP3_PENDING55_MASK     0x40U
  #define INTC_IRQP3_PENDING56_MASK     0x80U
  #define INTC_IRQP3_PENDING57_MASK     0x0100U
  #define INTC_IRQP3_PENDING58_MASK     0x0200U
  #define INTC_IRQP3_PENDING59_MASK     0x0400U
  #define INTC_IRQP3_PENDING60_MASK     0x0800U
  #define INTC_IRQP3_PENDING61_MASK     0x1000U
  #define INTC_IRQP3_PENDING62_MASK     0x2000U
  #define INTC_IRQP3_PENDING63_MASK     0x4000U
  #define INTC_IRQP3_PENDING_49_MASK    0x7FFFU
  #define INTC_IRQP3_PENDING_49_BITNUM  0x00U
  #define INTC_IRQP3                    (*((volatile word *)0x0000F0F1))


  /*** INTC_TIRQS0 - Test IRQ Source Register 0; 0x0000F0F2 ***/
  union {
    word Word;
  } INTC_TIRQS0_STR;
  
  #define INTC_TIRQS0_TEST_IRQ2_MASK    0x02U
  #define INTC_TIRQS0_TEST_IRQ3_MASK    0x04U
  #define INTC_TIRQS0_TEST_IRQ4_MASK    0x08U
  #define INTC_TIRQS0_TEST_IRQ5_MASK    0x10U
  #define INTC_TIRQS0_TEST_IRQ6_MASK    0x20U
  #define INTC_TIRQS0_TEST_IRQ7_MASK    0x40U
  #define INTC_TIRQS0_TEST_IRQ8_MASK    0x80U
  #define INTC_TIRQS0_TEST_IRQ9_MASK    0x0100U
  #define INTC_TIRQS0_TEST_IRQ10_MASK   0x0200U
  #define INTC_TIRQS0_TEST_IRQ11_MASK   0x0400U
  #define INTC_TIRQS0_TEST_IRQ12_MASK   0x0800U
  #define INTC_TIRQS0_TEST_IRQ13_MASK   0x1000U
  #define INTC_TIRQS0_TEST_IRQ14_MASK   0x2000U
  #define INTC_TIRQS0_TEST_IRQ15_MASK   0x4000U
  #define INTC_TIRQS0_TEST_IRQ16_MASK   0x8000U
  #define INTC_TIRQS0_TEST_IRQ_2_MASK   0xFFFEU
  #define INTC_TIRQS0_TEST_IRQ_2_BITNUM 0x01U
  #define INTC_TIRQS0                   (*((volatile word *)0x0000F0F2))


  /*** INTC_TIRQS1 - Test IRQ Source Register 1; 0x0000F0F3 ***/
  union {
    word Word;
  } INTC_TIRQS1_STR;
  
  #define INTC_TIRQS1_TEST_IRQ17_MASK   0x01U
  #define INTC_TIRQS1_TEST_IRQ18_MASK   0x02U
  #define INTC_TIRQS1_TEST_IRQ19_MASK   0x04U
  #define INTC_TIRQS1_TEST_IRQ20_MASK   0x08U
  #define INTC_TIRQS1_TEST_IRQ21_MASK   0x10U
  #define INTC_TIRQS1_TEST_IRQ22_MASK   0x20U
  #define INTC_TIRQS1_TEST_IRQ23_MASK   0x40U
  #define INTC_TIRQS1_TEST_IRQ24_MASK   0x80U
  #define INTC_TIRQS1_TEST_IRQ25_MASK   0x0100U
  #define INTC_TIRQS1_TEST_IRQ26_MASK   0x0200U
  #define INTC_TIRQS1_TEST_IRQ27_MASK   0x0400U
  #define INTC_TIRQS1_TEST_IRQ28_MASK   0x0800U
  #define INTC_TIRQS1_TEST_IRQ29_MASK   0x1000U
  #define INTC_TIRQS1_TEST_IRQ30_MASK   0x2000U
  #define INTC_TIRQS1_TEST_IRQ31_MASK   0x4000U
  #define INTC_TIRQS1_TEST_IRQ32_MASK   0x8000U
  #define INTC_TIRQS1                   (*((volatile word *)0x0000F0F3))


  /*** INTC_TIRQS2 - Test IRQ Source Register 2; 0x0000F0F4 ***/
  union {
    word Word;
  } INTC_TIRQS2_STR;
  
  #define INTC_TIRQS2_TEST_IRQ33_MASK   0x01U
  #define INTC_TIRQS2_TEST_IRQ34_MASK   0x02U
  #define INTC_TIRQS2_TEST_IRQ35_MASK   0x04U
  #define INTC_TIRQS2_TEST_IRQ36_MASK   0x08U
  #define INTC_TIRQS2_TEST_IRQ37_MASK   0x10U
  #define INTC_TIRQS2_TEST_IRQ38_MASK   0x20U
  #define INTC_TIRQS2_TEST_IRQ39_MASK   0x40U
  #define INTC_TIRQS2_TEST_IRQ40_MASK   0x80U
  #define INTC_TIRQS2_TEST_IRQ41_MASK   0x0100U
  #define INTC_TIRQS2_TEST_IRQ42_MASK   0x0200U
  #define INTC_TIRQS2_TEST_IRQ43_MASK   0x0400U
  #define INTC_TIRQS2_TEST_IRQ44_MASK   0x0800U
  #define INTC_TIRQS2_TEST_IRQ45_MASK   0x1000U
  #define INTC_TIRQS2_TEST_IRQ46_MASK   0x2000U
  #define INTC_TIRQS2_TEST_IRQ47_MASK   0x4000U
  #define INTC_TIRQS2_TEST_IRQ48_MASK   0x8000U
  #define INTC_TIRQS2                   (*((volatile word *)0x0000F0F4))


  /*** INTC_TIRQS3 - Test IRQ Source Register 3; 0x0000F0F5 ***/
  union {
    word Word;
  } INTC_TIRQS3_STR;
  
  #define INTC_TIRQS3_TEST_IRQ49_MASK   0x01U
  #define INTC_TIRQS3_TEST_IRQ50_MASK   0x02U
  #define INTC_TIRQS3_TEST_IRQ51_MASK   0x04U
  #define INTC_TIRQS3_TEST_IRQ52_MASK   0x08U
  #define INTC_TIRQS3_TEST_IRQ53_MASK   0x10U
  #define INTC_TIRQS3_TEST_IRQ54_MASK   0x20U
  #define INTC_TIRQS3_TEST_IRQ55_MASK   0x40U
  #define INTC_TIRQS3_TEST_IRQ56_MASK   0x80U
  #define INTC_TIRQS3_TEST_IRQ57_MASK   0x0100U
  #define INTC_TIRQS3_TEST_IRQ58_MASK   0x0200U
  #define INTC_TIRQS3_TEST_IRQ59_MASK   0x0400U
  #define INTC_TIRQS3_TEST_IRQ60_MASK   0x0800U
  #define INTC_TIRQS3_TEST_IRQ61_MASK   0x1000U
  #define INTC_TIRQS3_TEST_IRQ62_MASK   0x2000U
  #define INTC_TIRQS3_TEST_IRQ63_MASK   0x4000U
  #define INTC_TIRQS3_TEST_IRQ_49_MASK  0x7FFFU
  #define INTC_TIRQS3_TEST_IRQ_49_BITNUM 0x00U
  #define INTC_TIRQS3                   (*((volatile word *)0x0000F0F5))


  /*** INTC_CTRL - Interrupt Control Register; 0x0000F0F6 ***/
  union {
    word Word;
  } INTC_CTRL_STR;
  
  #define INTC_CTRL_INT_DIS_MASK        0x20U
  #define INTC_CTRL_VAB0_MASK           0x40U
  #define INTC_CTRL_VAB1_MASK           0x80U
  #define INTC_CTRL_VAB2_MASK           0x0100U
  #define INTC_CTRL_VAB3_MASK           0x0200U
  #define INTC_CTRL_VAB4_MASK           0x0400U
  #define INTC_CTRL_VAB5_MASK           0x0800U
  #define INTC_CTRL_VAB6_MASK           0x1000U
  #define INTC_CTRL_IPIC0_MASK          0x2000U
  #define INTC_CTRL_IPIC1_MASK          0x4000U
  #define INTC_CTRL_INT_MASK            0x8000U
  #define INTC_CTRL_VAB_MASK            0x1FC0U
  #define INTC_CTRL_VAB_BITNUM          0x06U
  #define INTC_CTRL_IPIC_MASK           0x6000U
  #define INTC_CTRL_IPIC_BITNUM         0x0DU
  #define INTC_CTRL                     (*((volatile word *)0x0000F0F6))


  /*** INTC_TCTRL - Test Interrupt Control Register; 0x0000F0F7 ***/
  union {
    word Word;
  } INTC_TCTRL_STR;
  
  #define INTC_TCTRL_PIC_EN_MASK        0x01U
  #define INTC_TCTRL_IACK_MASK          0x02U
  #define INTC_TCTRL_SR0_MASK           0x04U
  #define INTC_TCTRL_SR1_MASK           0x08U
  #define INTC_TCTRL_MODE0_MASK         0x10U
  #define INTC_TCTRL_MODE1_MASK         0x20U
  #define INTC_TCTRL_VAB0_MASK          0x40U
  #define INTC_TCTRL_VAB1_MASK          0x80U
  #define INTC_TCTRL_VAB2_MASK          0x0100U
  #define INTC_TCTRL_VAB3_MASK          0x0200U
  #define INTC_TCTRL_VAB4_MASK          0x0400U
  #define INTC_TCTRL_VAB5_MASK          0x0800U
  #define INTC_TCTRL_VAB6_MASK          0x1000U
  #define INTC_TCTRL_VAB7_MASK          0x2000U
  #define INTC_TCTRL_VAB8_MASK          0x4000U
  #define INTC_TCTRL_VAB9_MASK          0x8000U
  #define INTC_TCTRL_SR_MASK            0x0CU
  #define INTC_TCTRL_SR_BITNUM          0x02U
  #define INTC_TCTRL_MODE_MASK          0x30U
  #define INTC_TCTRL_MODE_BITNUM        0x04U
  #define INTC_TCTRL_VAB_MASK           0xFFC0U
  #define INTC_TCTRL_VAB_BITNUM         0x06U
  #define INTC_TCTRL                    (*((volatile word *)0x0000F0F7))


  word Reserved0[8];                   /* Reserved (unused) registers */

} INTC_PRPH;

/******************************************
*** Peripheral SIM
*******************************************/
typedef volatile struct {
  /*** SIM_CTRL - SIM Control Register; 0x0000F100 ***/
  union {
    word Word;
  } SIM_CTRL_STR;
  
  #define SIM_CTRL_WAIT_DISABLE0_MASK   0x01U
  #define SIM_CTRL_WAIT_DISABLE1_MASK   0x02U
  #define SIM_CTRL_STOP_DISABLE0_MASK   0x04U
  #define SIM_CTRL_STOP_DISABLE1_MASK   0x08U
  #define SIM_CTRL_SWRST_MASK           0x10U
  #define SIM_CTRL_ONCEEBL_MASK         0x20U
  #define SIM_CTRL_WAIT_DISABLE_MASK    0x03U
  #define SIM_CTRL_WAIT_DISABLE_BITNUM  0x00U
  #define SIM_CTRL_STOP_DISABLE_MASK    0x0CU
  #define SIM_CTRL_STOP_DISABLE_BITNUM  0x02U
  #define SIM_CTRL                      (*((volatile word *)0x0000F100))


  /*** SIM_RSTAT - SIM Reset Status Register; 0x0000F101 ***/
  union {
    word Word;
  } SIM_RSTAT_STR;
  
  #define SIM_RSTAT_POR_MASK            0x04U
  #define SIM_RSTAT_EXTR_MASK           0x08U
  #define SIM_RSTAT_COP_LOR_MASK        0x10U
  #define SIM_RSTAT_COP_TOR_MASK        0x20U
  #define SIM_RSTAT_SWR_MASK            0x40U
  #define SIM_RSTAT                     (*((volatile word *)0x0000F101))


  /*** SIM_SWC0 - SIM Software Control Register 0; 0x0000F102 ***/
  union {
    word Word;
  } SIM_SWC0_STR;
  
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_00_MASK 0x01U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_01_MASK 0x02U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_02_MASK 0x04U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_03_MASK 0x08U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_04_MASK 0x10U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_05_MASK 0x20U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_06_MASK 0x40U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_07_MASK 0x80U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_08_MASK 0x0100U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_09_MASK 0x0200U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_010_MASK 0x0400U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_011_MASK 0x0800U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_012_MASK 0x1000U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_013_MASK 0x2000U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_014_MASK 0x4000U
  #define SIM_SWC0_SOFTWARE_CONTROL_DATA_015_MASK 0x8000U
  #define SIM_SWC0                      (*((volatile word *)0x0000F102))


  /*** SIM_SWC1 - SIM Software Control Register 1; 0x0000F103 ***/
  union {
    word Word;
  } SIM_SWC1_STR;
  
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_10_MASK 0x01U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_11_MASK 0x02U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_12_MASK 0x04U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_13_MASK 0x08U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_14_MASK 0x10U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_15_MASK 0x20U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_16_MASK 0x40U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_17_MASK 0x80U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_18_MASK 0x0100U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_19_MASK 0x0200U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_110_MASK 0x0400U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_111_MASK 0x0800U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_112_MASK 0x1000U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_113_MASK 0x2000U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_114_MASK 0x4000U
  #define SIM_SWC1_SOFTWARE_CONTROL_DATA_115_MASK 0x8000U
  #define SIM_SWC1                      (*((volatile word *)0x0000F103))


  /*** SIM_SWC2 - SIM Software Control Register 2; 0x0000F104 ***/
  union {
    word Word;
  } SIM_SWC2_STR;
  
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_20_MASK 0x01U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_21_MASK 0x02U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_22_MASK 0x04U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_23_MASK 0x08U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_24_MASK 0x10U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_25_MASK 0x20U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_26_MASK 0x40U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_27_MASK 0x80U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_28_MASK 0x0100U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_29_MASK 0x0200U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_210_MASK 0x0400U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_211_MASK 0x0800U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_212_MASK 0x1000U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_213_MASK 0x2000U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_214_MASK 0x4000U
  #define SIM_SWC2_SOFTWARE_CONTROL_DATA_215_MASK 0x8000U
  #define SIM_SWC2                      (*((volatile word *)0x0000F104))


  /*** SIM_SWC3 - SIM Software Control Register 3; 0x0000F105 ***/
  union {
    word Word;
  } SIM_SWC3_STR;
  
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_30_MASK 0x01U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_31_MASK 0x02U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_32_MASK 0x04U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_33_MASK 0x08U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_34_MASK 0x10U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_35_MASK 0x20U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_36_MASK 0x40U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_37_MASK 0x80U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_38_MASK 0x0100U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_39_MASK 0x0200U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_310_MASK 0x0400U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_311_MASK 0x0800U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_312_MASK 0x1000U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_313_MASK 0x2000U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_314_MASK 0x4000U
  #define SIM_SWC3_SOFTWARE_CONTROL_DATA_315_MASK 0x8000U
  #define SIM_SWC3                      (*((volatile word *)0x0000F105))


  /*** SIM_MSHID - SIM Most Significant Half JTAG ID; 0x0000F106 ***/
  union {
    word Word;
  } SIM_MSHID_STR;
  
  #define SIM_MSHID_SIM_MSH_ID0_MASK    0x01U
  #define SIM_MSHID_SIM_MSH_ID1_MASK    0x02U
  #define SIM_MSHID_SIM_MSH_ID2_MASK    0x04U
  #define SIM_MSHID_SIM_MSH_ID3_MASK    0x08U
  #define SIM_MSHID_SIM_MSH_ID4_MASK    0x10U
  #define SIM_MSHID_SIM_MSH_ID5_MASK    0x20U
  #define SIM_MSHID_SIM_MSH_ID6_MASK    0x40U
  #define SIM_MSHID_SIM_MSH_ID7_MASK    0x80U
  #define SIM_MSHID_SIM_MSH_ID8_MASK    0x0100U
  #define SIM_MSHID_SIM_MSH_ID9_MASK    0x0200U
  #define SIM_MSHID_SIM_MSH_ID10_MASK   0x0400U
  #define SIM_MSHID_SIM_MSH_ID11_MASK   0x0800U
  #define SIM_MSHID_SIM_MSH_ID12_MASK   0x1000U
  #define SIM_MSHID_SIM_MSH_ID13_MASK   0x2000U
  #define SIM_MSHID_SIM_MSH_ID14_MASK   0x4000U
  #define SIM_MSHID_SIM_MSH_ID15_MASK   0x8000U
  #define SIM_MSHID                     (*((volatile word *)0x0000F106))


  /*** SIM_LSHID - SIM Least Significant Half JTAG ID; 0x0000F107 ***/
  union {
    word Word;
  } SIM_LSHID_STR;
  
  #define SIM_LSHID_SIM_LSH_ID0_MASK    0x01U
  #define SIM_LSHID_SIM_LSH_ID1_MASK    0x02U
  #define SIM_LSHID_SIM_LSH_ID2_MASK    0x04U
  #define SIM_LSHID_SIM_LSH_ID3_MASK    0x08U
  #define SIM_LSHID_SIM_LSH_ID4_MASK    0x10U
  #define SIM_LSHID_SIM_LSH_ID5_MASK    0x20U
  #define SIM_LSHID_SIM_LSH_ID6_MASK    0x40U
  #define SIM_LSHID_SIM_LSH_ID7_MASK    0x80U
  #define SIM_LSHID_SIM_LSH_ID8_MASK    0x0100U
  #define SIM_LSHID_SIM_LSH_ID9_MASK    0x0200U
  #define SIM_LSHID_SIM_LSH_ID10_MASK   0x0400U
  #define SIM_LSHID_SIM_LSH_ID11_MASK   0x0800U
  #define SIM_LSHID_SIM_LSH_ID12_MASK   0x1000U
  #define SIM_LSHID_SIM_LSH_ID13_MASK   0x2000U
  #define SIM_LSHID_SIM_LSH_ID14_MASK   0x4000U
  #define SIM_LSHID_SIM_LSH_ID15_MASK   0x8000U
  #define SIM_LSHID                     (*((volatile word *)0x0000F107))


  /*** SIM_PWR - Power Control Register; 0x0000F108 ***/
  union {
    word Word;
  } SIM_PWR_STR;
  
  #define SIM_PWR_LRSTDBY0_MASK         0x01U
  #define SIM_PWR_LRSTDBY1_MASK         0x02U
  #define SIM_PWR_LRSTDBY_MASK          0x03U
  #define SIM_PWR_LRSTDBY_BITNUM        0x00U
  #define SIM_PWR                       (*((volatile word *)0x0000F108))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** SIM_CLKOUT - SIM CLKO Select Register; 0x0000F10A ***/
  union {
    word Word;
  } SIM_CLKOUT_STR;
  
  #define SIM_CLKOUT_CLKOSEL0_MASK      0x01U
  #define SIM_CLKOUT_CLKOSEL1_MASK      0x02U
  #define SIM_CLKOUT_CLKOSEL2_MASK      0x04U
  #define SIM_CLKOUT_CLKOSEL3_MASK      0x08U
  #define SIM_CLKOUT_CLKOSEL4_MASK      0x10U
  #define SIM_CLKOUT_CLKDIS_MASK        0x20U
  #define SIM_CLKOUT_PWM0_b_MASK        0x40U
  #define SIM_CLKOUT_PWM1_b_MASK        0x80U
  #define SIM_CLKOUT_PWM2_b_MASK        0x0100U
  #define SIM_CLKOUT_PWM3_b_MASK        0x0200U
  #define SIM_CLKOUT_CLKOSEL_MASK       0x1FU
  #define SIM_CLKOUT_CLKOSEL_BITNUM     0x00U
  #define SIM_CLKOUT                    (*((volatile word *)0x0000F10A))


  /*** SIM_PCR - SIM Peripheral Clock Rate Register; 0x0000F10B ***/
  union {
    word Word;
  } SIM_PCR_STR;
  
  #define SIM_PCR_I2C_CR_MASK           0x1000U
  #define SIM_PCR_PWM_CR_MASK           0x2000U
  #define SIM_PCR_TMRA_CR_MASK          0x4000U
  #define SIM_PCR_TMRB_CR_MASK          0x8000U
  #define SIM_PCR                       (*((volatile word *)0x0000F10B))


  /*** SIM_PCE0 - SIM Peripheral Clock Enable Register 0; 0x0000F10C ***/
  union {
    word Word;
  } SIM_PCE0_STR;
  
  #define SIM_PCE0_PWM_MASK             0x01U
  #define SIM_PCE0_QSPI0_MASK           0x04U
  #define SIM_PCE0_QSPI1_MASK           0x08U
  #define SIM_PCE0_QSCI0_MASK           0x10U
  #define SIM_PCE0_QSCI1_MASK           0x20U
  #define SIM_PCE0_I2C_MASK             0x40U
  #define SIM_PCE0_ADC_MASK             0x0400U
  #define SIM_PCE0_DAC0_MASK            0x1000U
  #define SIM_PCE0_DAC1_MASK            0x2000U
  #define SIM_PCE0_CMPA_MASK            0x4000U
  #define SIM_PCE0_CMPB_MASK            0x8000U
  #define SIM_PCE0_QSPI_MASK            0x0CU
  #define SIM_PCE0_QSPI_BITNUM          0x02U
  #define SIM_PCE0_QSCI_MASK            0x30U
  #define SIM_PCE0_QSCI_BITNUM          0x04U
  #define SIM_PCE0_DAC_MASK             0x3000U
  #define SIM_PCE0_DAC_BITNUM           0x0CU
  #define SIM_PCE0_CMPx_MASK            0xC000U
  #define SIM_PCE0_CMPx_BITNUM          0x0EU
  #define SIM_PCE0                      (*((volatile word *)0x0000F10C))


  /*** SIM_PCE1 - SIM Peripheral Clock Enable Register 1; 0x0000F10D ***/
  union {
    word Word;
  } SIM_PCE1_STR;
  
  #define SIM_PCE1_TA0_MASK             0x01U
  #define SIM_PCE1_TA1_MASK             0x02U
  #define SIM_PCE1_TA2_MASK             0x04U
  #define SIM_PCE1_TA3_MASK             0x08U
  #define SIM_PCE1_TB0_MASK             0x10U
  #define SIM_PCE1_TB1_MASK             0x20U
  #define SIM_PCE1_TB2_MASK             0x40U
  #define SIM_PCE1_TB3_MASK             0x80U
  #define SIM_PCE1_PIT0_MASK            0x1000U
  #define SIM_PCE1_PIT1_MASK            0x2000U
  #define SIM_PCE1_PIT2_MASK            0x4000U
  #define SIM_PCE1_TA_MASK              0x0FU
  #define SIM_PCE1_TA_BITNUM            0x00U
  #define SIM_PCE1_TB_MASK              0xF0U
  #define SIM_PCE1_TB_BITNUM            0x04U
  #define SIM_PCE1_PIT_MASK             0x7000U
  #define SIM_PCE1_PIT_BITNUM           0x0CU
  #define SIM_PCE1                      (*((volatile word *)0x0000F10D))


  /*** SIM_SD0 - SIM STOP Disable Register 0; 0x0000F10E ***/
  union {
    word Word;
  } SIM_SD0_STR;
  
  #define SIM_SD0_PWM_SD_MASK           0x01U
  #define SIM_SD0_QSPI0_SD_MASK         0x04U
  #define SIM_SD0_QSPI1_SD_MASK         0x08U
  #define SIM_SD0_QSCI0_SD_MASK         0x10U
  #define SIM_SD0_QSCI1_SD_MASK         0x20U
  #define SIM_SD0_I2C_SD_MASK           0x40U
  #define SIM_SD0_ADC_SD_MASK           0x0400U
  #define SIM_SD0_DAC0_SD_MASK          0x1000U
  #define SIM_SD0_DAC1_SD_MASK          0x2000U
  #define SIM_SD0_CMPA_SD_MASK          0x4000U
  #define SIM_SD0_CMPB_SD_MASK          0x8000U
  #define SIM_SD0                       (*((volatile word *)0x0000F10E))


  /*** SIM_SD1 - SIM STOP Disable Register 1; 0x0000F10F ***/
  union {
    word Word;
  } SIM_SD1_STR;
  
  #define SIM_SD1_TA0_SD_MASK           0x01U
  #define SIM_SD1_TA1_SD_MASK           0x02U
  #define SIM_SD1_TA2_SD_MASK           0x04U
  #define SIM_SD1_TA3_SD_MASK           0x08U
  #define SIM_SD1_TB0_SD_MASK           0x10U
  #define SIM_SD1_TB1_SD_MASK           0x20U
  #define SIM_SD1_TB2_SD_MASK           0x40U
  #define SIM_SD1_TB3_SD_MASK           0x80U
  #define SIM_SD1_PIT0_SD_MASK          0x1000U
  #define SIM_SD1_PIT1_SD_MASK          0x2000U
  #define SIM_SD1_PIT2_SD_MASK          0x4000U
  #define SIM_SD1                       (*((volatile word *)0x0000F10F))


  /*** SIM_IOSAHI - SIM I/O Short Address Location High register; 0x0000F110 ***/
  union {
    word Word;
  } SIM_IOSAHI_STR;
  
  #define SIM_IOSAHI_ISAL0_MASK         0x01U
  #define SIM_IOSAHI_ISAL1_MASK         0x02U
  #define SIM_IOSAHI_ISAL_MASK          0x03U
  #define SIM_IOSAHI_ISAL_BITNUM        0x00U
  #define SIM_IOSAHI                    (*((volatile word *)0x0000F110))


  /*** SIM_IOSALO - SIM I/O Short Address Location Low register; 0x0000F111 ***/
  union {
    word Word;
  } SIM_IOSALO_STR;
  
  #define SIM_IOSALO_ISAL0_MASK         0x01U
  #define SIM_IOSALO_ISAL1_MASK         0x02U
  #define SIM_IOSALO_ISAL2_MASK         0x04U
  #define SIM_IOSALO_ISAL3_MASK         0x08U
  #define SIM_IOSALO_ISAL4_MASK         0x10U
  #define SIM_IOSALO_ISAL5_MASK         0x20U
  #define SIM_IOSALO_ISAL6_MASK         0x40U
  #define SIM_IOSALO_ISAL7_MASK         0x80U
  #define SIM_IOSALO_ISAL8_MASK         0x0100U
  #define SIM_IOSALO_ISAL9_MASK         0x0200U
  #define SIM_IOSALO_ISAL10_MASK        0x0400U
  #define SIM_IOSALO_ISAL11_MASK        0x0800U
  #define SIM_IOSALO_ISAL12_MASK        0x1000U
  #define SIM_IOSALO_ISAL13_MASK        0x2000U
  #define SIM_IOSALO_ISAL14_MASK        0x4000U
  #define SIM_IOSALO_ISAL15_MASK        0x8000U
  #define SIM_IOSALO                    (*((volatile word *)0x0000F111))


  /*** SIM_PROT - SIM Protection Register; 0x0000F112 ***/
  union {
    word Word;
  } SIM_PROT_STR;
  
  #define SIM_PROT_GIPSP0_MASK          0x01U
  #define SIM_PROT_GIPSP1_MASK          0x02U
  #define SIM_PROT_PCEP0_MASK           0x04U
  #define SIM_PROT_PCEP1_MASK           0x08U
  #define SIM_PROT_GIPSP_MASK           0x03U
  #define SIM_PROT_GIPSP_BITNUM         0x00U
  #define SIM_PROT_PCEP_MASK            0x0CU
  #define SIM_PROT_PCEP_BITNUM          0x02U
  #define SIM_PROT                      (*((volatile word *)0x0000F112))


  /*** SIM_GPSA0 - SIM GPIO Peripheral Select Register 0 for GPIOA; 0x0000F113 ***/
  union {
    word Word;
  } SIM_GPSA0_STR;
  
  #define SIM_GPSA0_GPS_A40_MASK        0x0100U
  #define SIM_GPSA0_GPS_A41_MASK        0x0200U
  #define SIM_GPSA0_GPS_A50_MASK        0x0400U
  #define SIM_GPSA0_GPS_A51_MASK        0x0800U
  #define SIM_GPSA0_GPS_A6_MASK         0x1000U
  #define SIM_GPSA0_GPS_A4_MASK         0x0300U
  #define SIM_GPSA0_GPS_A4_BITNUM       0x08U
  #define SIM_GPSA0_GPS_A5_MASK         0x0C00U
  #define SIM_GPSA0_GPS_A5_BITNUM       0x0AU
  #define SIM_GPSA0                     (*((volatile word *)0x0000F113))


  /*** SIM_GPSA1 - SIM GPIO Peripheral Select Register 1 for GPIOA; 0x0000F114 ***/
  union {
    word Word;
  } SIM_GPSA1_STR;
  
  #define SIM_GPSA1_GPS_A80_MASK        0x01U
  #define SIM_GPSA1_GPS_A81_MASK        0x02U
  #define SIM_GPSA1_GPS_A90_MASK        0x04U
  #define SIM_GPSA1_GPS_A91_MASK        0x08U
  #define SIM_GPSA1_GPS_A10_MASK        0x10U
  #define SIM_GPSA1_GPS_A11_MASK        0x40U
  #define SIM_GPSA1_GPS_A120_MASK       0x0100U
  #define SIM_GPSA1_GPS_A121_MASK       0x0200U
  #define SIM_GPSA1_GPS_A130_MASK       0x0400U
  #define SIM_GPSA1_GPS_A131_MASK       0x0800U
  #define SIM_GPSA1_GPS_A140_MASK       0x1000U
  #define SIM_GPSA1_GPS_A141_MASK       0x2000U
  #define SIM_GPSA1_GPS_A8_MASK         0x03U
  #define SIM_GPSA1_GPS_A8_BITNUM       0x00U
  #define SIM_GPSA1_GPS_A9_MASK         0x0CU
  #define SIM_GPSA1_GPS_A9_BITNUM       0x02U
  #define SIM_GPSA1_GPS_A12_MASK        0x0300U
  #define SIM_GPSA1_GPS_A12_BITNUM      0x08U
  #define SIM_GPSA1_GPS_A13_MASK        0x0C00U
  #define SIM_GPSA1_GPS_A13_BITNUM      0x0AU
  #define SIM_GPSA1_GPS_A14_MASK        0x3000U
  #define SIM_GPSA1_GPS_A14_BITNUM      0x0CU
  #define SIM_GPSA1                     (*((volatile word *)0x0000F114))


  /*** SIM_GPSB0 - SIM GPIO Peripheral Select Register 0 for GPIOB; 0x0000F115 ***/
  union {
    word Word;
  } SIM_GPSB0_STR;
  
  #define SIM_GPSB0_GPS_B0_MASK         0x01U
  #define SIM_GPSB0_GPS_B1_MASK         0x04U
  #define SIM_GPSB0_GPS_B20_MASK        0x10U
  #define SIM_GPSB0_GPS_B21_MASK        0x20U
  #define SIM_GPSB0_GPS_B30_MASK        0x40U
  #define SIM_GPSB0_GPS_B31_MASK        0x80U
  #define SIM_GPSB0_GPS_B40_MASK        0x0100U
  #define SIM_GPSB0_GPS_B41_MASK        0x0200U
  #define SIM_GPSB0_GPS_B42_MASK        0x0400U
  #define SIM_GPSB0_GPS_B50_MASK        0x0800U
  #define SIM_GPSB0_GPS_B51_MASK        0x1000U
  #define SIM_GPSB0_GPS_B60_MASK        0x2000U
  #define SIM_GPSB0_GPS_B61_MASK        0x4000U
  #define SIM_GPSB0_GPS_B2_MASK         0x30U
  #define SIM_GPSB0_GPS_B2_BITNUM       0x04U
  #define SIM_GPSB0_GPS_B3_MASK         0xC0U
  #define SIM_GPSB0_GPS_B3_BITNUM       0x06U
  #define SIM_GPSB0_GPS_B4_MASK         0x0700U
  #define SIM_GPSB0_GPS_B4_BITNUM       0x08U
  #define SIM_GPSB0_GPS_B5_MASK         0x1800U
  #define SIM_GPSB0_GPS_B5_BITNUM       0x0BU
  #define SIM_GPSB0_GPS_B6_MASK         0x6000U
  #define SIM_GPSB0_GPS_B6_BITNUM       0x0DU
  #define SIM_GPSB0                     (*((volatile word *)0x0000F115))


  /*** SIM_GPSB1 - SIM GPIO Peripheral Select Register 1 for GPIOB; 0x0000F116 ***/
  union {
    word Word;
  } SIM_GPSB1_STR;
  
  #define SIM_GPSB1_GPS_B7_MASK         0x01U
  #define SIM_GPSB1_GPS_B8_MASK         0x04U
  #define SIM_GPSB1_GPS_B9_MASK         0x10U
  #define SIM_GPSB1_GPS_B10_MASK        0x40U
  #define SIM_GPSB1_GPS_B11_MASK        0x0100U
  #define SIM_GPSB1                     (*((volatile word *)0x0000F116))


  /*** SIM_GPSCD - SIM GPIO Peripheral Select Register for GPIOC and GPIOD; 0x0000F117 ***/
  union {
    word Word;
  } SIM_GPSCD_STR;
  
  #define SIM_GPSCD_GPS_C8_MASK         0x04U
  #define SIM_GPSCD_GPS_C12_MASK        0x10U
  #define SIM_GPSCD_GPS_D5_MASK         0x1000U
  #define SIM_GPSCD                     (*((volatile word *)0x0000F117))


  /*** SIM_IPS0 - SIM Internal Peripheral Select Register for PWM; 0x0000F118 ***/
  union {
    word Word;
  } SIM_IPS0_STR;
  
  #define SIM_IPS0_IPS_PSRC00_MASK      0x01U
  #define SIM_IPS0_IPS_PSRC01_MASK      0x02U
  #define SIM_IPS0_IPS_PSRC02_MASK      0x04U
  #define SIM_IPS0_IPS_PSRC10_MASK      0x08U
  #define SIM_IPS0_IPS_PSRC11_MASK      0x10U
  #define SIM_IPS0_IPS_PSRC12_MASK      0x20U
  #define SIM_IPS0_IPS_PSRC20_MASK      0x40U
  #define SIM_IPS0_IPS_PSRC21_MASK      0x80U
  #define SIM_IPS0_IPS_PSRC22_MASK      0x0100U
  #define SIM_IPS0_IPS_FAULT1_MASK      0x0800U
  #define SIM_IPS0_IPS_FAULT2_MASK      0x2000U
  #define SIM_IPS0_IPS_PSRC0_MASK       0x07U
  #define SIM_IPS0_IPS_PSRC0_BITNUM     0x00U
  #define SIM_IPS0_IPS_PSRC1_MASK       0x38U
  #define SIM_IPS0_IPS_PSRC1_BITNUM     0x03U
  #define SIM_IPS0_IPS_PSRC2_MASK       0x01C0U
  #define SIM_IPS0_IPS_PSRC2_BITNUM     0x06U
  #define SIM_IPS0                      (*((volatile word *)0x0000F118))


  /*** SIM_IPS1 - SIM Internal Peripheral Select Register for DACs; 0x0000F119 ***/
  union {
    word Word;
  } SIM_IPS1_STR;
  
  #define SIM_IPS1_IPS_DSYNC00_MASK     0x01U
  #define SIM_IPS1_IPS_DSYNC01_MASK     0x02U
  #define SIM_IPS1_IPS_DSYNC02_MASK     0x04U
  #define SIM_IPS1_IPS_DSYNC10_MASK     0x10U
  #define SIM_IPS1_IPS_DSYNC11_MASK     0x20U
  #define SIM_IPS1_IPS_DSYNC12_MASK     0x40U
  #define SIM_IPS1_IPS_DSYNC0_MASK      0x07U
  #define SIM_IPS1_IPS_DSYNC0_BITNUM    0x00U
  #define SIM_IPS1_IPS_DSYNC1_MASK      0x70U
  #define SIM_IPS1_IPS_DSYNC1_BITNUM    0x04U
  #define SIM_IPS1                      (*((volatile word *)0x0000F119))


  /*** SIM_IPS2 - SIM Internal Peripheral Select Register for TMRA; 0x0000F11A ***/
  union {
    word Word;
  } SIM_IPS2_STR;
  
  #define SIM_IPS2_IPS_TA1_MASK         0x10U
  #define SIM_IPS2_IPS_TA2_MASK         0x0100U
  #define SIM_IPS2_IPS_TA3_MASK         0x1000U
  #define SIM_IPS2                      (*((volatile word *)0x0000F11A))


  word Reserved1[5];                   /* Reserved (unused) registers */

} SIM_PRPH;

/******************************************
*** Peripheral COP
*******************************************/
typedef volatile struct {
  /*** COP_CTRL - COP Control Register; 0x0000F120 ***/
  union {
    word Word;
  } COP_CTRL_STR;
  
  #define COP_CTRL_CWP_MASK             0x01U
  #define COP_CTRL_CEN_MASK             0x02U
  #define COP_CTRL_CWEN_MASK            0x04U
  #define COP_CTRL_CSEN_MASK            0x08U
  #define COP_CTRL_BYPS_MASK            0x10U
  #define COP_CTRL_CLOREN_MASK          0x20U
  #define COP_CTRL_CLKSEL_MASK          0x40U
  #define COP_CTRL                      (*((volatile word *)0x0000F120))


  /*** COP_TOUT - Timeout Register; 0x0000F121 ***/
  union {
    word Word;
  } COP_TOUT_STR;
  
  #define COP_TOUT_TIMEOUT0_MASK        0x01U
  #define COP_TOUT_TIMEOUT1_MASK        0x02U
  #define COP_TOUT_TIMEOUT2_MASK        0x04U
  #define COP_TOUT_TIMEOUT3_MASK        0x08U
  #define COP_TOUT_TIMEOUT4_MASK        0x10U
  #define COP_TOUT_TIMEOUT5_MASK        0x20U
  #define COP_TOUT_TIMEOUT6_MASK        0x40U
  #define COP_TOUT_TIMEOUT7_MASK        0x80U
  #define COP_TOUT_TIMEOUT8_MASK        0x0100U
  #define COP_TOUT_TIMEOUT9_MASK        0x0200U
  #define COP_TOUT_TIMEOUT10_MASK       0x0400U
  #define COP_TOUT_TIMEOUT11_MASK       0x0800U
  #define COP_TOUT_TIMEOUT12_MASK       0x1000U
  #define COP_TOUT_TIMEOUT13_MASK       0x2000U
  #define COP_TOUT_TIMEOUT14_MASK       0x4000U
  #define COP_TOUT_TIMEOUT15_MASK       0x8000U
  #define COP_TOUT                      (*((volatile word *)0x0000F121))


  /*** COP_CNTR - Counter Register; 0x0000F122 ***/
  union {
    word Word;
  } COP_CNTR_STR;
  
  #define COP_CNTR                      (*((volatile word *)0x0000F122))


  word Reserved0[13];                  /* Reserved (unused) registers */

} COP_PRPH;

/******************************************
*** Peripheral OCCS
*******************************************/
typedef volatile struct {
  /*** OCCS_CTRL - PLL Control Register; 0x0000F130 ***/
  union {
    word Word;
  } OCCS_CTRL_STR;
  
  #define OCCS_CTRL_ZSRC0_MASK          0x01U
  #define OCCS_CTRL_ZSRC1_MASK          0x02U
  #define OCCS_CTRL_PRECS_MASK          0x04U
  #define OCCS_CTRL_PLLPD_MASK          0x10U
  #define OCCS_CTRL_LCKON_MASK          0x80U
  #define OCCS_CTRL_LOCIE_MASK          0x0800U
  #define OCCS_CTRL_PLLIE00_MASK        0x1000U
  #define OCCS_CTRL_PLLIE01_MASK        0x2000U
  #define OCCS_CTRL_PLLIE10_MASK        0x4000U
  #define OCCS_CTRL_PLLIE11_MASK        0x8000U
  #define OCCS_CTRL_ZSRC_MASK           0x03U
  #define OCCS_CTRL_ZSRC_BITNUM         0x00U
  #define OCCS_CTRL_PLLIE0_MASK         0x3000U
  #define OCCS_CTRL_PLLIE0_BITNUM       0x0CU
  #define OCCS_CTRL_PLLIE1_MASK         0xC000U
  #define OCCS_CTRL_PLLIE1_BITNUM       0x0EU
  #define OCCS_CTRL                     (*((volatile word *)0x0000F130))


  /*** OCCS_DIVBY - PLL Divide- by Register; 0x0000F131 ***/
  union {
    word Word;
  } OCCS_DIVBY_STR;
  
  #define OCCS_DIVBY_PLLCOD0_MASK       0x0100U
  #define OCCS_DIVBY_PLLCOD1_MASK       0x0200U
  #define OCCS_DIVBY_PLLCOD2_MASK       0x0400U
  #define OCCS_DIVBY_LORTP0_MASK        0x1000U
  #define OCCS_DIVBY_LORTP1_MASK        0x2000U
  #define OCCS_DIVBY_LORTP2_MASK        0x4000U
  #define OCCS_DIVBY_LORTP3_MASK        0x8000U
  #define OCCS_DIVBY_PLLCOD_MASK        0x0700U
  #define OCCS_DIVBY_PLLCOD_BITNUM      0x08U
  #define OCCS_DIVBY_LORTP_MASK         0xF000U
  #define OCCS_DIVBY_LORTP_BITNUM       0x0CU
  #define OCCS_DIVBY                    (*((volatile word *)0x0000F131))


  /*** OCCS_STAT - PLL Status Register; 0x0000F132 ***/
  union {
    word Word;
  } OCCS_STAT_STR;
  
  #define OCCS_STAT_ZSRC0_MASK          0x01U
  #define OCCS_STAT_ZSRC1_MASK          0x02U
  #define OCCS_STAT_PLLPDN_MASK         0x10U
  #define OCCS_STAT_LCK0_MASK           0x20U
  #define OCCS_STAT_LCK1_MASK           0x40U
  #define OCCS_STAT_LOCI_MASK           0x2000U
  #define OCCS_STAT_LOLI0_MASK          0x4000U
  #define OCCS_STAT_LOLI1_MASK          0x8000U
  #define OCCS_STAT_ZSRC_MASK           0x03U
  #define OCCS_STAT_ZSRC_BITNUM         0x00U
  #define OCCS_STAT_LCK_MASK            0x60U
  #define OCCS_STAT_LCK_BITNUM          0x05U
  #define OCCS_STAT_LOLI_MASK           0xC000U
  #define OCCS_STAT_LOLI_BITNUM         0x0EU
  #define OCCS_STAT                     (*((volatile word *)0x0000F132))


  word Reserved0[2];                   /* Reserved (unused) registers */
  
  /*** OCCS_OCTRL - Oscillator Control Register; 0x0000F135 ***/
  union {
    word Word;
  } OCCS_OCTRL_STR;
  
  #define OCCS_OCTRL_TRIM0_MASK         0x01U
  #define OCCS_OCTRL_TRIM1_MASK         0x02U
  #define OCCS_OCTRL_TRIM2_MASK         0x04U
  #define OCCS_OCTRL_TRIM3_MASK         0x08U
  #define OCCS_OCTRL_TRIM4_MASK         0x10U
  #define OCCS_OCTRL_TRIM5_MASK         0x20U
  #define OCCS_OCTRL_TRIM6_MASK         0x40U
  #define OCCS_OCTRL_TRIM7_MASK         0x80U
  #define OCCS_OCTRL_TRIM8_MASK         0x0100U
  #define OCCS_OCTRL_TRIM9_MASK         0x0200U
  #define OCCS_OCTRL_EXT_SEL0_MASK      0x0400U
  #define OCCS_OCTRL_EXT_SEL1_MASK      0x0800U
  #define OCCS_OCTRL_CLK_MODE_MASK      0x1000U
  #define OCCS_OCTRL_COHL_MASK          0x2000U
  #define OCCS_OCTRL_ROSB_MASK          0x4000U
  #define OCCS_OCTRL_ROPD_MASK          0x8000U
  #define OCCS_OCTRL_TRIM_MASK          0x03FFU
  #define OCCS_OCTRL_TRIM_BITNUM        0x00U
  #define OCCS_OCTRL_EXT_SEL_MASK       0x0C00U
  #define OCCS_OCTRL_EXT_SEL_BITNUM     0x0AU
  #define OCCS_OCTRL                    (*((volatile word *)0x0000F135))


  /*** OCCS_CLKCHK - External Clock Check Register; 0x0000F136 ***/
  union {
    word Word;
  } OCCS_CLKCHK_STR;
  
  #define OCCS_CLKCHK_TARGET_CNT0_MASK  0x01U
  #define OCCS_CLKCHK_TARGET_CNT1_MASK  0x02U
  #define OCCS_CLKCHK_TARGET_CNT2_MASK  0x04U
  #define OCCS_CLKCHK_TARGET_CNT3_MASK  0x08U
  #define OCCS_CLKCHK_TARGET_CNT4_MASK  0x10U
  #define OCCS_CLKCHK_TARGET_CNT5_MASK  0x20U
  #define OCCS_CLKCHK_TARGET_CNT6_MASK  0x40U
  #define OCCS_CLKCHK_TARGET_CNT7_MASK  0x80U
  #define OCCS_CLKCHK_REF_CNT0_MASK     0x0100U
  #define OCCS_CLKCHK_REF_CNT1_MASK     0x0200U
  #define OCCS_CLKCHK_REF_CNT2_MASK     0x0400U
  #define OCCS_CLKCHK_REF_CNT3_MASK     0x0800U
  #define OCCS_CLKCHK_REF_CNT4_MASK     0x1000U
  #define OCCS_CLKCHK_REF_CNT5_MASK     0x2000U
  #define OCCS_CLKCHK_REF_CNT6_MASK     0x4000U
  #define OCCS_CLKCHK_CHK_EN_MASK       0x8000U
  #define OCCS_CLKCHK_TARGET_CNT_MASK   0xFFU
  #define OCCS_CLKCHK_TARGET_CNT_BITNUM 0x00U
  #define OCCS_CLKCHK_REF_CNT_MASK      0x7F00U
  #define OCCS_CLKCHK_REF_CNT_BITNUM    0x08U
  #define OCCS_CLKCHK                   (*((volatile word *)0x0000F136))


  /*** OCCS_PROT - Protection Register; 0x0000F137 ***/
  union {
    word Word;
  } OCCS_PROT_STR;
  
  #define OCCS_PROT_PLLEP0_MASK         0x01U
  #define OCCS_PROT_PLLEP1_MASK         0x02U
  #define OCCS_PROT_OSCEP0_MASK         0x04U
  #define OCCS_PROT_OSCEP1_MASK         0x08U
  #define OCCS_PROT_FRQEP0_MASK         0x10U
  #define OCCS_PROT_FRQEP1_MASK         0x20U
  #define OCCS_PROT_PLLEP_MASK          0x03U
  #define OCCS_PROT_PLLEP_BITNUM        0x00U
  #define OCCS_PROT_OSCEP_MASK          0x0CU
  #define OCCS_PROT_OSCEP_BITNUM        0x02U
  #define OCCS_PROT_FRQEP_MASK          0x30U
  #define OCCS_PROT_FRQEP_BITNUM        0x04U
  #define OCCS_PROT                     (*((volatile word *)0x0000F137))


  word Reserved1[8];                   /* Reserved (unused) registers */

} OCCS_PRPH;

/******************************************
*** Peripheral LVI
*******************************************/
typedef volatile struct {
  /*** PS_CTRL - Power Supervisor Control Register; 0x0000F140 ***/
  union {
    word Word;
  } PS_CTRL_STR;
  
  #define PS_CTRL_LVIE22_MASK           0x01U
  #define PS_CTRL_LVIE27_MASK           0x02U
  #define PS_CTRL                       (*((volatile word *)0x0000F140))


  /*** PS_STAT - Power Supervisor Status Register; 0x0000F141 ***/
  union {
    word Word;
  } PS_STAT_STR;
  
  #define PS_STAT_LVIS22_MASK           0x01U
  #define PS_STAT_LVIS27_MASK           0x02U
  #define PS_STAT_LVIS22S_MASK          0x04U
  #define PS_STAT_LVIS27S_MASK          0x08U
  #define PS_STAT_LVI_MASK              0x10U
  #define PS_STAT                       (*((volatile word *)0x0000F141))


  word Reserved0[14];                  /* Reserved (unused) registers */

} LVI_PRPH;

/******************************************
*** Peripheral GPIOA
*******************************************/
typedef volatile struct {
  /*** GPIO_A_PUPEN - GPIO A Pull-up Enable Register; 0x0000F150 ***/
  union {
    word Word;
  } GPIO_A_PUPEN_STR;
  
  #define GPIO_A_PUPEN_PU0_MASK         0x01U
  #define GPIO_A_PUPEN_PU1_MASK         0x02U
  #define GPIO_A_PUPEN_PU2_MASK         0x04U
  #define GPIO_A_PUPEN_PU3_MASK         0x08U
  #define GPIO_A_PUPEN_PU4_MASK         0x10U
  #define GPIO_A_PUPEN_PU5_MASK         0x20U
  #define GPIO_A_PUPEN_PU6_MASK         0x40U
  #define GPIO_A_PUPEN_PU7_MASK         0x80U
  #define GPIO_A_PUPEN_PU8_MASK         0x0100U
  #define GPIO_A_PUPEN_PU9_MASK         0x0200U
  #define GPIO_A_PUPEN_PU10_MASK        0x0400U
  #define GPIO_A_PUPEN_PU11_MASK        0x0800U
  #define GPIO_A_PUPEN_PU12_MASK        0x1000U
  #define GPIO_A_PUPEN_PU13_MASK        0x2000U
  #define GPIO_A_PUPEN_PU14_MASK        0x4000U
  #define GPIO_A_PUPEN_PU_MASK          0x7FFFU
  #define GPIO_A_PUPEN_PU_BITNUM        0x00U
  #define GPIO_A_PUPEN                  (*((volatile word *)0x0000F150))


  /*** GPIO_A_DATA - GPIO A Data Register; 0x0000F151 ***/
  union {
    word Word;
  } GPIO_A_DATA_STR;
  
  #define GPIO_A_DATA_D0_MASK           0x01U
  #define GPIO_A_DATA_D1_MASK           0x02U
  #define GPIO_A_DATA_D2_MASK           0x04U
  #define GPIO_A_DATA_D3_MASK           0x08U
  #define GPIO_A_DATA_D4_MASK           0x10U
  #define GPIO_A_DATA_D5_MASK           0x20U
  #define GPIO_A_DATA_D6_MASK           0x40U
  #define GPIO_A_DATA_D7_MASK           0x80U
  #define GPIO_A_DATA_D8_MASK           0x0100U
  #define GPIO_A_DATA_D9_MASK           0x0200U
  #define GPIO_A_DATA_D10_MASK          0x0400U
  #define GPIO_A_DATA_D11_MASK          0x0800U
  #define GPIO_A_DATA_D12_MASK          0x1000U
  #define GPIO_A_DATA_D13_MASK          0x2000U
  #define GPIO_A_DATA_D14_MASK          0x4000U
  #define GPIO_A_DATA_D_MASK            0x7FFFU
  #define GPIO_A_DATA_D_BITNUM          0x00U
  #define GPIO_A_DATA                   (*((volatile word *)0x0000F151))


  /*** GPIO_A_DDIR - GPIO A Data Direction Register; 0x0000F152 ***/
  union {
    word Word;
  } GPIO_A_DDIR_STR;
  
  #define GPIO_A_DDIR_DD0_MASK          0x01U
  #define GPIO_A_DDIR_DD1_MASK          0x02U
  #define GPIO_A_DDIR_DD2_MASK          0x04U
  #define GPIO_A_DDIR_DD3_MASK          0x08U
  #define GPIO_A_DDIR_DD4_MASK          0x10U
  #define GPIO_A_DDIR_DD5_MASK          0x20U
  #define GPIO_A_DDIR_DD6_MASK          0x40U
  #define GPIO_A_DDIR_DD7_MASK          0x80U
  #define GPIO_A_DDIR_DD8_MASK          0x0100U
  #define GPIO_A_DDIR_DD9_MASK          0x0200U
  #define GPIO_A_DDIR_DD10_MASK         0x0400U
  #define GPIO_A_DDIR_DD11_MASK         0x0800U
  #define GPIO_A_DDIR_DD12_MASK         0x1000U
  #define GPIO_A_DDIR_DD13_MASK         0x2000U
  #define GPIO_A_DDIR_DD14_MASK         0x4000U
  #define GPIO_A_DDIR_DD_MASK           0x7FFFU
  #define GPIO_A_DDIR_DD_BITNUM         0x00U
  #define GPIO_A_DDIR                   (*((volatile word *)0x0000F152))


  /*** GPIO_A_PEREN - GPIO A Peripheral Enable Registers; 0x0000F153 ***/
  union {
    word Word;
  } GPIO_A_PEREN_STR;
  
  #define GPIO_A_PEREN_PE0_MASK         0x01U
  #define GPIO_A_PEREN_PE1_MASK         0x02U
  #define GPIO_A_PEREN_PE2_MASK         0x04U
  #define GPIO_A_PEREN_PE3_MASK         0x08U
  #define GPIO_A_PEREN_PE4_MASK         0x10U
  #define GPIO_A_PEREN_PE5_MASK         0x20U
  #define GPIO_A_PEREN_PE6_MASK         0x40U
  #define GPIO_A_PEREN_PE7_MASK         0x80U
  #define GPIO_A_PEREN_PE8_MASK         0x0100U
  #define GPIO_A_PEREN_PE9_MASK         0x0200U
  #define GPIO_A_PEREN_PE10_MASK        0x0400U
  #define GPIO_A_PEREN_PE11_MASK        0x0800U
  #define GPIO_A_PEREN_PE12_MASK        0x1000U
  #define GPIO_A_PEREN_PE13_MASK        0x2000U
  #define GPIO_A_PEREN_PE14_MASK        0x4000U
  #define GPIO_A_PEREN_PE_MASK          0x7FFFU
  #define GPIO_A_PEREN_PE_BITNUM        0x00U
  #define GPIO_A_PEREN                  (*((volatile word *)0x0000F153))


  /*** GPIO_A_IASSRT - GPIO A Interrupt Assert Register; 0x0000F154 ***/
  union {
    word Word;
  } GPIO_A_IASSRT_STR;
  
  #define GPIO_A_IASSRT_IA0_MASK        0x01U
  #define GPIO_A_IASSRT_IA1_MASK        0x02U
  #define GPIO_A_IASSRT_IA2_MASK        0x04U
  #define GPIO_A_IASSRT_IA3_MASK        0x08U
  #define GPIO_A_IASSRT_IA4_MASK        0x10U
  #define GPIO_A_IASSRT_IA5_MASK        0x20U
  #define GPIO_A_IASSRT_IA6_MASK        0x40U
  #define GPIO_A_IASSRT_IA7_MASK        0x80U
  #define GPIO_A_IASSRT_IA8_MASK        0x0100U
  #define GPIO_A_IASSRT_IA9_MASK        0x0200U
  #define GPIO_A_IASSRT_IA10_MASK       0x0400U
  #define GPIO_A_IASSRT_IA11_MASK       0x0800U
  #define GPIO_A_IASSRT_IA12_MASK       0x1000U
  #define GPIO_A_IASSRT_IA13_MASK       0x2000U
  #define GPIO_A_IASSRT_IA14_MASK       0x4000U
  #define GPIO_A_IASSRT_IA_MASK         0x7FFFU
  #define GPIO_A_IASSRT_IA_BITNUM       0x00U
  #define GPIO_A_IASSRT                 (*((volatile word *)0x0000F154))


  /*** GPIO_A_IEN - GPIO A Interrupt Enable Register; 0x0000F155 ***/
  union {
    word Word;
  } GPIO_A_IEN_STR;
  
  #define GPIO_A_IEN_IEN0_MASK          0x01U
  #define GPIO_A_IEN_IEN1_MASK          0x02U
  #define GPIO_A_IEN_IEN2_MASK          0x04U
  #define GPIO_A_IEN_IEN3_MASK          0x08U
  #define GPIO_A_IEN_IEN4_MASK          0x10U
  #define GPIO_A_IEN_IEN5_MASK          0x20U
  #define GPIO_A_IEN_IEN6_MASK          0x40U
  #define GPIO_A_IEN_IEN7_MASK          0x80U
  #define GPIO_A_IEN_IEN8_MASK          0x0100U
  #define GPIO_A_IEN_IEN9_MASK          0x0200U
  #define GPIO_A_IEN_IEN10_MASK         0x0400U
  #define GPIO_A_IEN_IEN11_MASK         0x0800U
  #define GPIO_A_IEN_IEN12_MASK         0x1000U
  #define GPIO_A_IEN_IEN13_MASK         0x2000U
  #define GPIO_A_IEN_IEN14_MASK         0x4000U
  #define GPIO_A_IEN_IEN_MASK           0x7FFFU
  #define GPIO_A_IEN_IEN_BITNUM         0x00U
  #define GPIO_A_IEN                    (*((volatile word *)0x0000F155))


  /*** GPIO_A_IPOL - GPIO A Interrupt Polarity Register; 0x0000F156 ***/
  union {
    word Word;
  } GPIO_A_IPOL_STR;
  
  #define GPIO_A_IPOL_IPOL0_MASK        0x01U
  #define GPIO_A_IPOL_IPOL1_MASK        0x02U
  #define GPIO_A_IPOL_IPOL2_MASK        0x04U
  #define GPIO_A_IPOL_IPOL3_MASK        0x08U
  #define GPIO_A_IPOL_IPOL4_MASK        0x10U
  #define GPIO_A_IPOL_IPOL5_MASK        0x20U
  #define GPIO_A_IPOL_IPOL6_MASK        0x40U
  #define GPIO_A_IPOL_IPOL7_MASK        0x80U
  #define GPIO_A_IPOL_IPOL8_MASK        0x0100U
  #define GPIO_A_IPOL_IPOL9_MASK        0x0200U
  #define GPIO_A_IPOL_IPOL10_MASK       0x0400U
  #define GPIO_A_IPOL_IPOL11_MASK       0x0800U
  #define GPIO_A_IPOL_IPOL12_MASK       0x1000U
  #define GPIO_A_IPOL_IPOL13_MASK       0x2000U
  #define GPIO_A_IPOL_IPOL14_MASK       0x4000U
  #define GPIO_A_IPOL_IPOL_MASK         0x7FFFU
  #define GPIO_A_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_A_IPOL                   (*((volatile word *)0x0000F156))


  /*** GPIO_A_IPEND - GPIO A Interrupt Pending Register; 0x0000F157 ***/
  union {
    word Word;
  } GPIO_A_IPEND_STR;
  
  #define GPIO_A_IPEND_IP0_MASK         0x01U
  #define GPIO_A_IPEND_IP1_MASK         0x02U
  #define GPIO_A_IPEND_IP2_MASK         0x04U
  #define GPIO_A_IPEND_IP3_MASK         0x08U
  #define GPIO_A_IPEND_IP4_MASK         0x10U
  #define GPIO_A_IPEND_IP5_MASK         0x20U
  #define GPIO_A_IPEND_IP6_MASK         0x40U
  #define GPIO_A_IPEND_IP7_MASK         0x80U
  #define GPIO_A_IPEND_IP8_MASK         0x0100U
  #define GPIO_A_IPEND_IP9_MASK         0x0200U
  #define GPIO_A_IPEND_IP10_MASK        0x0400U
  #define GPIO_A_IPEND_IP11_MASK        0x0800U
  #define GPIO_A_IPEND_IP12_MASK        0x1000U
  #define GPIO_A_IPEND_IP13_MASK        0x2000U
  #define GPIO_A_IPEND_IP14_MASK        0x4000U
  #define GPIO_A_IPEND_IP_MASK          0x7FFFU
  #define GPIO_A_IPEND_IP_BITNUM        0x00U
  #define GPIO_A_IPEND                  (*((volatile word *)0x0000F157))


  /*** GPIO_A_IEDGE - GPIO A Interrupt Edge Sensitive Register; 0x0000F158 ***/
  union {
    word Word;
  } GPIO_A_IEDGE_STR;
  
  #define GPIO_A_IEDGE_IES0_MASK        0x01U
  #define GPIO_A_IEDGE_IES1_MASK        0x02U
  #define GPIO_A_IEDGE_IES2_MASK        0x04U
  #define GPIO_A_IEDGE_IES3_MASK        0x08U
  #define GPIO_A_IEDGE_IES4_MASK        0x10U
  #define GPIO_A_IEDGE_IES5_MASK        0x20U
  #define GPIO_A_IEDGE_IES6_MASK        0x40U
  #define GPIO_A_IEDGE_IES7_MASK        0x80U
  #define GPIO_A_IEDGE_IES8_MASK        0x0100U
  #define GPIO_A_IEDGE_IES9_MASK        0x0200U
  #define GPIO_A_IEDGE_IES10_MASK       0x0400U
  #define GPIO_A_IEDGE_IES11_MASK       0x0800U
  #define GPIO_A_IEDGE_IES12_MASK       0x1000U
  #define GPIO_A_IEDGE_IES13_MASK       0x2000U
  #define GPIO_A_IEDGE_IES14_MASK       0x4000U
  #define GPIO_A_IEDGE_IES_MASK         0x7FFFU
  #define GPIO_A_IEDGE_IES_BITNUM       0x00U
  #define GPIO_A_IEDGE                  (*((volatile word *)0x0000F158))


  /*** GPIO_A_PPOUTM - GPIO A Push-Pull Mode Register; 0x0000F159 ***/
  union {
    word Word;
  } GPIO_A_PPOUTM_STR;
  
  #define GPIO_A_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_A_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_A_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_A_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_A_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_A_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_A_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_A_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_A_PPOUTM_PPMODE8_MASK    0x0100U
  #define GPIO_A_PPOUTM_PPMODE9_MASK    0x0200U
  #define GPIO_A_PPOUTM_PPMODE10_MASK   0x0400U
  #define GPIO_A_PPOUTM_PPMODE11_MASK   0x0800U
  #define GPIO_A_PPOUTM_PPMODE12_MASK   0x1000U
  #define GPIO_A_PPOUTM_PPMODE13_MASK   0x2000U
  #define GPIO_A_PPOUTM_PPMODE14_MASK   0x4000U
  #define GPIO_A_PPOUTM_PPMODE_MASK     0x7FFFU
  #define GPIO_A_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_A_PPOUTM                 (*((volatile word *)0x0000F159))


  /*** GPIO_A_RDATA - GPIO A Raw Data Register; 0x0000F15A ***/
  union {
    word Word;
  } GPIO_A_RDATA_STR;
  
  #define GPIO_A_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_A_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_A_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_A_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_A_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_A_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_A_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_A_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_A_RDATA_RAW_DATA8_MASK   0x0100U
  #define GPIO_A_RDATA_RAW_DATA9_MASK   0x0200U
  #define GPIO_A_RDATA_RAW_DATA10_MASK  0x0400U
  #define GPIO_A_RDATA_RAW_DATA11_MASK  0x0800U
  #define GPIO_A_RDATA_RAW_DATA12_MASK  0x1000U
  #define GPIO_A_RDATA_RAW_DATA13_MASK  0x2000U
  #define GPIO_A_RDATA_RAW_DATA14_MASK  0x4000U
  #define GPIO_A_RDATA_RAW_DATA_MASK    0x7FFFU
  #define GPIO_A_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_A_RDATA                  (*((volatile word *)0x0000F15A))


  /*** GPIO_A_DRIVE - GPIO A Drive Strength Control Register; 0x0000F15B ***/
  union {
    word Word;
  } GPIO_A_DRIVE_STR;
  
  #define GPIO_A_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_A_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_A_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_A_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_A_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_A_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_A_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_A_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_A_DRIVE_DRIVE8_MASK      0x0100U
  #define GPIO_A_DRIVE_DRIVE9_MASK      0x0200U
  #define GPIO_A_DRIVE_DRIVE10_MASK     0x0400U
  #define GPIO_A_DRIVE_DRIVE11_MASK     0x0800U
  #define GPIO_A_DRIVE_DRIVE12_MASK     0x1000U
  #define GPIO_A_DRIVE_DRIVE13_MASK     0x2000U
  #define GPIO_A_DRIVE_DRIVE14_MASK     0x4000U
  #define GPIO_A_DRIVE_DRIVE_MASK       0x7FFFU
  #define GPIO_A_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_A_DRIVE                  (*((volatile word *)0x0000F15B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOA_PRPH;

/******************************************
*** Peripheral GPIOB
*******************************************/
typedef volatile struct {
  /*** GPIO_B_PUPEN - GPIO B Pull-up Enable Register; 0x0000F160 ***/
  union {
    word Word;
  } GPIO_B_PUPEN_STR;
  
  #define GPIO_B_PUPEN_PU0_MASK         0x01U
  #define GPIO_B_PUPEN_PU1_MASK         0x02U
  #define GPIO_B_PUPEN_PU2_MASK         0x04U
  #define GPIO_B_PUPEN_PU3_MASK         0x08U
  #define GPIO_B_PUPEN_PU4_MASK         0x10U
  #define GPIO_B_PUPEN_PU5_MASK         0x20U
  #define GPIO_B_PUPEN_PU6_MASK         0x40U
  #define GPIO_B_PUPEN_PU7_MASK         0x80U
  #define GPIO_B_PUPEN_PU8_MASK         0x0100U
  #define GPIO_B_PUPEN_PU9_MASK         0x0200U
  #define GPIO_B_PUPEN_PU10_MASK        0x0400U
  #define GPIO_B_PUPEN_PU11_MASK        0x0800U
  #define GPIO_B_PUPEN_PU12_MASK        0x1000U
  #define GPIO_B_PUPEN_PU13_MASK        0x2000U
  #define GPIO_B_PUPEN_PU_MASK          0x3FFFU
  #define GPIO_B_PUPEN_PU_BITNUM        0x00U
  #define GPIO_B_PUPEN                  (*((volatile word *)0x0000F160))


  /*** GPIO_B_DATA - GPIO B Data Register; 0x0000F161 ***/
  union {
    word Word;
  } GPIO_B_DATA_STR;
  
  #define GPIO_B_DATA_D0_MASK           0x01U
  #define GPIO_B_DATA_D1_MASK           0x02U
  #define GPIO_B_DATA_D2_MASK           0x04U
  #define GPIO_B_DATA_D3_MASK           0x08U
  #define GPIO_B_DATA_D4_MASK           0x10U
  #define GPIO_B_DATA_D5_MASK           0x20U
  #define GPIO_B_DATA_D6_MASK           0x40U
  #define GPIO_B_DATA_D7_MASK           0x80U
  #define GPIO_B_DATA_D8_MASK           0x0100U
  #define GPIO_B_DATA_D9_MASK           0x0200U
  #define GPIO_B_DATA_D10_MASK          0x0400U
  #define GPIO_B_DATA_D11_MASK          0x0800U
  #define GPIO_B_DATA_D12_MASK          0x1000U
  #define GPIO_B_DATA_D13_MASK          0x2000U
  #define GPIO_B_DATA_D_MASK            0x3FFFU
  #define GPIO_B_DATA_D_BITNUM          0x00U
  #define GPIO_B_DATA                   (*((volatile word *)0x0000F161))


  /*** GPIO_B_DDIR - GPIO B Data Direction Register; 0x0000F162 ***/
  union {
    word Word;
  } GPIO_B_DDIR_STR;
  
  #define GPIO_B_DDIR_DD0_MASK          0x01U
  #define GPIO_B_DDIR_DD1_MASK          0x02U
  #define GPIO_B_DDIR_DD2_MASK          0x04U
  #define GPIO_B_DDIR_DD3_MASK          0x08U
  #define GPIO_B_DDIR_DD4_MASK          0x10U
  #define GPIO_B_DDIR_DD5_MASK          0x20U
  #define GPIO_B_DDIR_DD6_MASK          0x40U
  #define GPIO_B_DDIR_DD7_MASK          0x80U
  #define GPIO_B_DDIR_DD8_MASK          0x0100U
  #define GPIO_B_DDIR_DD9_MASK          0x0200U
  #define GPIO_B_DDIR_DD10_MASK         0x0400U
  #define GPIO_B_DDIR_DD11_MASK         0x0800U
  #define GPIO_B_DDIR_DD12_MASK         0x1000U
  #define GPIO_B_DDIR_DD13_MASK         0x2000U
  #define GPIO_B_DDIR_DD_MASK           0x3FFFU
  #define GPIO_B_DDIR_DD_BITNUM         0x00U
  #define GPIO_B_DDIR                   (*((volatile word *)0x0000F162))


  /*** GPIO_B_PEREN - GPIO B Peripheral Enable Registers; 0x0000F163 ***/
  union {
    word Word;
  } GPIO_B_PEREN_STR;
  
  #define GPIO_B_PEREN_PE0_MASK         0x01U
  #define GPIO_B_PEREN_PE1_MASK         0x02U
  #define GPIO_B_PEREN_PE2_MASK         0x04U
  #define GPIO_B_PEREN_PE3_MASK         0x08U
  #define GPIO_B_PEREN_PE4_MASK         0x10U
  #define GPIO_B_PEREN_PE5_MASK         0x20U
  #define GPIO_B_PEREN_PE6_MASK         0x40U
  #define GPIO_B_PEREN_PE7_MASK         0x80U
  #define GPIO_B_PEREN_PE8_MASK         0x0100U
  #define GPIO_B_PEREN_PE9_MASK         0x0200U
  #define GPIO_B_PEREN_PE10_MASK        0x0400U
  #define GPIO_B_PEREN_PE11_MASK        0x0800U
  #define GPIO_B_PEREN_PE12_MASK        0x1000U
  #define GPIO_B_PEREN_PE13_MASK        0x2000U
  #define GPIO_B_PEREN_PE_MASK          0x3FFFU
  #define GPIO_B_PEREN_PE_BITNUM        0x00U
  #define GPIO_B_PEREN                  (*((volatile word *)0x0000F163))


  /*** GPIO_B_IASSRT - GPIO B Interrupt Assert Register; 0x0000F164 ***/
  union {
    word Word;
  } GPIO_B_IASSRT_STR;
  
  #define GPIO_B_IASSRT_IA0_MASK        0x01U
  #define GPIO_B_IASSRT_IA1_MASK        0x02U
  #define GPIO_B_IASSRT_IA2_MASK        0x04U
  #define GPIO_B_IASSRT_IA3_MASK        0x08U
  #define GPIO_B_IASSRT_IA4_MASK        0x10U
  #define GPIO_B_IASSRT_IA5_MASK        0x20U
  #define GPIO_B_IASSRT_IA6_MASK        0x40U
  #define GPIO_B_IASSRT_IA7_MASK        0x80U
  #define GPIO_B_IASSRT_IA8_MASK        0x0100U
  #define GPIO_B_IASSRT_IA9_MASK        0x0200U
  #define GPIO_B_IASSRT_IA10_MASK       0x0400U
  #define GPIO_B_IASSRT_IA11_MASK       0x0800U
  #define GPIO_B_IASSRT_IA12_MASK       0x1000U
  #define GPIO_B_IASSRT_IA13_MASK       0x2000U
  #define GPIO_B_IASSRT_IA_MASK         0x3FFFU
  #define GPIO_B_IASSRT_IA_BITNUM       0x00U
  #define GPIO_B_IASSRT                 (*((volatile word *)0x0000F164))


  /*** GPIO_B_IEN - GPIO B Interrupt Enable Register; 0x0000F165 ***/
  union {
    word Word;
  } GPIO_B_IEN_STR;
  
  #define GPIO_B_IEN_IEN0_MASK          0x01U
  #define GPIO_B_IEN_IEN1_MASK          0x02U
  #define GPIO_B_IEN_IEN2_MASK          0x04U
  #define GPIO_B_IEN_IEN3_MASK          0x08U
  #define GPIO_B_IEN_IEN4_MASK          0x10U
  #define GPIO_B_IEN_IEN5_MASK          0x20U
  #define GPIO_B_IEN_IEN6_MASK          0x40U
  #define GPIO_B_IEN_IEN7_MASK          0x80U
  #define GPIO_B_IEN_IEN8_MASK          0x0100U
  #define GPIO_B_IEN_IEN9_MASK          0x0200U
  #define GPIO_B_IEN_IEN10_MASK         0x0400U
  #define GPIO_B_IEN_IEN11_MASK         0x0800U
  #define GPIO_B_IEN_IEN12_MASK         0x1000U
  #define GPIO_B_IEN_IEN13_MASK         0x2000U
  #define GPIO_B_IEN_IEN_MASK           0x3FFFU
  #define GPIO_B_IEN_IEN_BITNUM         0x00U
  #define GPIO_B_IEN                    (*((volatile word *)0x0000F165))


  /*** GPIO_B_IPOL - GPIO B Interrupt Polarity Register; 0x0000F166 ***/
  union {
    word Word;
  } GPIO_B_IPOL_STR;
  
  #define GPIO_B_IPOL_IPOL0_MASK        0x01U
  #define GPIO_B_IPOL_IPOL1_MASK        0x02U
  #define GPIO_B_IPOL_IPOL2_MASK        0x04U
  #define GPIO_B_IPOL_IPOL3_MASK        0x08U
  #define GPIO_B_IPOL_IPOL4_MASK        0x10U
  #define GPIO_B_IPOL_IPOL5_MASK        0x20U
  #define GPIO_B_IPOL_IPOL6_MASK        0x40U
  #define GPIO_B_IPOL_IPOL7_MASK        0x80U
  #define GPIO_B_IPOL_IPOL8_MASK        0x0100U
  #define GPIO_B_IPOL_IPOL9_MASK        0x0200U
  #define GPIO_B_IPOL_IPOL10_MASK       0x0400U
  #define GPIO_B_IPOL_IPOL11_MASK       0x0800U
  #define GPIO_B_IPOL_IPOL12_MASK       0x1000U
  #define GPIO_B_IPOL_IPOL13_MASK       0x2000U
  #define GPIO_B_IPOL_IPOL_MASK         0x3FFFU
  #define GPIO_B_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_B_IPOL                   (*((volatile word *)0x0000F166))


  /*** GPIO_B_IPEND - GPIO B Interrupt Pending Register; 0x0000F167 ***/
  union {
    word Word;
  } GPIO_B_IPEND_STR;
  
  #define GPIO_B_IPEND_IP0_MASK         0x01U
  #define GPIO_B_IPEND_IP1_MASK         0x02U
  #define GPIO_B_IPEND_IP2_MASK         0x04U
  #define GPIO_B_IPEND_IP3_MASK         0x08U
  #define GPIO_B_IPEND_IP4_MASK         0x10U
  #define GPIO_B_IPEND_IP5_MASK         0x20U
  #define GPIO_B_IPEND_IP6_MASK         0x40U
  #define GPIO_B_IPEND_IP7_MASK         0x80U
  #define GPIO_B_IPEND_IP8_MASK         0x0100U
  #define GPIO_B_IPEND_IP9_MASK         0x0200U
  #define GPIO_B_IPEND_IP10_MASK        0x0400U
  #define GPIO_B_IPEND_IP11_MASK        0x0800U
  #define GPIO_B_IPEND_IP12_MASK        0x1000U
  #define GPIO_B_IPEND_IP13_MASK        0x2000U
  #define GPIO_B_IPEND_IP_MASK          0x3FFFU
  #define GPIO_B_IPEND_IP_BITNUM        0x00U
  #define GPIO_B_IPEND                  (*((volatile word *)0x0000F167))


  /*** GPIO_B_IEDGE - GPIO B Interrupt Edge Sensitive Register; 0x0000F168 ***/
  union {
    word Word;
  } GPIO_B_IEDGE_STR;
  
  #define GPIO_B_IEDGE_IES0_MASK        0x01U
  #define GPIO_B_IEDGE_IES1_MASK        0x02U
  #define GPIO_B_IEDGE_IES2_MASK        0x04U
  #define GPIO_B_IEDGE_IES3_MASK        0x08U
  #define GPIO_B_IEDGE_IES4_MASK        0x10U
  #define GPIO_B_IEDGE_IES5_MASK        0x20U
  #define GPIO_B_IEDGE_IES6_MASK        0x40U
  #define GPIO_B_IEDGE_IES7_MASK        0x80U
  #define GPIO_B_IEDGE_IES8_MASK        0x0100U
  #define GPIO_B_IEDGE_IES9_MASK        0x0200U
  #define GPIO_B_IEDGE_IES10_MASK       0x0400U
  #define GPIO_B_IEDGE_IES11_MASK       0x0800U
  #define GPIO_B_IEDGE_IES12_MASK       0x1000U
  #define GPIO_B_IEDGE_IES13_MASK       0x2000U
  #define GPIO_B_IEDGE_IES_MASK         0x3FFFU
  #define GPIO_B_IEDGE_IES_BITNUM       0x00U
  #define GPIO_B_IEDGE                  (*((volatile word *)0x0000F168))


  /*** GPIO_B_PPOUTM - GPIO B Push-Pull Mode Register; 0x0000F169 ***/
  union {
    word Word;
  } GPIO_B_PPOUTM_STR;
  
  #define GPIO_B_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_B_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_B_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_B_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_B_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_B_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_B_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_B_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_B_PPOUTM_PPMODE8_MASK    0x0100U
  #define GPIO_B_PPOUTM_PPMODE9_MASK    0x0200U
  #define GPIO_B_PPOUTM_PPMODE10_MASK   0x0400U
  #define GPIO_B_PPOUTM_PPMODE11_MASK   0x0800U
  #define GPIO_B_PPOUTM_PPMODE12_MASK   0x1000U
  #define GPIO_B_PPOUTM_PPMODE13_MASK   0x2000U
  #define GPIO_B_PPOUTM_PPMODE_MASK     0x3FFFU
  #define GPIO_B_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_B_PPOUTM                 (*((volatile word *)0x0000F169))


  /*** GPIO_B_RDATA - GPIO B Raw Data Register; 0x0000F16A ***/
  union {
    word Word;
  } GPIO_B_RDATA_STR;
  
  #define GPIO_B_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_B_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_B_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_B_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_B_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_B_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_B_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_B_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_B_RDATA_RAW_DATA8_MASK   0x0100U
  #define GPIO_B_RDATA_RAW_DATA9_MASK   0x0200U
  #define GPIO_B_RDATA_RAW_DATA10_MASK  0x0400U
  #define GPIO_B_RDATA_RAW_DATA11_MASK  0x0800U
  #define GPIO_B_RDATA_RAW_DATA12_MASK  0x1000U
  #define GPIO_B_RDATA_RAW_DATA13_MASK  0x2000U
  #define GPIO_B_RDATA_RAW_DATA_MASK    0x3FFFU
  #define GPIO_B_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_B_RDATA                  (*((volatile word *)0x0000F16A))


  /*** GPIO_B_DRIVE - GPIO B Drive Strength Control Register; 0x0000F16B ***/
  union {
    word Word;
  } GPIO_B_DRIVE_STR;
  
  #define GPIO_B_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_B_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_B_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_B_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_B_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_B_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_B_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_B_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_B_DRIVE_DRIVE8_MASK      0x0100U
  #define GPIO_B_DRIVE_DRIVE9_MASK      0x0200U
  #define GPIO_B_DRIVE_DRIVE10_MASK     0x0400U
  #define GPIO_B_DRIVE_DRIVE11_MASK     0x0800U
  #define GPIO_B_DRIVE_DRIVE12_MASK     0x1000U
  #define GPIO_B_DRIVE_DRIVE13_MASK     0x2000U
  #define GPIO_B_DRIVE_DRIVE_MASK       0x3FFFU
  #define GPIO_B_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_B_DRIVE                  (*((volatile word *)0x0000F16B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOB_PRPH;

/******************************************
*** Peripheral GPIOC
*******************************************/
typedef volatile struct {
  /*** GPIO_C_PUPEN - GPIO C Pull-up Enable Register; 0x0000F170 ***/
  union {
    word Word;
  } GPIO_C_PUPEN_STR;
  
  #define GPIO_C_PUPEN_PU0_MASK         0x01U
  #define GPIO_C_PUPEN_PU1_MASK         0x02U
  #define GPIO_C_PUPEN_PU2_MASK         0x04U
  #define GPIO_C_PUPEN_PU3_MASK         0x08U
  #define GPIO_C_PUPEN_PU4_MASK         0x10U
  #define GPIO_C_PUPEN_PU5_MASK         0x20U
  #define GPIO_C_PUPEN_PU6_MASK         0x40U
  #define GPIO_C_PUPEN_PU7_MASK         0x80U
  #define GPIO_C_PUPEN_PU8_MASK         0x0100U
  #define GPIO_C_PUPEN_PU9_MASK         0x0200U
  #define GPIO_C_PUPEN_PU10_MASK        0x0400U
  #define GPIO_C_PUPEN_PU11_MASK        0x0800U
  #define GPIO_C_PUPEN_PU12_MASK        0x1000U
  #define GPIO_C_PUPEN_PU13_MASK        0x2000U
  #define GPIO_C_PUPEN_PU14_MASK        0x4000U
  #define GPIO_C_PUPEN_PU15_MASK        0x8000U
  #define GPIO_C_PUPEN                  (*((volatile word *)0x0000F170))


  /*** GPIO_C_DATA - GPIO C Data Register; 0x0000F171 ***/
  union {
    word Word;
  } GPIO_C_DATA_STR;
  
  #define GPIO_C_DATA_D0_MASK           0x01U
  #define GPIO_C_DATA_D1_MASK           0x02U
  #define GPIO_C_DATA_D2_MASK           0x04U
  #define GPIO_C_DATA_D3_MASK           0x08U
  #define GPIO_C_DATA_D4_MASK           0x10U
  #define GPIO_C_DATA_D5_MASK           0x20U
  #define GPIO_C_DATA_D6_MASK           0x40U
  #define GPIO_C_DATA_D7_MASK           0x80U
  #define GPIO_C_DATA_D8_MASK           0x0100U
  #define GPIO_C_DATA_D9_MASK           0x0200U
  #define GPIO_C_DATA_D10_MASK          0x0400U
  #define GPIO_C_DATA_D11_MASK          0x0800U
  #define GPIO_C_DATA_D12_MASK          0x1000U
  #define GPIO_C_DATA_D13_MASK          0x2000U
  #define GPIO_C_DATA_D14_MASK          0x4000U
  #define GPIO_C_DATA_D15_MASK          0x8000U
  #define GPIO_C_DATA                   (*((volatile word *)0x0000F171))


  /*** GPIO_C_DDIR - GPIO C Data Direction Register; 0x0000F172 ***/
  union {
    word Word;
  } GPIO_C_DDIR_STR;
  
  #define GPIO_C_DDIR_DD0_MASK          0x01U
  #define GPIO_C_DDIR_DD1_MASK          0x02U
  #define GPIO_C_DDIR_DD2_MASK          0x04U
  #define GPIO_C_DDIR_DD3_MASK          0x08U
  #define GPIO_C_DDIR_DD4_MASK          0x10U
  #define GPIO_C_DDIR_DD5_MASK          0x20U
  #define GPIO_C_DDIR_DD6_MASK          0x40U
  #define GPIO_C_DDIR_DD7_MASK          0x80U
  #define GPIO_C_DDIR_DD8_MASK          0x0100U
  #define GPIO_C_DDIR_DD9_MASK          0x0200U
  #define GPIO_C_DDIR_DD10_MASK         0x0400U
  #define GPIO_C_DDIR_DD11_MASK         0x0800U
  #define GPIO_C_DDIR_DD12_MASK         0x1000U
  #define GPIO_C_DDIR_DD13_MASK         0x2000U
  #define GPIO_C_DDIR_DD14_MASK         0x4000U
  #define GPIO_C_DDIR_DD15_MASK         0x8000U
  #define GPIO_C_DDIR                   (*((volatile word *)0x0000F172))


  /*** GPIO_C_PEREN - GPIO C Peripheral Enable Registers; 0x0000F173 ***/
  union {
    word Word;
  } GPIO_C_PEREN_STR;
  
  #define GPIO_C_PEREN_PE0_MASK         0x01U
  #define GPIO_C_PEREN_PE1_MASK         0x02U
  #define GPIO_C_PEREN_PE2_MASK         0x04U
  #define GPIO_C_PEREN_PE3_MASK         0x08U
  #define GPIO_C_PEREN_PE4_MASK         0x10U
  #define GPIO_C_PEREN_PE5_MASK         0x20U
  #define GPIO_C_PEREN_PE6_MASK         0x40U
  #define GPIO_C_PEREN_PE7_MASK         0x80U
  #define GPIO_C_PEREN_PE8_MASK         0x0100U
  #define GPIO_C_PEREN_PE9_MASK         0x0200U
  #define GPIO_C_PEREN_PE10_MASK        0x0400U
  #define GPIO_C_PEREN_PE11_MASK        0x0800U
  #define GPIO_C_PEREN_PE12_MASK        0x1000U
  #define GPIO_C_PEREN_PE13_MASK        0x2000U
  #define GPIO_C_PEREN_PE14_MASK        0x4000U
  #define GPIO_C_PEREN_PE15_MASK        0x8000U
  #define GPIO_C_PEREN                  (*((volatile word *)0x0000F173))


  /*** GPIO_C_IASSRT - GPIO C Interrupt Assert Register; 0x0000F174 ***/
  union {
    word Word;
  } GPIO_C_IASSRT_STR;
  
  #define GPIO_C_IASSRT_IA0_MASK        0x01U
  #define GPIO_C_IASSRT_IA1_MASK        0x02U
  #define GPIO_C_IASSRT_IA2_MASK        0x04U
  #define GPIO_C_IASSRT_IA3_MASK        0x08U
  #define GPIO_C_IASSRT_IA4_MASK        0x10U
  #define GPIO_C_IASSRT_IA5_MASK        0x20U
  #define GPIO_C_IASSRT_IA6_MASK        0x40U
  #define GPIO_C_IASSRT_IA7_MASK        0x80U
  #define GPIO_C_IASSRT_IA8_MASK        0x0100U
  #define GPIO_C_IASSRT_IA9_MASK        0x0200U
  #define GPIO_C_IASSRT_IA10_MASK       0x0400U
  #define GPIO_C_IASSRT_IA11_MASK       0x0800U
  #define GPIO_C_IASSRT_IA12_MASK       0x1000U
  #define GPIO_C_IASSRT_IA13_MASK       0x2000U
  #define GPIO_C_IASSRT_IA14_MASK       0x4000U
  #define GPIO_C_IASSRT_IA15_MASK       0x8000U
  #define GPIO_C_IASSRT                 (*((volatile word *)0x0000F174))


  /*** GPIO_C_IEN - GPIO C Interrupt Enable Register; 0x0000F175 ***/
  union {
    word Word;
  } GPIO_C_IEN_STR;
  
  #define GPIO_C_IEN_IEN0_MASK          0x01U
  #define GPIO_C_IEN_IEN1_MASK          0x02U
  #define GPIO_C_IEN_IEN2_MASK          0x04U
  #define GPIO_C_IEN_IEN3_MASK          0x08U
  #define GPIO_C_IEN_IEN4_MASK          0x10U
  #define GPIO_C_IEN_IEN5_MASK          0x20U
  #define GPIO_C_IEN_IEN6_MASK          0x40U
  #define GPIO_C_IEN_IEN7_MASK          0x80U
  #define GPIO_C_IEN_IEN8_MASK          0x0100U
  #define GPIO_C_IEN_IEN9_MASK          0x0200U
  #define GPIO_C_IEN_IEN10_MASK         0x0400U
  #define GPIO_C_IEN_IEN11_MASK         0x0800U
  #define GPIO_C_IEN_IEN12_MASK         0x1000U
  #define GPIO_C_IEN_IEN13_MASK         0x2000U
  #define GPIO_C_IEN_IEN14_MASK         0x4000U
  #define GPIO_C_IEN_IEN15_MASK         0x8000U
  #define GPIO_C_IEN                    (*((volatile word *)0x0000F175))


  /*** GPIO_C_IPOL - GPIO C Interrupt Polarity Register; 0x0000F176 ***/
  union {
    word Word;
  } GPIO_C_IPOL_STR;
  
  #define GPIO_C_IPOL_IPOL0_MASK        0x01U
  #define GPIO_C_IPOL_IPOL1_MASK        0x02U
  #define GPIO_C_IPOL_IPOL2_MASK        0x04U
  #define GPIO_C_IPOL_IPOL3_MASK        0x08U
  #define GPIO_C_IPOL_IPOL4_MASK        0x10U
  #define GPIO_C_IPOL_IPOL5_MASK        0x20U
  #define GPIO_C_IPOL_IPOL6_MASK        0x40U
  #define GPIO_C_IPOL_IPOL7_MASK        0x80U
  #define GPIO_C_IPOL_IPOL8_MASK        0x0100U
  #define GPIO_C_IPOL_IPOL9_MASK        0x0200U
  #define GPIO_C_IPOL_IPOL10_MASK       0x0400U
  #define GPIO_C_IPOL_IPOL11_MASK       0x0800U
  #define GPIO_C_IPOL_IPOL12_MASK       0x1000U
  #define GPIO_C_IPOL_IPOL13_MASK       0x2000U
  #define GPIO_C_IPOL_IPOL14_MASK       0x4000U
  #define GPIO_C_IPOL_IPOL15_MASK       0x8000U
  #define GPIO_C_IPOL                   (*((volatile word *)0x0000F176))


  /*** GPIO_C_IPEND - GPIO C Interrupt Pending Register; 0x0000F177 ***/
  union {
    word Word;
  } GPIO_C_IPEND_STR;
  
  #define GPIO_C_IPEND_IP0_MASK         0x01U
  #define GPIO_C_IPEND_IP1_MASK         0x02U
  #define GPIO_C_IPEND_IP2_MASK         0x04U
  #define GPIO_C_IPEND_IP3_MASK         0x08U
  #define GPIO_C_IPEND_IP4_MASK         0x10U
  #define GPIO_C_IPEND_IP5_MASK         0x20U
  #define GPIO_C_IPEND_IP6_MASK         0x40U
  #define GPIO_C_IPEND_IP7_MASK         0x80U
  #define GPIO_C_IPEND_IP8_MASK         0x0100U
  #define GPIO_C_IPEND_IP9_MASK         0x0200U
  #define GPIO_C_IPEND_IP10_MASK        0x0400U
  #define GPIO_C_IPEND_IP11_MASK        0x0800U
  #define GPIO_C_IPEND_IP12_MASK        0x1000U
  #define GPIO_C_IPEND_IP13_MASK        0x2000U
  #define GPIO_C_IPEND_IP14_MASK        0x4000U
  #define GPIO_C_IPEND_IP15_MASK        0x8000U
  #define GPIO_C_IPEND                  (*((volatile word *)0x0000F177))


  /*** GPIO_C_IEDGE - GPIO C Interrupt Edge Sensitive Register; 0x0000F178 ***/
  union {
    word Word;
  } GPIO_C_IEDGE_STR;
  
  #define GPIO_C_IEDGE_IES0_MASK        0x01U
  #define GPIO_C_IEDGE_IES1_MASK        0x02U
  #define GPIO_C_IEDGE_IES2_MASK        0x04U
  #define GPIO_C_IEDGE_IES3_MASK        0x08U
  #define GPIO_C_IEDGE_IES4_MASK        0x10U
  #define GPIO_C_IEDGE_IES5_MASK        0x20U
  #define GPIO_C_IEDGE_IES6_MASK        0x40U
  #define GPIO_C_IEDGE_IES7_MASK        0x80U
  #define GPIO_C_IEDGE_IES8_MASK        0x0100U
  #define GPIO_C_IEDGE_IES9_MASK        0x0200U
  #define GPIO_C_IEDGE_IES10_MASK       0x0400U
  #define GPIO_C_IEDGE_IES11_MASK       0x0800U
  #define GPIO_C_IEDGE_IES12_MASK       0x1000U
  #define GPIO_C_IEDGE_IES13_MASK       0x2000U
  #define GPIO_C_IEDGE_IES14_MASK       0x4000U
  #define GPIO_C_IEDGE_IES15_MASK       0x8000U
  #define GPIO_C_IEDGE                  (*((volatile word *)0x0000F178))


  /*** GPIO_C_PPOUTM - GPIO C Push-Pull Mode Register; 0x0000F179 ***/
  union {
    word Word;
  } GPIO_C_PPOUTM_STR;
  
  #define GPIO_C_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_C_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_C_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_C_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_C_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_C_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_C_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_C_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_C_PPOUTM_PPMODE8_MASK    0x0100U
  #define GPIO_C_PPOUTM_PPMODE9_MASK    0x0200U
  #define GPIO_C_PPOUTM_PPMODE10_MASK   0x0400U
  #define GPIO_C_PPOUTM_PPMODE11_MASK   0x0800U
  #define GPIO_C_PPOUTM_PPMODE12_MASK   0x1000U
  #define GPIO_C_PPOUTM_PPMODE13_MASK   0x2000U
  #define GPIO_C_PPOUTM_PPMODE14_MASK   0x4000U
  #define GPIO_C_PPOUTM_PPMODE15_MASK   0x8000U
  #define GPIO_C_PPOUTM                 (*((volatile word *)0x0000F179))


  /*** GPIO_C_RDATA - GPIO C Raw Data Register; 0x0000F17A ***/
  union {
    word Word;
  } GPIO_C_RDATA_STR;
  
  #define GPIO_C_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_C_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_C_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_C_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_C_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_C_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_C_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_C_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_C_RDATA_RAW_DATA8_MASK   0x0100U
  #define GPIO_C_RDATA_RAW_DATA9_MASK   0x0200U
  #define GPIO_C_RDATA_RAW_DATA10_MASK  0x0400U
  #define GPIO_C_RDATA_RAW_DATA11_MASK  0x0800U
  #define GPIO_C_RDATA_RAW_DATA12_MASK  0x1000U
  #define GPIO_C_RDATA_RAW_DATA13_MASK  0x2000U
  #define GPIO_C_RDATA_RAW_DATA14_MASK  0x4000U
  #define GPIO_C_RDATA_RAW_DATA15_MASK  0x8000U
  #define GPIO_C_RDATA                  (*((volatile word *)0x0000F17A))


  /*** GPIO_C_DRIVE - GPIO C Drive Strength Control Register; 0x0000F17B ***/
  union {
    word Word;
  } GPIO_C_DRIVE_STR;
  
  #define GPIO_C_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_C_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_C_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_C_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_C_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_C_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_C_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_C_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_C_DRIVE_DRIVE8_MASK      0x0100U
  #define GPIO_C_DRIVE_DRIVE9_MASK      0x0200U
  #define GPIO_C_DRIVE_DRIVE10_MASK     0x0400U
  #define GPIO_C_DRIVE_DRIVE11_MASK     0x0800U
  #define GPIO_C_DRIVE_DRIVE12_MASK     0x1000U
  #define GPIO_C_DRIVE_DRIVE13_MASK     0x2000U
  #define GPIO_C_DRIVE_DRIVE14_MASK     0x4000U
  #define GPIO_C_DRIVE_DRIVE15_MASK     0x8000U
  #define GPIO_C_DRIVE                  (*((volatile word *)0x0000F17B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOC_PRPH;

/******************************************
*** Peripheral GPIOD
*******************************************/
typedef volatile struct {
  /*** GPIO_D_PUPEN - GPIO D Pull-up Enable Register; 0x0000F180 ***/
  union {
    word Word;
  } GPIO_D_PUPEN_STR;
  
  #define GPIO_D_PUPEN_PU0_MASK         0x01U
  #define GPIO_D_PUPEN_PU1_MASK         0x02U
  #define GPIO_D_PUPEN_PU2_MASK         0x04U
  #define GPIO_D_PUPEN_PU3_MASK         0x08U
  #define GPIO_D_PUPEN_PU4_MASK         0x10U
  #define GPIO_D_PUPEN_PU5_MASK         0x20U
  #define GPIO_D_PUPEN_PU6_MASK         0x40U
  #define GPIO_D_PUPEN_PU7_MASK         0x80U
  #define GPIO_D_PUPEN_PU_MASK          0xFFU
  #define GPIO_D_PUPEN_PU_BITNUM        0x00U
  #define GPIO_D_PUPEN                  (*((volatile word *)0x0000F180))


  /*** GPIO_D_DATA - GPIO D Data Register; 0x0000F181 ***/
  union {
    word Word;
  } GPIO_D_DATA_STR;
  
  #define GPIO_D_DATA_D0_MASK           0x01U
  #define GPIO_D_DATA_D1_MASK           0x02U
  #define GPIO_D_DATA_D2_MASK           0x04U
  #define GPIO_D_DATA_D3_MASK           0x08U
  #define GPIO_D_DATA_D4_MASK           0x10U
  #define GPIO_D_DATA_D5_MASK           0x20U
  #define GPIO_D_DATA_D6_MASK           0x40U
  #define GPIO_D_DATA_D7_MASK           0x80U
  #define GPIO_D_DATA_D_MASK            0xFFU
  #define GPIO_D_DATA_D_BITNUM          0x00U
  #define GPIO_D_DATA                   (*((volatile word *)0x0000F181))


  /*** GPIO_D_DDIR - GPIO D Data Direction Register; 0x0000F182 ***/
  union {
    word Word;
  } GPIO_D_DDIR_STR;
  
  #define GPIO_D_DDIR_DD0_MASK          0x01U
  #define GPIO_D_DDIR_DD1_MASK          0x02U
  #define GPIO_D_DDIR_DD2_MASK          0x04U
  #define GPIO_D_DDIR_DD3_MASK          0x08U
  #define GPIO_D_DDIR_DD4_MASK          0x10U
  #define GPIO_D_DDIR_DD5_MASK          0x20U
  #define GPIO_D_DDIR_DD6_MASK          0x40U
  #define GPIO_D_DDIR_DD7_MASK          0x80U
  #define GPIO_D_DDIR_DD_MASK           0xFFU
  #define GPIO_D_DDIR_DD_BITNUM         0x00U
  #define GPIO_D_DDIR                   (*((volatile word *)0x0000F182))


  /*** GPIO_D_PEREN - GPIO D Peripheral Enable Registers; 0x0000F183 ***/
  union {
    word Word;
  } GPIO_D_PEREN_STR;
  
  #define GPIO_D_PEREN_PE0_MASK         0x01U
  #define GPIO_D_PEREN_PE1_MASK         0x02U
  #define GPIO_D_PEREN_PE2_MASK         0x04U
  #define GPIO_D_PEREN_PE3_MASK         0x08U
  #define GPIO_D_PEREN_PE4_MASK         0x10U
  #define GPIO_D_PEREN_PE5_MASK         0x20U
  #define GPIO_D_PEREN_PE6_MASK         0x40U
  #define GPIO_D_PEREN_PE7_MASK         0x80U
  #define GPIO_D_PEREN_PE_MASK          0xFFU
  #define GPIO_D_PEREN_PE_BITNUM        0x00U
  #define GPIO_D_PEREN                  (*((volatile word *)0x0000F183))


  /*** GPIO_D_IASSRT - GPIO D Interrupt Assert Register; 0x0000F184 ***/
  union {
    word Word;
  } GPIO_D_IASSRT_STR;
  
  #define GPIO_D_IASSRT_IA0_MASK        0x01U
  #define GPIO_D_IASSRT_IA1_MASK        0x02U
  #define GPIO_D_IASSRT_IA2_MASK        0x04U
  #define GPIO_D_IASSRT_IA3_MASK        0x08U
  #define GPIO_D_IASSRT_IA4_MASK        0x10U
  #define GPIO_D_IASSRT_IA5_MASK        0x20U
  #define GPIO_D_IASSRT_IA6_MASK        0x40U
  #define GPIO_D_IASSRT_IA7_MASK        0x80U
  #define GPIO_D_IASSRT_IA_MASK         0xFFU
  #define GPIO_D_IASSRT_IA_BITNUM       0x00U
  #define GPIO_D_IASSRT                 (*((volatile word *)0x0000F184))


  /*** GPIO_D_IEN - GPIO D Interrupt Enable Register; 0x0000F185 ***/
  union {
    word Word;
  } GPIO_D_IEN_STR;
  
  #define GPIO_D_IEN_IEN0_MASK          0x01U
  #define GPIO_D_IEN_IEN1_MASK          0x02U
  #define GPIO_D_IEN_IEN2_MASK          0x04U
  #define GPIO_D_IEN_IEN3_MASK          0x08U
  #define GPIO_D_IEN_IEN4_MASK          0x10U
  #define GPIO_D_IEN_IEN5_MASK          0x20U
  #define GPIO_D_IEN_IEN6_MASK          0x40U
  #define GPIO_D_IEN_IEN7_MASK          0x80U
  #define GPIO_D_IEN_IEN_MASK           0xFFU
  #define GPIO_D_IEN_IEN_BITNUM         0x00U
  #define GPIO_D_IEN                    (*((volatile word *)0x0000F185))


  /*** GPIO_D_IPOL - GPIO D Interrupt Polarity Register; 0x0000F186 ***/
  union {
    word Word;
  } GPIO_D_IPOL_STR;
  
  #define GPIO_D_IPOL_IPOL0_MASK        0x01U
  #define GPIO_D_IPOL_IPOL1_MASK        0x02U
  #define GPIO_D_IPOL_IPOL2_MASK        0x04U
  #define GPIO_D_IPOL_IPOL3_MASK        0x08U
  #define GPIO_D_IPOL_IPOL4_MASK        0x10U
  #define GPIO_D_IPOL_IPOL5_MASK        0x20U
  #define GPIO_D_IPOL_IPOL6_MASK        0x40U
  #define GPIO_D_IPOL_IPOL7_MASK        0x80U
  #define GPIO_D_IPOL_IPOL_MASK         0xFFU
  #define GPIO_D_IPOL_IPOL_BITNUM       0x00U
  #define GPIO_D_IPOL                   (*((volatile word *)0x0000F186))


  /*** GPIO_D_IPEND - GPIO D Interrupt Pending Register; 0x0000F187 ***/
  union {
    word Word;
  } GPIO_D_IPEND_STR;
  
  #define GPIO_D_IPEND_IP0_MASK         0x01U
  #define GPIO_D_IPEND_IP1_MASK         0x02U
  #define GPIO_D_IPEND_IP2_MASK         0x04U
  #define GPIO_D_IPEND_IP3_MASK         0x08U
  #define GPIO_D_IPEND_IP4_MASK         0x10U
  #define GPIO_D_IPEND_IP5_MASK         0x20U
  #define GPIO_D_IPEND_IP6_MASK         0x40U
  #define GPIO_D_IPEND_IP7_MASK         0x80U
  #define GPIO_D_IPEND_IP_MASK          0xFFU
  #define GPIO_D_IPEND_IP_BITNUM        0x00U
  #define GPIO_D_IPEND                  (*((volatile word *)0x0000F187))


  /*** GPIO_D_IEDGE - GPIO D Interrupt Edge Sensitive Register; 0x0000F188 ***/
  union {
    word Word;
  } GPIO_D_IEDGE_STR;
  
  #define GPIO_D_IEDGE_IES0_MASK        0x01U
  #define GPIO_D_IEDGE_IES1_MASK        0x02U
  #define GPIO_D_IEDGE_IES2_MASK        0x04U
  #define GPIO_D_IEDGE_IES3_MASK        0x08U
  #define GPIO_D_IEDGE_IES4_MASK        0x10U
  #define GPIO_D_IEDGE_IES5_MASK        0x20U
  #define GPIO_D_IEDGE_IES6_MASK        0x40U
  #define GPIO_D_IEDGE_IES7_MASK        0x80U
  #define GPIO_D_IEDGE_IES_MASK         0xFFU
  #define GPIO_D_IEDGE_IES_BITNUM       0x00U
  #define GPIO_D_IEDGE                  (*((volatile word *)0x0000F188))


  /*** GPIO_D_PPOUTM - GPIO D Push-Pull Mode Register; 0x0000F189 ***/
  union {
    word Word;
  } GPIO_D_PPOUTM_STR;
  
  #define GPIO_D_PPOUTM_PPMODE0_MASK    0x01U
  #define GPIO_D_PPOUTM_PPMODE1_MASK    0x02U
  #define GPIO_D_PPOUTM_PPMODE2_MASK    0x04U
  #define GPIO_D_PPOUTM_PPMODE3_MASK    0x08U
  #define GPIO_D_PPOUTM_PPMODE4_MASK    0x10U
  #define GPIO_D_PPOUTM_PPMODE5_MASK    0x20U
  #define GPIO_D_PPOUTM_PPMODE6_MASK    0x40U
  #define GPIO_D_PPOUTM_PPMODE7_MASK    0x80U
  #define GPIO_D_PPOUTM_PPMODE_MASK     0xFFU
  #define GPIO_D_PPOUTM_PPMODE_BITNUM   0x00U
  #define GPIO_D_PPOUTM                 (*((volatile word *)0x0000F189))


  /*** GPIO_D_RDATA - GPIO D Raw Data Register; 0x0000F18A ***/
  union {
    word Word;
  } GPIO_D_RDATA_STR;
  
  #define GPIO_D_RDATA_RAW_DATA0_MASK   0x01U
  #define GPIO_D_RDATA_RAW_DATA1_MASK   0x02U
  #define GPIO_D_RDATA_RAW_DATA2_MASK   0x04U
  #define GPIO_D_RDATA_RAW_DATA3_MASK   0x08U
  #define GPIO_D_RDATA_RAW_DATA4_MASK   0x10U
  #define GPIO_D_RDATA_RAW_DATA5_MASK   0x20U
  #define GPIO_D_RDATA_RAW_DATA6_MASK   0x40U
  #define GPIO_D_RDATA_RAW_DATA7_MASK   0x80U
  #define GPIO_D_RDATA_RAW_DATA_MASK    0xFFU
  #define GPIO_D_RDATA_RAW_DATA_BITNUM  0x00U
  #define GPIO_D_RDATA                  (*((volatile word *)0x0000F18A))


  /*** GPIO_D_DRIVE - GPIO D Drive Strength Control Register; 0x0000F18B ***/
  union {
    word Word;
  } GPIO_D_DRIVE_STR;
  
  #define GPIO_D_DRIVE_DRIVE0_MASK      0x01U
  #define GPIO_D_DRIVE_DRIVE1_MASK      0x02U
  #define GPIO_D_DRIVE_DRIVE2_MASK      0x04U
  #define GPIO_D_DRIVE_DRIVE3_MASK      0x08U
  #define GPIO_D_DRIVE_DRIVE4_MASK      0x10U
  #define GPIO_D_DRIVE_DRIVE5_MASK      0x20U
  #define GPIO_D_DRIVE_DRIVE6_MASK      0x40U
  #define GPIO_D_DRIVE_DRIVE7_MASK      0x80U
  #define GPIO_D_DRIVE_DRIVE_MASK       0xFFU
  #define GPIO_D_DRIVE_DRIVE_BITNUM     0x00U
  #define GPIO_D_DRIVE                  (*((volatile word *)0x0000F18B))


  word Reserved0[4];                   /* Reserved (unused) registers */

} GPIOD_PRPH;

/******************************************
*** Peripheral PIT0
*******************************************/
typedef volatile struct {
  /*** PIT0_CTRL - PIT 0 Control Register; 0x0000F190 ***/
  union {
    word Word;
  } PIT0_CTRL_STR;
  
  #define PIT0_CTRL_CNT_EN_MASK         0x01U
  #define PIT0_CTRL_PRIE_MASK           0x02U
  #define PIT0_CTRL_PRF_MASK            0x04U
  #define PIT0_CTRL_PRESCALER0_MASK     0x08U
  #define PIT0_CTRL_PRESCALER1_MASK     0x10U
  #define PIT0_CTRL_PRESCALER2_MASK     0x20U
  #define PIT0_CTRL_PRESCALER3_MASK     0x40U
  #define PIT0_CTRL_SLAVE_MASK          0x8000U
  #define PIT0_CTRL_PRESCALER_MASK      0x78U
  #define PIT0_CTRL_PRESCALER_BITNUM    0x03U
  #define PIT0_CTRL                     (*((volatile word *)0x0000F190))


  /*** PIT0_MOD - PIT 0 Modulo Register; 0x0000F191 ***/
  union {
    word Word;
  } PIT0_MOD_STR;
  
  #define PIT0_MOD                      (*((volatile word *)0x0000F191))


  /*** PIT0_CNTR - PIT 0 Counter Register; 0x0000F192 ***/
  union {
    word Word;
  } PIT0_CNTR_STR;
  
  #define PIT0_CNTR                     (*((volatile word *)0x0000F192))


  word Reserved0[13];                  /* Reserved (unused) registers */

} PIT0_PRPH;

/******************************************
*** Peripheral PIT1
*******************************************/
typedef volatile struct {
  /*** PIT1_CTRL - PIT 1 Control Register; 0x0000F1A0 ***/
  union {
    word Word;
  } PIT1_CTRL_STR;
  
  #define PIT1_CTRL_CNT_EN_MASK         0x01U
  #define PIT1_CTRL_PRIE_MASK           0x02U
  #define PIT1_CTRL_PRF_MASK            0x04U
  #define PIT1_CTRL_PRESCALER0_MASK     0x08U
  #define PIT1_CTRL_PRESCALER1_MASK     0x10U
  #define PIT1_CTRL_PRESCALER2_MASK     0x20U
  #define PIT1_CTRL_PRESCALER3_MASK     0x40U
  #define PIT1_CTRL_SLAVE_MASK          0x8000U
  #define PIT1_CTRL_PRESCALER_MASK      0x78U
  #define PIT1_CTRL_PRESCALER_BITNUM    0x03U
  #define PIT1_CTRL                     (*((volatile word *)0x0000F1A0))


  /*** PIT1_MOD - PIT 1 Modulo Register; 0x0000F1A1 ***/
  union {
    word Word;
  } PIT1_MOD_STR;
  
  #define PIT1_MOD                      (*((volatile word *)0x0000F1A1))


  /*** PIT1_CNTR - PIT 1 Counter Register; 0x0000F1A2 ***/
  union {
    word Word;
  } PIT1_CNTR_STR;
  
  #define PIT1_CNTR                     (*((volatile word *)0x0000F1A2))


  word Reserved0[13];                  /* Reserved (unused) registers */

} PIT1_PRPH;

/******************************************
*** Peripheral PIT2
*******************************************/
typedef volatile struct {
  /*** PIT2_CTRL - PIT 2 Control Register; 0x0000F1B0 ***/
  union {
    word Word;
  } PIT2_CTRL_STR;
  
  #define PIT2_CTRL_CNT_EN_MASK         0x01U
  #define PIT2_CTRL_PRIE_MASK           0x02U
  #define PIT2_CTRL_PRF_MASK            0x04U
  #define PIT2_CTRL_PRESCALER0_MASK     0x08U
  #define PIT2_CTRL_PRESCALER1_MASK     0x10U
  #define PIT2_CTRL_PRESCALER2_MASK     0x20U
  #define PIT2_CTRL_PRESCALER3_MASK     0x40U
  #define PIT2_CTRL_SLAVE_MASK          0x8000U
  #define PIT2_CTRL_PRESCALER_MASK      0x78U
  #define PIT2_CTRL_PRESCALER_BITNUM    0x03U
  #define PIT2_CTRL                     (*((volatile word *)0x0000F1B0))


  /*** PIT2_MOD - PIT 2 Modulo Register; 0x0000F1B1 ***/
  union {
    word Word;
  } PIT2_MOD_STR;
  
  #define PIT2_MOD                      (*((volatile word *)0x0000F1B1))


  /*** PIT2_CNTR - PIT 2 Counter Register; 0x0000F1B2 ***/
  union {
    word Word;
  } PIT2_CNTR_STR;
  
  #define PIT2_CNTR                     (*((volatile word *)0x0000F1B2))


  word Reserved0[13];                  /* Reserved (unused) registers */

} PIT2_PRPH;

/******************************************
*** Peripheral DAC0
*******************************************/
typedef volatile struct {
  /*** DAC0_CTRL - DAC 0 Control Register; 0x0000F1C0 ***/
  union {
    word Word;
  } DAC0_CTRL_STR;
  
  #define DAC0_CTRL_PDN_MASK            0x01U
  #define DAC0_CTRL_FORMAT_MASK         0x02U
  #define DAC0_CTRL_SYNC_EN_MASK        0x04U
  #define DAC0_CTRL_AUTO_MASK           0x08U
  #define DAC0_CTRL_DOWN_MASK           0x10U
  #define DAC0_CTRL_UP_MASK             0x20U
  #define DAC0_CTRL_FILT_EN_MASK        0x1000U
  #define DAC0_CTRL_FILT_CNT0_MASK      0x2000U
  #define DAC0_CTRL_FILT_CNT1_MASK      0x4000U
  #define DAC0_CTRL_FILT_CNT2_MASK      0x8000U
  #define DAC0_CTRL_FILT_CNT_MASK       0xE000U
  #define DAC0_CTRL_FILT_CNT_BITNUM     0x0DU
  #define DAC0_CTRL                     (*((volatile word *)0x0000F1C0))


  /*** DAC0_DATA - DAC 0 Buffered Data Register; 0x0000F1C1 ***/
  union {
    word Word;
  } DAC0_DATA_STR;
  
  #define DAC0_DATA_DATA0_MASK          0x01U
  #define DAC0_DATA_DATA1_MASK          0x02U
  #define DAC0_DATA_DATA2_MASK          0x04U
  #define DAC0_DATA_DATA3_MASK          0x08U
  #define DAC0_DATA_DATA4_MASK          0x10U
  #define DAC0_DATA_DATA5_MASK          0x20U
  #define DAC0_DATA_DATA6_MASK          0x40U
  #define DAC0_DATA_DATA7_MASK          0x80U
  #define DAC0_DATA_DATA8_MASK          0x0100U
  #define DAC0_DATA_DATA9_MASK          0x0200U
  #define DAC0_DATA_DATA10_MASK         0x0400U
  #define DAC0_DATA_DATA11_MASK         0x0800U
  #define DAC0_DATA_DATA12_MASK         0x1000U
  #define DAC0_DATA_DATA13_MASK         0x2000U
  #define DAC0_DATA_DATA14_MASK         0x4000U
  #define DAC0_DATA_DATA15_MASK         0x8000U
  #define DAC0_DATA                     (*((volatile word *)0x0000F1C1))


  /*** DAC0_STEP - DAC 0 Step Size Register; 0x0000F1C2 ***/
  union {
    word Word;
  } DAC0_STEP_STR;
  
  #define DAC0_STEP_STEP0_MASK          0x01U
  #define DAC0_STEP_STEP1_MASK          0x02U
  #define DAC0_STEP_STEP2_MASK          0x04U
  #define DAC0_STEP_STEP3_MASK          0x08U
  #define DAC0_STEP_STEP4_MASK          0x10U
  #define DAC0_STEP_STEP5_MASK          0x20U
  #define DAC0_STEP_STEP6_MASK          0x40U
  #define DAC0_STEP_STEP7_MASK          0x80U
  #define DAC0_STEP_STEP8_MASK          0x0100U
  #define DAC0_STEP_STEP9_MASK          0x0200U
  #define DAC0_STEP_STEP10_MASK         0x0400U
  #define DAC0_STEP_STEP11_MASK         0x0800U
  #define DAC0_STEP_STEP12_MASK         0x1000U
  #define DAC0_STEP_STEP13_MASK         0x2000U
  #define DAC0_STEP_STEP14_MASK         0x4000U
  #define DAC0_STEP_STEP15_MASK         0x8000U
  #define DAC0_STEP                     (*((volatile word *)0x0000F1C2))


  /*** DAC0_MINVAL - DAC 0 Minimum Value Register; 0x0000F1C3 ***/
  union {
    word Word;
  } DAC0_MINVAL_STR;
  
  #define DAC0_MINVAL_MINVAL0_MASK      0x01U
  #define DAC0_MINVAL_MINVAL1_MASK      0x02U
  #define DAC0_MINVAL_MINVAL2_MASK      0x04U
  #define DAC0_MINVAL_MINVAL3_MASK      0x08U
  #define DAC0_MINVAL_MINVAL4_MASK      0x10U
  #define DAC0_MINVAL_MINVAL5_MASK      0x20U
  #define DAC0_MINVAL_MINVAL6_MASK      0x40U
  #define DAC0_MINVAL_MINVAL7_MASK      0x80U
  #define DAC0_MINVAL_MINVAL8_MASK      0x0100U
  #define DAC0_MINVAL_MINVAL9_MASK      0x0200U
  #define DAC0_MINVAL_MINVAL10_MASK     0x0400U
  #define DAC0_MINVAL_MINVAL11_MASK     0x0800U
  #define DAC0_MINVAL_MINVAL12_MASK     0x1000U
  #define DAC0_MINVAL_MINVAL13_MASK     0x2000U
  #define DAC0_MINVAL_MINVAL14_MASK     0x4000U
  #define DAC0_MINVAL_MINVAL15_MASK     0x8000U
  #define DAC0_MINVAL                   (*((volatile word *)0x0000F1C3))


  /*** DAC0_MAXVAL - DAC 0 Maximum Value Register; 0x0000F1C4 ***/
  union {
    word Word;
  } DAC0_MAXVAL_STR;
  
  #define DAC0_MAXVAL_MAXVAL0_MASK      0x01U
  #define DAC0_MAXVAL_MAXVAL1_MASK      0x02U
  #define DAC0_MAXVAL_MAXVAL2_MASK      0x04U
  #define DAC0_MAXVAL_MAXVAL3_MASK      0x08U
  #define DAC0_MAXVAL_MAXVAL4_MASK      0x10U
  #define DAC0_MAXVAL_MAXVAL5_MASK      0x20U
  #define DAC0_MAXVAL_MAXVAL6_MASK      0x40U
  #define DAC0_MAXVAL_MAXVAL7_MASK      0x80U
  #define DAC0_MAXVAL_MAXVAL8_MASK      0x0100U
  #define DAC0_MAXVAL_MAXVAL9_MASK      0x0200U
  #define DAC0_MAXVAL_MAXVAL10_MASK     0x0400U
  #define DAC0_MAXVAL_MAXVAL11_MASK     0x0800U
  #define DAC0_MAXVAL_MAXVAL12_MASK     0x1000U
  #define DAC0_MAXVAL_MAXVAL13_MASK     0x2000U
  #define DAC0_MAXVAL_MAXVAL14_MASK     0x4000U
  #define DAC0_MAXVAL_MAXVAL15_MASK     0x8000U
  #define DAC0_MAXVAL                   (*((volatile word *)0x0000F1C4))


  word Reserved0[11];                  /* Reserved (unused) registers */

} DAC0_PRPH;

/******************************************
*** Peripheral DAC1
*******************************************/
typedef volatile struct {
  /*** DAC1_CTRL - DAC 1 Control Register; 0x0000F1D0 ***/
  union {
    word Word;
  } DAC1_CTRL_STR;
  
  #define DAC1_CTRL_PDN_MASK            0x01U
  #define DAC1_CTRL_FORMAT_MASK         0x02U
  #define DAC1_CTRL_SYNC_EN_MASK        0x04U
  #define DAC1_CTRL_AUTO_MASK           0x08U
  #define DAC1_CTRL_DOWN_MASK           0x10U
  #define DAC1_CTRL_UP_MASK             0x20U
  #define DAC1_CTRL_FILT_EN_MASK        0x1000U
  #define DAC1_CTRL_FILT_CNT0_MASK      0x2000U
  #define DAC1_CTRL_FILT_CNT1_MASK      0x4000U
  #define DAC1_CTRL_FILT_CNT2_MASK      0x8000U
  #define DAC1_CTRL_FILT_CNT_MASK       0xE000U
  #define DAC1_CTRL_FILT_CNT_BITNUM     0x0DU
  #define DAC1_CTRL                     (*((volatile word *)0x0000F1D0))


  /*** DAC1_DATA - DAC 1 Buffered Data Register; 0x0000F1D1 ***/
  union {
    word Word;
  } DAC1_DATA_STR;
  
  #define DAC1_DATA_DATA0_MASK          0x01U
  #define DAC1_DATA_DATA1_MASK          0x02U
  #define DAC1_DATA_DATA2_MASK          0x04U
  #define DAC1_DATA_DATA3_MASK          0x08U
  #define DAC1_DATA_DATA4_MASK          0x10U
  #define DAC1_DATA_DATA5_MASK          0x20U
  #define DAC1_DATA_DATA6_MASK          0x40U
  #define DAC1_DATA_DATA7_MASK          0x80U
  #define DAC1_DATA_DATA8_MASK          0x0100U
  #define DAC1_DATA_DATA9_MASK          0x0200U
  #define DAC1_DATA_DATA10_MASK         0x0400U
  #define DAC1_DATA_DATA11_MASK         0x0800U
  #define DAC1_DATA_DATA12_MASK         0x1000U
  #define DAC1_DATA_DATA13_MASK         0x2000U
  #define DAC1_DATA_DATA14_MASK         0x4000U
  #define DAC1_DATA_DATA15_MASK         0x8000U
  #define DAC1_DATA                     (*((volatile word *)0x0000F1D1))


  /*** DAC1_STEP - DAC 1 Step Size Register; 0x0000F1D2 ***/
  union {
    word Word;
  } DAC1_STEP_STR;
  
  #define DAC1_STEP_STEP0_MASK          0x01U
  #define DAC1_STEP_STEP1_MASK          0x02U
  #define DAC1_STEP_STEP2_MASK          0x04U
  #define DAC1_STEP_STEP3_MASK          0x08U
  #define DAC1_STEP_STEP4_MASK          0x10U
  #define DAC1_STEP_STEP5_MASK          0x20U
  #define DAC1_STEP_STEP6_MASK          0x40U
  #define DAC1_STEP_STEP7_MASK          0x80U
  #define DAC1_STEP_STEP8_MASK          0x0100U
  #define DAC1_STEP_STEP9_MASK          0x0200U
  #define DAC1_STEP_STEP10_MASK         0x0400U
  #define DAC1_STEP_STEP11_MASK         0x0800U
  #define DAC1_STEP_STEP12_MASK         0x1000U
  #define DAC1_STEP_STEP13_MASK         0x2000U
  #define DAC1_STEP_STEP14_MASK         0x4000U
  #define DAC1_STEP_STEP15_MASK         0x8000U
  #define DAC1_STEP                     (*((volatile word *)0x0000F1D2))


  /*** DAC1_MINVAL - DAC 1 Minimum Value Register; 0x0000F1D3 ***/
  union {
    word Word;
  } DAC1_MINVAL_STR;
  
  #define DAC1_MINVAL_MINVAL0_MASK      0x01U
  #define DAC1_MINVAL_MINVAL1_MASK      0x02U
  #define DAC1_MINVAL_MINVAL2_MASK      0x04U
  #define DAC1_MINVAL_MINVAL3_MASK      0x08U
  #define DAC1_MINVAL_MINVAL4_MASK      0x10U
  #define DAC1_MINVAL_MINVAL5_MASK      0x20U
  #define DAC1_MINVAL_MINVAL6_MASK      0x40U
  #define DAC1_MINVAL_MINVAL7_MASK      0x80U
  #define DAC1_MINVAL_MINVAL8_MASK      0x0100U
  #define DAC1_MINVAL_MINVAL9_MASK      0x0200U
  #define DAC1_MINVAL_MINVAL10_MASK     0x0400U
  #define DAC1_MINVAL_MINVAL11_MASK     0x0800U
  #define DAC1_MINVAL_MINVAL12_MASK     0x1000U
  #define DAC1_MINVAL_MINVAL13_MASK     0x2000U
  #define DAC1_MINVAL_MINVAL14_MASK     0x4000U
  #define DAC1_MINVAL_MINVAL15_MASK     0x8000U
  #define DAC1_MINVAL                   (*((volatile word *)0x0000F1D3))


  /*** DAC1_MAXVAL - DAC 1 Maximum Value Register; 0x0000F1D4 ***/
  union {
    word Word;
  } DAC1_MAXVAL_STR;
  
  #define DAC1_MAXVAL_MAXVAL0_MASK      0x01U
  #define DAC1_MAXVAL_MAXVAL1_MASK      0x02U
  #define DAC1_MAXVAL_MAXVAL2_MASK      0x04U
  #define DAC1_MAXVAL_MAXVAL3_MASK      0x08U
  #define DAC1_MAXVAL_MAXVAL4_MASK      0x10U
  #define DAC1_MAXVAL_MAXVAL5_MASK      0x20U
  #define DAC1_MAXVAL_MAXVAL6_MASK      0x40U
  #define DAC1_MAXVAL_MAXVAL7_MASK      0x80U
  #define DAC1_MAXVAL_MAXVAL8_MASK      0x0100U
  #define DAC1_MAXVAL_MAXVAL9_MASK      0x0200U
  #define DAC1_MAXVAL_MAXVAL10_MASK     0x0400U
  #define DAC1_MAXVAL_MAXVAL11_MASK     0x0800U
  #define DAC1_MAXVAL_MAXVAL12_MASK     0x1000U
  #define DAC1_MAXVAL_MAXVAL13_MASK     0x2000U
  #define DAC1_MAXVAL_MAXVAL14_MASK     0x4000U
  #define DAC1_MAXVAL_MAXVAL15_MASK     0x8000U
  #define DAC1_MAXVAL                   (*((volatile word *)0x0000F1D4))


  word Reserved0[11];                  /* Reserved (unused) registers */

} DAC1_PRPH;

/******************************************
*** Peripheral CMPA
*******************************************/
typedef volatile struct {
  /*** CMPA_CTRL - CMPA Control Register; 0x0000F1E0 ***/
  union {
    word Word;
  } CMPA_CTRL_STR;
  
  #define CMPA_CTRL_PDN_MASK            0x01U
  #define CMPA_CTRL_INV_MASK            0x02U
  #define CMPA_CTRL_PSEL0_MASK          0x04U
  #define CMPA_CTRL_PSEL1_MASK          0x08U
  #define CMPA_CTRL_PSEL2_MASK          0x10U
  #define CMPA_CTRL_NSEL0_MASK          0x40U
  #define CMPA_CTRL_NSEL1_MASK          0x80U
  #define CMPA_CTRL_NSEL2_MASK          0x0100U
  #define CMPA_CTRL_ESEL0_MASK          0x0400U
  #define CMPA_CTRL_ESEL1_MASK          0x0800U
  #define CMPA_CTRL_FCIE_MASK           0x4000U
  #define CMPA_CTRL_RCIE_MASK           0x8000U
  #define CMPA_CTRL_PSEL_MASK           0x1CU
  #define CMPA_CTRL_PSEL_BITNUM         0x02U
  #define CMPA_CTRL_NSEL_MASK           0x01C0U
  #define CMPA_CTRL_NSEL_BITNUM         0x06U
  #define CMPA_CTRL_ESEL_MASK           0x0C00U
  #define CMPA_CTRL_ESEL_BITNUM         0x0AU
  #define CMPA_CTRL                     (*((volatile word *)0x0000F1E0))


  /*** CMPA_STAT - CMPA Status Register; 0x0000F1E1 ***/
  union {
    word Word;
  } CMPA_STAT_STR;
  
  #define CMPA_STAT_COUT_MASK           0x01U
  #define CMPA_STAT_FC_MASK             0x4000U
  #define CMPA_STAT_RC_MASK             0x8000U
  #define CMPA_STAT                     (*((volatile word *)0x0000F1E1))


  /*** CMPA_FILT - CMPA Filter Register; 0x0000F1E2 ***/
  union {
    word Word;
  } CMPA_FILT_STR;
  
  #define CMPA_FILT_FILT_PER0_MASK      0x01U
  #define CMPA_FILT_FILT_PER1_MASK      0x02U
  #define CMPA_FILT_FILT_PER2_MASK      0x04U
  #define CMPA_FILT_FILT_PER3_MASK      0x08U
  #define CMPA_FILT_FILT_PER4_MASK      0x10U
  #define CMPA_FILT_FILT_PER5_MASK      0x20U
  #define CMPA_FILT_FILT_PER6_MASK      0x40U
  #define CMPA_FILT_FILT_PER7_MASK      0x80U
  #define CMPA_FILT_FILT_CNT0_MASK      0x0100U
  #define CMPA_FILT_FILT_CNT1_MASK      0x0200U
  #define CMPA_FILT_FILT_CNT2_MASK      0x0400U
  #define CMPA_FILT_FILT_PER_MASK       0xFFU
  #define CMPA_FILT_FILT_PER_BITNUM     0x00U
  #define CMPA_FILT_FILT_CNT_MASK       0x0700U
  #define CMPA_FILT_FILT_CNT_BITNUM     0x08U
  #define CMPA_FILT                     (*((volatile word *)0x0000F1E2))


  word Reserved0[13];                  /* Reserved (unused) registers */

} CMPA_PRPH;

/******************************************
*** Peripheral CMPB
*******************************************/
typedef volatile struct {
  /*** CMPB_CTRL - CMPB Control Register; 0x0000F1F0 ***/
  union {
    word Word;
  } CMPB_CTRL_STR;
  
  #define CMPB_CTRL_PDN_MASK            0x01U
  #define CMPB_CTRL_INV_MASK            0x02U
  #define CMPB_CTRL_PSEL0_MASK          0x04U
  #define CMPB_CTRL_PSEL1_MASK          0x08U
  #define CMPB_CTRL_PSEL2_MASK          0x10U
  #define CMPB_CTRL_NSEL0_MASK          0x40U
  #define CMPB_CTRL_NSEL1_MASK          0x80U
  #define CMPB_CTRL_NSEL2_MASK          0x0100U
  #define CMPB_CTRL_ESEL0_MASK          0x0400U
  #define CMPB_CTRL_ESEL1_MASK          0x0800U
  #define CMPB_CTRL_FCIE_MASK           0x4000U
  #define CMPB_CTRL_RCIE_MASK           0x8000U
  #define CMPB_CTRL_PSEL_MASK           0x1CU
  #define CMPB_CTRL_PSEL_BITNUM         0x02U
  #define CMPB_CTRL_NSEL_MASK           0x01C0U
  #define CMPB_CTRL_NSEL_BITNUM         0x06U
  #define CMPB_CTRL_ESEL_MASK           0x0C00U
  #define CMPB_CTRL_ESEL_BITNUM         0x0AU
  #define CMPB_CTRL                     (*((volatile word *)0x0000F1F0))


  /*** CMPB_STAT - CMPB Status Register; 0x0000F1F1 ***/
  union {
    word Word;
  } CMPB_STAT_STR;
  
  #define CMPB_STAT_COUT_MASK           0x01U
  #define CMPB_STAT_FC_MASK             0x4000U
  #define CMPB_STAT_RC_MASK             0x8000U
  #define CMPB_STAT                     (*((volatile word *)0x0000F1F1))


  /*** CMPB_FILT - CMPB Filter Register; 0x0000F1F2 ***/
  union {
    word Word;
  } CMPB_FILT_STR;
  
  #define CMPB_FILT_FILT_PER0_MASK      0x01U
  #define CMPB_FILT_FILT_PER1_MASK      0x02U
  #define CMPB_FILT_FILT_PER2_MASK      0x04U
  #define CMPB_FILT_FILT_PER3_MASK      0x08U
  #define CMPB_FILT_FILT_PER4_MASK      0x10U
  #define CMPB_FILT_FILT_PER5_MASK      0x20U
  #define CMPB_FILT_FILT_PER6_MASK      0x40U
  #define CMPB_FILT_FILT_PER7_MASK      0x80U
  #define CMPB_FILT_FILT_CNT0_MASK      0x0100U
  #define CMPB_FILT_FILT_CNT1_MASK      0x0200U
  #define CMPB_FILT_FILT_CNT2_MASK      0x0400U
  #define CMPB_FILT_FILT_PER_MASK       0xFFU
  #define CMPB_FILT_FILT_PER_BITNUM     0x00U
  #define CMPB_FILT_FILT_CNT_MASK       0x0700U
  #define CMPB_FILT_FILT_CNT_BITNUM     0x08U
  #define CMPB_FILT                     (*((volatile word *)0x0000F1F2))


  word Reserved0[13];                  /* Reserved (unused) registers */

} CMPB_PRPH;

/******************************************
*** Peripheral QSCI0
*******************************************/
typedef volatile struct {
  /*** QSCI0_RATE - QSCI 0 Baud Rate Register; 0x0000F200 ***/
  union {
    word Word;
  } QSCI0_RATE_STR;
  
  #define QSCI0_RATE_FRAC_SBR0_MASK     0x01U
  #define QSCI0_RATE_FRAC_SBR1_MASK     0x02U
  #define QSCI0_RATE_FRAC_SBR2_MASK     0x04U
  #define QSCI0_RATE_SBR0_MASK          0x08U
  #define QSCI0_RATE_SBR1_MASK          0x10U
  #define QSCI0_RATE_SBR2_MASK          0x20U
  #define QSCI0_RATE_SBR3_MASK          0x40U
  #define QSCI0_RATE_SBR4_MASK          0x80U
  #define QSCI0_RATE_SBR5_MASK          0x0100U
  #define QSCI0_RATE_SBR6_MASK          0x0200U
  #define QSCI0_RATE_SBR7_MASK          0x0400U
  #define QSCI0_RATE_SBR8_MASK          0x0800U
  #define QSCI0_RATE_SBR9_MASK          0x1000U
  #define QSCI0_RATE_SBR10_MASK         0x2000U
  #define QSCI0_RATE_SBR11_MASK         0x4000U
  #define QSCI0_RATE_SBR12_MASK         0x8000U
  #define QSCI0_RATE_FRAC_SBR_MASK      0x07U
  #define QSCI0_RATE_FRAC_SBR_BITNUM    0x00U
  #define QSCI0_RATE_SBR_MASK           0xFFF8U
  #define QSCI0_RATE_SBR_BITNUM         0x03U
  #define QSCI0_RATE                    (*((volatile word *)0x0000F200))


  /*** QSCI0_CTRL1 - QSCI 0 Control Register; 0x0000F201 ***/
  union {
    word Word;
  } QSCI0_CTRL1_STR;
  
  #define QSCI0_CTRL1_SBK_MASK          0x01U
  #define QSCI0_CTRL1_RWU_MASK          0x02U
  #define QSCI0_CTRL1_RE_MASK           0x04U
  #define QSCI0_CTRL1_TE_MASK           0x08U
  #define QSCI0_CTRL1_REIE_MASK         0x10U
  #define QSCI0_CTRL1_RFIE_MASK         0x20U
  #define QSCI0_CTRL1_TIIE_MASK         0x40U
  #define QSCI0_CTRL1_TEIE_MASK         0x80U
  #define QSCI0_CTRL1_PT_MASK           0x0100U
  #define QSCI0_CTRL1_PE_MASK           0x0200U
  #define QSCI0_CTRL1_POL_MASK          0x0400U
  #define QSCI0_CTRL1_WAKE_MASK         0x0800U
  #define QSCI0_CTRL1_M_MASK            0x1000U
  #define QSCI0_CTRL1_RSRC_MASK         0x2000U
  #define QSCI0_CTRL1_SWAI_MASK         0x4000U
  #define QSCI0_CTRL1_LOOP_MASK         0x8000U
  #define QSCI0_CTRL1                   (*((volatile word *)0x0000F201))


  /*** QSCI0_CTRL2 - QSCI 0 Control Register 2; 0x0000F202 ***/
  union {
    word Word;
  } QSCI0_CTRL2_STR;
  
  #define QSCI0_CTRL2_LIN_MODE_MASK     0x08U
  #define QSCI0_CTRL2_FIFO_EN_MASK      0x20U
  #define QSCI0_CTRL2_RFWM0_MASK        0x40U
  #define QSCI0_CTRL2_RFWM1_MASK        0x80U
  #define QSCI0_CTRL2_RFCNT0_MASK       0x0100U
  #define QSCI0_CTRL2_RFCNT1_MASK       0x0200U
  #define QSCI0_CTRL2_RFCNT2_MASK       0x0400U
  #define QSCI0_CTRL2_TFWM0_MASK        0x0800U
  #define QSCI0_CTRL2_TFWM1_MASK        0x1000U
  #define QSCI0_CTRL2_TFCNT0_MASK       0x2000U
  #define QSCI0_CTRL2_TFCNT1_MASK       0x4000U
  #define QSCI0_CTRL2_TFCNT2_MASK       0x8000U
  #define QSCI0_CTRL2_RFWM_MASK         0xC0U
  #define QSCI0_CTRL2_RFWM_BITNUM       0x06U
  #define QSCI0_CTRL2_RFCNT_MASK        0x0700U
  #define QSCI0_CTRL2_RFCNT_BITNUM      0x08U
  #define QSCI0_CTRL2_TFWM_MASK         0x1800U
  #define QSCI0_CTRL2_TFWM_BITNUM       0x0BU
  #define QSCI0_CTRL2_TFCNT_MASK        0xE000U
  #define QSCI0_CTRL2_TFCNT_BITNUM      0x0DU
  #define QSCI0_CTRL2                   (*((volatile word *)0x0000F202))


  /*** QSCI0_STAT - QSCI 0 Status Register; 0x0000F203 ***/
  union {
    word Word;
  } QSCI0_STAT_STR;
  
  #define QSCI0_STAT_RAF_MASK           0x01U
  #define QSCI0_STAT_LSE_MASK           0x08U
  #define QSCI0_STAT_PF_MASK            0x0100U
  #define QSCI0_STAT_FE_MASK            0x0200U
  #define QSCI0_STAT_NF_MASK            0x0400U
  #define QSCI0_STAT_OR_MASK            0x0800U
  #define QSCI0_STAT_RIDLE_MASK         0x1000U
  #define QSCI0_STAT_RDRF_MASK          0x2000U
  #define QSCI0_STAT_TIDLE_MASK         0x4000U
  #define QSCI0_STAT_TDRE_MASK          0x8000U
  #define QSCI0_STAT                    (*((volatile word *)0x0000F203))


  /*** QSCI0_DATA - QSCI 0 Data Register; 0x0000F204 ***/
  union {
    word Word;
  } QSCI0_DATA_STR;
  
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA0_MASK 0x01U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA1_MASK 0x02U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA2_MASK 0x04U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA3_MASK 0x08U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA4_MASK 0x10U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA5_MASK 0x20U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA6_MASK 0x40U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA7_MASK 0x80U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA8_MASK 0x0100U
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA_MASK 0x01FFU
  #define QSCI0_DATA_RECEIVE_TRANSMIT_DATA_BITNUM 0x00U
  #define QSCI0_DATA                    (*((volatile word *)0x0000F204))


  word Reserved0[11];                  /* Reserved (unused) registers */

} QSCI0_PRPH;

/******************************************
*** Peripheral QSCI1
*******************************************/
typedef volatile struct {
  /*** QSCI1_RATE - QSCI 1 Baud Rate Register; 0x0000F210 ***/
  union {
    word Word;
  } QSCI1_RATE_STR;
  
  #define QSCI1_RATE_FRAC_SBR0_MASK     0x01U
  #define QSCI1_RATE_FRAC_SBR1_MASK     0x02U
  #define QSCI1_RATE_FRAC_SBR2_MASK     0x04U
  #define QSCI1_RATE_SBR0_MASK          0x08U
  #define QSCI1_RATE_SBR1_MASK          0x10U
  #define QSCI1_RATE_SBR2_MASK          0x20U
  #define QSCI1_RATE_SBR3_MASK          0x40U
  #define QSCI1_RATE_SBR4_MASK          0x80U
  #define QSCI1_RATE_SBR5_MASK          0x0100U
  #define QSCI1_RATE_SBR6_MASK          0x0200U
  #define QSCI1_RATE_SBR7_MASK          0x0400U
  #define QSCI1_RATE_SBR8_MASK          0x0800U
  #define QSCI1_RATE_SBR9_MASK          0x1000U
  #define QSCI1_RATE_SBR10_MASK         0x2000U
  #define QSCI1_RATE_SBR11_MASK         0x4000U
  #define QSCI1_RATE_SBR12_MASK         0x8000U
  #define QSCI1_RATE_FRAC_SBR_MASK      0x07U
  #define QSCI1_RATE_FRAC_SBR_BITNUM    0x00U
  #define QSCI1_RATE_SBR_MASK           0xFFF8U
  #define QSCI1_RATE_SBR_BITNUM         0x03U
  #define QSCI1_RATE                    (*((volatile word *)0x0000F210))


  /*** QSCI1_CTRL1 - QSCI 1 Control Register; 0x0000F211 ***/
  union {
    word Word;
  } QSCI1_CTRL1_STR;
  
  #define QSCI1_CTRL1_SBK_MASK          0x01U
  #define QSCI1_CTRL1_RWU_MASK          0x02U
  #define QSCI1_CTRL1_RE_MASK           0x04U
  #define QSCI1_CTRL1_TE_MASK           0x08U
  #define QSCI1_CTRL1_REIE_MASK         0x10U
  #define QSCI1_CTRL1_RFIE_MASK         0x20U
  #define QSCI1_CTRL1_TIIE_MASK         0x40U
  #define QSCI1_CTRL1_TEIE_MASK         0x80U
  #define QSCI1_CTRL1_PT_MASK           0x0100U
  #define QSCI1_CTRL1_PE_MASK           0x0200U
  #define QSCI1_CTRL1_POL_MASK          0x0400U
  #define QSCI1_CTRL1_WAKE_MASK         0x0800U
  #define QSCI1_CTRL1_M_MASK            0x1000U
  #define QSCI1_CTRL1_RSRC_MASK         0x2000U
  #define QSCI1_CTRL1_SWAI_MASK         0x4000U
  #define QSCI1_CTRL1_LOOP_MASK         0x8000U
  #define QSCI1_CTRL1                   (*((volatile word *)0x0000F211))


  /*** QSCI1_CTRL2 - QSCI 1 Control Register 2; 0x0000F212 ***/
  union {
    word Word;
  } QSCI1_CTRL2_STR;
  
  #define QSCI1_CTRL2_LIN_MODE_MASK     0x08U
  #define QSCI1_CTRL2_FIFO_EN_MASK      0x20U
  #define QSCI1_CTRL2_RFWM0_MASK        0x40U
  #define QSCI1_CTRL2_RFWM1_MASK        0x80U
  #define QSCI1_CTRL2_RFCNT0_MASK       0x0100U
  #define QSCI1_CTRL2_RFCNT1_MASK       0x0200U
  #define QSCI1_CTRL2_RFCNT2_MASK       0x0400U
  #define QSCI1_CTRL2_TFWM0_MASK        0x0800U
  #define QSCI1_CTRL2_TFWM1_MASK        0x1000U
  #define QSCI1_CTRL2_TFCNT0_MASK       0x2000U
  #define QSCI1_CTRL2_TFCNT1_MASK       0x4000U
  #define QSCI1_CTRL2_TFCNT2_MASK       0x8000U
  #define QSCI1_CTRL2_RFWM_MASK         0xC0U
  #define QSCI1_CTRL2_RFWM_BITNUM       0x06U
  #define QSCI1_CTRL2_RFCNT_MASK        0x0700U
  #define QSCI1_CTRL2_RFCNT_BITNUM      0x08U
  #define QSCI1_CTRL2_TFWM_MASK         0x1800U
  #define QSCI1_CTRL2_TFWM_BITNUM       0x0BU
  #define QSCI1_CTRL2_TFCNT_MASK        0xE000U
  #define QSCI1_CTRL2_TFCNT_BITNUM      0x0DU
  #define QSCI1_CTRL2                   (*((volatile word *)0x0000F212))


  /*** QSCI1_STAT - QSCI 1 Status Register; 0x0000F213 ***/
  union {
    word Word;
  } QSCI1_STAT_STR;
  
  #define QSCI1_STAT_RAF_MASK           0x01U
  #define QSCI1_STAT_LSE_MASK           0x08U
  #define QSCI1_STAT_PF_MASK            0x0100U
  #define QSCI1_STAT_FE_MASK            0x0200U
  #define QSCI1_STAT_NF_MASK            0x0400U
  #define QSCI1_STAT_OR_MASK            0x0800U
  #define QSCI1_STAT_RIDLE_MASK         0x1000U
  #define QSCI1_STAT_RDRF_MASK          0x2000U
  #define QSCI1_STAT_TIDLE_MASK         0x4000U
  #define QSCI1_STAT_TDRE_MASK          0x8000U
  #define QSCI1_STAT                    (*((volatile word *)0x0000F213))


  /*** QSCI1_DATA - QSCI 1 Data Register; 0x0000F214 ***/
  union {
    word Word;
  } QSCI1_DATA_STR;
  
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA0_MASK 0x01U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA1_MASK 0x02U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA2_MASK 0x04U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA3_MASK 0x08U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA4_MASK 0x10U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA5_MASK 0x20U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA6_MASK 0x40U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA7_MASK 0x80U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA8_MASK 0x0100U
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA_MASK 0x01FFU
  #define QSCI1_DATA_RECEIVE_TRANSMIT_DATA_BITNUM 0x00U
  #define QSCI1_DATA                    (*((volatile word *)0x0000F214))


  word Reserved0[11];                  /* Reserved (unused) registers */

} QSCI1_PRPH;

/******************************************
*** Peripheral QSPI0
*******************************************/
typedef volatile struct {
  /*** QSPI0_SCTRL - QSPI 0 Status and Control Register; 0x0000F220 ***/
  union {
    word Word;
  } QSPI0_SCTRL_STR;
  
  #define QSPI0_SCTRL_SPTE_MASK         0x01U
  #define QSPI0_SCTRL_MODF_MASK         0x02U
  #define QSPI0_SCTRL_OVRF_MASK         0x04U
  #define QSPI0_SCTRL_SPRF_MASK         0x08U
  #define QSPI0_SCTRL_SPTIE_MASK        0x10U
  #define QSPI0_SCTRL_SPE_MASK          0x20U
  #define QSPI0_SCTRL_CPHA_MASK         0x40U
  #define QSPI0_SCTRL_CPOL_MASK         0x80U
  #define QSPI0_SCTRL_SPMSTR_MASK       0x0100U
  #define QSPI0_SCTRL_SPRIE_MASK        0x0200U
  #define QSPI0_SCTRL_MODFEN_MASK       0x0400U
  #define QSPI0_SCTRL_ERRIE_MASK        0x0800U
  #define QSPI0_SCTRL_DSO_MASK          0x1000U
  #define QSPI0_SCTRL_SPR0_MASK         0x2000U
  #define QSPI0_SCTRL_SPR1_MASK         0x4000U
  #define QSPI0_SCTRL_SPR2_MASK         0x8000U
  #define QSPI0_SCTRL_SPR_MASK          0xE000U
  #define QSPI0_SCTRL_SPR_BITNUM        0x0DU
  #define QSPI0_SCTRL                   (*((volatile word *)0x0000F220))


  /*** QSPI0_DSCTRL - QSPI 0 Data Size and Control Register; 0x0000F221 ***/
  union {
    word Word;
  } QSPI0_DSCTRL_STR;
  
  #define QSPI0_DSCTRL_DS0_MASK         0x01U
  #define QSPI0_DSCTRL_DS1_MASK         0x02U
  #define QSPI0_DSCTRL_DS2_MASK         0x04U
  #define QSPI0_DSCTRL_DS3_MASK         0x08U
  #define QSPI0_DSCTRL_SS_OVER_MASK     0x20U
  #define QSPI0_DSCTRL_SS_STRB_MASK     0x40U
  #define QSPI0_DSCTRL_SS_DDR_MASK      0x80U
  #define QSPI0_DSCTRL_SS_AUTO_MASK     0x0100U
  #define QSPI0_DSCTRL_SS_ODM_MASK      0x0200U
  #define QSPI0_DSCTRL_SS_DATA_MASK     0x0400U
  #define QSPI0_DSCTRL_SS_IN_MASK       0x0800U
  #define QSPI0_DSCTRL_BD2X_MASK        0x1000U
  #define QSPI0_DSCTRL_WOM_MASK         0x8000U
  #define QSPI0_DSCTRL_DS_MASK          0x0FU
  #define QSPI0_DSCTRL_DS_BITNUM        0x00U
  #define QSPI0_DSCTRL                  (*((volatile word *)0x0000F221))


  /*** QSPI0_DRCV - QSPI 0 Data Receive Register; 0x0000F222 ***/
  union {
    word Word;
  } QSPI0_DRCV_STR;
  
  #define QSPI0_DRCV                    (*((volatile word *)0x0000F222))


  /*** QSPI0_DXMIT - QSPI 0 Data Transmit Register; 0x0000F223 ***/
  union {
    word Word;
  } QSPI0_DXMIT_STR;
  
  #define QSPI0_DXMIT                   (*((volatile word *)0x0000F223))


  /*** QSPI0_FIFO - QSPI 0 FIFO Control Register; 0x0000F224 ***/
  union {
    word Word;
  } QSPI0_FIFO_STR;
  
  #define QSPI0_FIFO_FIFO_ENA_MASK      0x01U
  #define QSPI0_FIFO_RFWM0_MASK         0x04U
  #define QSPI0_FIFO_RFWM1_MASK         0x08U
  #define QSPI0_FIFO_TFWM0_MASK         0x20U
  #define QSPI0_FIFO_TFWM1_MASK         0x40U
  #define QSPI0_FIFO_RFCNT0_MASK        0x0100U
  #define QSPI0_FIFO_RFCNT1_MASK        0x0200U
  #define QSPI0_FIFO_RFCNT2_MASK        0x0400U
  #define QSPI0_FIFO_TFCNT0_MASK        0x1000U
  #define QSPI0_FIFO_TFCNT1_MASK        0x2000U
  #define QSPI0_FIFO_TFCNT2_MASK        0x4000U
  #define QSPI0_FIFO_RFWM_MASK          0x0CU
  #define QSPI0_FIFO_RFWM_BITNUM        0x02U
  #define QSPI0_FIFO_TFWM_MASK          0x60U
  #define QSPI0_FIFO_TFWM_BITNUM        0x05U
  #define QSPI0_FIFO_RFCNT_MASK         0x0700U
  #define QSPI0_FIFO_RFCNT_BITNUM       0x08U
  #define QSPI0_FIFO_TFCNT_MASK         0x7000U
  #define QSPI0_FIFO_TFCNT_BITNUM       0x0CU
  #define QSPI0_FIFO                    (*((volatile word *)0x0000F224))


  /*** QSPI0_DELAY - QSPI 0 Word Delay Register; 0x0000F225 ***/
  union {
    word Word;
  } QSPI0_DELAY_STR;
  
  #define QSPI0_DELAY_WAIT0_MASK        0x01U
  #define QSPI0_DELAY_WAIT1_MASK        0x02U
  #define QSPI0_DELAY_WAIT2_MASK        0x04U
  #define QSPI0_DELAY_WAIT3_MASK        0x08U
  #define QSPI0_DELAY_WAIT4_MASK        0x10U
  #define QSPI0_DELAY_WAIT5_MASK        0x20U
  #define QSPI0_DELAY_WAIT6_MASK        0x40U
  #define QSPI0_DELAY_WAIT7_MASK        0x80U
  #define QSPI0_DELAY_WAIT8_MASK        0x0100U
  #define QSPI0_DELAY_WAIT9_MASK        0x0200U
  #define QSPI0_DELAY_WAIT10_MASK       0x0400U
  #define QSPI0_DELAY_WAIT11_MASK       0x0800U
  #define QSPI0_DELAY_WAIT12_MASK       0x1000U
  #define QSPI0_DELAY_WAIT_MASK         0x1FFFU
  #define QSPI0_DELAY_WAIT_BITNUM       0x00U
  #define QSPI0_DELAY                   (*((volatile word *)0x0000F225))


  word Reserved0[10];                  /* Reserved (unused) registers */

} QSPI0_PRPH;

/******************************************
*** Peripheral QSPI1
*******************************************/
typedef volatile struct {
  /*** QSPI1_SCTRL - QSPI 1 Status and Control Register; 0x0000F230 ***/
  union {
    word Word;
  } QSPI1_SCTRL_STR;
  
  #define QSPI1_SCTRL_SPTE_MASK         0x01U
  #define QSPI1_SCTRL_MODF_MASK         0x02U
  #define QSPI1_SCTRL_OVRF_MASK         0x04U
  #define QSPI1_SCTRL_SPRF_MASK         0x08U
  #define QSPI1_SCTRL_SPTIE_MASK        0x10U
  #define QSPI1_SCTRL_SPE_MASK          0x20U
  #define QSPI1_SCTRL_CPHA_MASK         0x40U
  #define QSPI1_SCTRL_CPOL_MASK         0x80U
  #define QSPI1_SCTRL_SPMSTR_MASK       0x0100U
  #define QSPI1_SCTRL_SPRIE_MASK        0x0200U
  #define QSPI1_SCTRL_MODFEN_MASK       0x0400U
  #define QSPI1_SCTRL_ERRIE_MASK        0x0800U
  #define QSPI1_SCTRL_DSO_MASK          0x1000U
  #define QSPI1_SCTRL_SPR0_MASK         0x2000U
  #define QSPI1_SCTRL_SPR1_MASK         0x4000U
  #define QSPI1_SCTRL_SPR2_MASK         0x8000U
  #define QSPI1_SCTRL_SPR_MASK          0xE000U
  #define QSPI1_SCTRL_SPR_BITNUM        0x0DU
  #define QSPI1_SCTRL                   (*((volatile word *)0x0000F230))


  /*** QSPI1_DSCTRL - QSPI 1 Data Size and Control Register; 0x0000F231 ***/
  union {
    word Word;
  } QSPI1_DSCTRL_STR;
  
  #define QSPI1_DSCTRL_DS0_MASK         0x01U
  #define QSPI1_DSCTRL_DS1_MASK         0x02U
  #define QSPI1_DSCTRL_DS2_MASK         0x04U
  #define QSPI1_DSCTRL_DS3_MASK         0x08U
  #define QSPI1_DSCTRL_SS_OVER_MASK     0x20U
  #define QSPI1_DSCTRL_SS_STRB_MASK     0x40U
  #define QSPI1_DSCTRL_SS_DDR_MASK      0x80U
  #define QSPI1_DSCTRL_SS_AUTO_MASK     0x0100U
  #define QSPI1_DSCTRL_SS_ODM_MASK      0x0200U
  #define QSPI1_DSCTRL_SS_DATA_MASK     0x0400U
  #define QSPI1_DSCTRL_SS_IN_MASK       0x0800U
  #define QSPI1_DSCTRL_BD2X_MASK        0x1000U
  #define QSPI1_DSCTRL_WOM_MASK         0x8000U
  #define QSPI1_DSCTRL_DS_MASK          0x0FU
  #define QSPI1_DSCTRL_DS_BITNUM        0x00U
  #define QSPI1_DSCTRL                  (*((volatile word *)0x0000F231))


  /*** QSPI1_DRCV - QSPI 1 Data Receive Register; 0x0000F232 ***/
  union {
    word Word;
  } QSPI1_DRCV_STR;
  
  #define QSPI1_DRCV                    (*((volatile word *)0x0000F232))


  /*** QSPI1_DXMIT - QSPI 1 Data Transmit Register; 0x0000F233 ***/
  union {
    word Word;
  } QSPI1_DXMIT_STR;
  
  #define QSPI1_DXMIT                   (*((volatile word *)0x0000F233))


  /*** QSPI1_FIFO - QSPI 1 FIFO Control Register; 0x0000F234 ***/
  union {
    word Word;
  } QSPI1_FIFO_STR;
  
  #define QSPI1_FIFO_FIFO_ENA_MASK      0x01U
  #define QSPI1_FIFO_RFWM0_MASK         0x04U
  #define QSPI1_FIFO_RFWM1_MASK         0x08U
  #define QSPI1_FIFO_TFWM0_MASK         0x20U
  #define QSPI1_FIFO_TFWM1_MASK         0x40U
  #define QSPI1_FIFO_RFCNT0_MASK        0x0100U
  #define QSPI1_FIFO_RFCNT1_MASK        0x0200U
  #define QSPI1_FIFO_RFCNT2_MASK        0x0400U
  #define QSPI1_FIFO_TFCNT0_MASK        0x1000U
  #define QSPI1_FIFO_TFCNT1_MASK        0x2000U
  #define QSPI1_FIFO_TFCNT2_MASK        0x4000U
  #define QSPI1_FIFO_RFWM_MASK          0x0CU
  #define QSPI1_FIFO_RFWM_BITNUM        0x02U
  #define QSPI1_FIFO_TFWM_MASK          0x60U
  #define QSPI1_FIFO_TFWM_BITNUM        0x05U
  #define QSPI1_FIFO_RFCNT_MASK         0x0700U
  #define QSPI1_FIFO_RFCNT_BITNUM       0x08U
  #define QSPI1_FIFO_TFCNT_MASK         0x7000U
  #define QSPI1_FIFO_TFCNT_BITNUM       0x0CU
  #define QSPI1_FIFO                    (*((volatile word *)0x0000F234))


  /*** QSPI1_DELAY - QSPI 1 Word Delay Register; 0x0000F235 ***/
  union {
    word Word;
  } QSPI1_DELAY_STR;
  
  #define QSPI1_DELAY_WAIT0_MASK        0x01U
  #define QSPI1_DELAY_WAIT1_MASK        0x02U
  #define QSPI1_DELAY_WAIT2_MASK        0x04U
  #define QSPI1_DELAY_WAIT3_MASK        0x08U
  #define QSPI1_DELAY_WAIT4_MASK        0x10U
  #define QSPI1_DELAY_WAIT5_MASK        0x20U
  #define QSPI1_DELAY_WAIT6_MASK        0x40U
  #define QSPI1_DELAY_WAIT7_MASK        0x80U
  #define QSPI1_DELAY_WAIT8_MASK        0x0100U
  #define QSPI1_DELAY_WAIT9_MASK        0x0200U
  #define QSPI1_DELAY_WAIT10_MASK       0x0400U
  #define QSPI1_DELAY_WAIT11_MASK       0x0800U
  #define QSPI1_DELAY_WAIT12_MASK       0x1000U
  #define QSPI1_DELAY_WAIT_MASK         0x1FFFU
  #define QSPI1_DELAY_WAIT_BITNUM       0x00U
  #define QSPI1_DELAY                   (*((volatile word *)0x0000F235))


  word Reserved0[74];                  /* Reserved (unused) registers */

} QSPI1_PRPH;

/******************************************
*** Peripheral I2C
*******************************************/
typedef volatile struct {
  /*** I2C_CTRL - I2C Control Register; 0x0000F280 ***/
  union {
    word Word;
  } I2C_CTRL_STR;
  
  #define I2C_CTRL_MSTEN_MASK           0x01U
  #define I2C_CTRL_SPD0_MASK            0x02U
  #define I2C_CTRL_SPD1_MASK            0x04U
  #define I2C_CTRL_ADDRSLV_MASK         0x08U
  #define I2C_CTRL_ADDRMST_MASK         0x10U
  #define I2C_CTRL_RSTEN_MASK           0x20U
  #define I2C_CTRL_SLVDIS_MASK          0x40U
  #define I2C_CTRL_SPD_MASK             0x06U
  #define I2C_CTRL_SPD_BITNUM           0x01U
  #define I2C_CTRL                      (*((volatile word *)0x0000F280))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** I2C_TAR - I2C Target Address Register; 0x0000F282 ***/
  union {
    word Word;
  } I2C_TAR_STR;
  
  #define I2C_TAR_TA0_MASK              0x01U
  #define I2C_TAR_TA1_MASK              0x02U
  #define I2C_TAR_TA2_MASK              0x04U
  #define I2C_TAR_TA3_MASK              0x08U
  #define I2C_TAR_TA4_MASK              0x10U
  #define I2C_TAR_TA5_MASK              0x20U
  #define I2C_TAR_TA6_MASK              0x40U
  #define I2C_TAR_TA7_MASK              0x80U
  #define I2C_TAR_TA8_MASK              0x0100U
  #define I2C_TAR_TA9_MASK              0x0200U
  #define I2C_TAR_GCSTRT_MASK           0x0400U
  #define I2C_TAR_SPCL_MASK             0x0800U
  #define I2C_TAR_ADDRMST_MASK          0x1000U
  #define I2C_TAR_TA_MASK               0x03FFU
  #define I2C_TAR_TA_BITNUM             0x00U
  #define I2C_TAR                       (*((volatile word *)0x0000F282))


  word Reserved1[1];                   /* Reserved (unused) registers */
  
  /*** I2C_SAR - I2C Slave Address Register; 0x0000F284 ***/
  union {
    word Word;
  } I2C_SAR_STR;
  
  #define I2C_SAR_SA0_MASK              0x01U
  #define I2C_SAR_SA1_MASK              0x02U
  #define I2C_SAR_SA2_MASK              0x04U
  #define I2C_SAR_SA3_MASK              0x08U
  #define I2C_SAR_SA4_MASK              0x10U
  #define I2C_SAR_SA5_MASK              0x20U
  #define I2C_SAR_SA6_MASK              0x40U
  #define I2C_SAR_SA7_MASK              0x80U
  #define I2C_SAR_SA8_MASK              0x0100U
  #define I2C_SAR_SA9_MASK              0x0200U
  #define I2C_SAR_SA_MASK               0x03FFU
  #define I2C_SAR_SA_BITNUM             0x00U
  #define I2C_SAR                       (*((volatile word *)0x0000F284))


  word Reserved2[3];                   /* Reserved (unused) registers */
  
  /*** I2C_DATA - I2C Data Buffer and Command Register; 0x0000F288 ***/
  union {
    word Word;
  } I2C_DATA_STR;
  
  #define I2C_DATA_DAT0_MASK            0x01U
  #define I2C_DATA_DAT1_MASK            0x02U
  #define I2C_DATA_DAT2_MASK            0x04U
  #define I2C_DATA_DAT3_MASK            0x08U
  #define I2C_DATA_DAT4_MASK            0x10U
  #define I2C_DATA_DAT5_MASK            0x20U
  #define I2C_DATA_DAT6_MASK            0x40U
  #define I2C_DATA_DAT7_MASK            0x80U
  #define I2C_DATA_CMD_MASK             0x0100U
  #define I2C_DATA_DAT_MASK             0xFFU
  #define I2C_DATA_DAT_BITNUM           0x00U
  #define I2C_DATA                      (*((volatile word *)0x0000F288))


  word Reserved3[1];                   /* Reserved (unused) registers */
  
  /*** I2C_SSHCNT - I2C Standard Speed I2C Clock SCL High Count Register; 0x0000F28A ***/
  union {
    word Word;
  } I2C_SSHCNT_STR;
  
  #define I2C_SSHCNT_SSHCNT0_MASK       0x01U
  #define I2C_SSHCNT_SSHCNT1_MASK       0x02U
  #define I2C_SSHCNT_SSHCNT2_MASK       0x04U
  #define I2C_SSHCNT_SSHCNT3_MASK       0x08U
  #define I2C_SSHCNT_SSHCNT4_MASK       0x10U
  #define I2C_SSHCNT_SSHCNT5_MASK       0x20U
  #define I2C_SSHCNT_SSHCNT6_MASK       0x40U
  #define I2C_SSHCNT_SSHCNT7_MASK       0x80U
  #define I2C_SSHCNT_SSHCNT8_MASK       0x0100U
  #define I2C_SSHCNT_SSHCNT9_MASK       0x0200U
  #define I2C_SSHCNT_SSHCNT10_MASK      0x0400U
  #define I2C_SSHCNT_SSHCNT11_MASK      0x0800U
  #define I2C_SSHCNT_SSHCNT12_MASK      0x1000U
  #define I2C_SSHCNT_SSHCNT13_MASK      0x2000U
  #define I2C_SSHCNT_SSHCNT14_MASK      0x4000U
  #define I2C_SSHCNT_SSHCNT15_MASK      0x8000U
  #define I2C_SSHCNT                    (*((volatile word *)0x0000F28A))


  word Reserved4[1];                   /* Reserved (unused) registers */
  
  /*** I2C_SSLCNT - I2C Standard Speed I2C Clock SCL Low Count Register; 0x0000F28C ***/
  union {
    word Word;
  } I2C_SSLCNT_STR;
  
  #define I2C_SSLCNT_SSLCNT0_MASK       0x01U
  #define I2C_SSLCNT_SSLCNT1_MASK       0x02U
  #define I2C_SSLCNT_SSLCNT2_MASK       0x04U
  #define I2C_SSLCNT_SSLCNT3_MASK       0x08U
  #define I2C_SSLCNT_SSLCNT4_MASK       0x10U
  #define I2C_SSLCNT_SSLCNT5_MASK       0x20U
  #define I2C_SSLCNT_SSLCNT6_MASK       0x40U
  #define I2C_SSLCNT_SSLCNT7_MASK       0x80U
  #define I2C_SSLCNT_SSLCNT8_MASK       0x0100U
  #define I2C_SSLCNT_SSLCNT9_MASK       0x0200U
  #define I2C_SSLCNT_SSLCNT10_MASK      0x0400U
  #define I2C_SSLCNT_SSLCNT11_MASK      0x0800U
  #define I2C_SSLCNT_SSLCNT12_MASK      0x1000U
  #define I2C_SSLCNT_SSLCNT13_MASK      0x2000U
  #define I2C_SSLCNT_SSLCNT14_MASK      0x4000U
  #define I2C_SSLCNT_SSLCNT15_MASK      0x8000U
  #define I2C_SSLCNT                    (*((volatile word *)0x0000F28C))


  word Reserved5[1];                   /* Reserved (unused) registers */
  
  /*** I2C_FSHCNT - I2C Fast Speed I2C Clock SCL High Count Register; 0x0000F28E ***/
  union {
    word Word;
  } I2C_FSHCNT_STR;
  
  #define I2C_FSHCNT_FSHCNT0_MASK       0x01U
  #define I2C_FSHCNT_FSHCNT1_MASK       0x02U
  #define I2C_FSHCNT_FSHCNT2_MASK       0x04U
  #define I2C_FSHCNT_FSHCNT3_MASK       0x08U
  #define I2C_FSHCNT_FSHCNT4_MASK       0x10U
  #define I2C_FSHCNT_FSHCNT5_MASK       0x20U
  #define I2C_FSHCNT_FSHCNT6_MASK       0x40U
  #define I2C_FSHCNT_FSHCNT7_MASK       0x80U
  #define I2C_FSHCNT_FSHCNT8_MASK       0x0100U
  #define I2C_FSHCNT_FSHCNT9_MASK       0x0200U
  #define I2C_FSHCNT_FSHCNT10_MASK      0x0400U
  #define I2C_FSHCNT_FSHCNT11_MASK      0x0800U
  #define I2C_FSHCNT_FSHCNT12_MASK      0x1000U
  #define I2C_FSHCNT_FSHCNT13_MASK      0x2000U
  #define I2C_FSHCNT_FSHCNT14_MASK      0x4000U
  #define I2C_FSHCNT_FSHCNT15_MASK      0x8000U
  #define I2C_FSHCNT                    (*((volatile word *)0x0000F28E))


  word Reserved6[1];                   /* Reserved (unused) registers */
  
  /*** I2C_FSLCNT - I2C Fast Speed I2C Clock SCL Low Count Register; 0x0000F290 ***/
  union {
    word Word;
  } I2C_FSLCNT_STR;
  
  #define I2C_FSLCNT_FSLCNT0_MASK       0x01U
  #define I2C_FSLCNT_FSLCNT1_MASK       0x02U
  #define I2C_FSLCNT_FSLCNT2_MASK       0x04U
  #define I2C_FSLCNT_FSLCNT3_MASK       0x08U
  #define I2C_FSLCNT_FSLCNT4_MASK       0x10U
  #define I2C_FSLCNT_FSLCNT5_MASK       0x20U
  #define I2C_FSLCNT_FSLCNT6_MASK       0x40U
  #define I2C_FSLCNT_FSLCNT7_MASK       0x80U
  #define I2C_FSLCNT_FSLCNT8_MASK       0x0100U
  #define I2C_FSLCNT_FSLCNT9_MASK       0x0200U
  #define I2C_FSLCNT_FSLCNT10_MASK      0x0400U
  #define I2C_FSLCNT_FSLCNT11_MASK      0x0800U
  #define I2C_FSLCNT_FSLCNT12_MASK      0x1000U
  #define I2C_FSLCNT_FSLCNT13_MASK      0x2000U
  #define I2C_FSLCNT_FSLCNT14_MASK      0x4000U
  #define I2C_FSLCNT_FSLCNT15_MASK      0x8000U
  #define I2C_FSLCNT                    (*((volatile word *)0x0000F290))


  word Reserved7[5];                   /* Reserved (unused) registers */
  
  /*** I2C_ISTAT - I2C Interrupt Status Register; 0x0000F296 ***/
  union {
    word Word;
  } I2C_ISTAT_STR;
  
  #define I2C_ISTAT_RXUND_MASK          0x01U
  #define I2C_ISTAT_RXOVR_MASK          0x02U
  #define I2C_ISTAT_RXFULL_MASK         0x04U
  #define I2C_ISTAT_TXOVR_MASK          0x08U
  #define I2C_ISTAT_TXEMPTY_MASK        0x10U
  #define I2C_ISTAT_RDREQ_MASK          0x20U
  #define I2C_ISTAT_TXABRT_MASK         0x40U
  #define I2C_ISTAT_TXDONE_MASK         0x80U
  #define I2C_ISTAT_ACT_MASK            0x0100U
  #define I2C_ISTAT_STPDET_MASK         0x0200U
  #define I2C_ISTAT_STDET_MASK          0x0400U
  #define I2C_ISTAT_GC_MASK             0x0800U
  #define I2C_ISTAT                     (*((volatile word *)0x0000F296))


  word Reserved8[1];                   /* Reserved (unused) registers */
  
  /*** I2C_IENBL - I2C Interrupt Enable Register; 0x0000F298 ***/
  union {
    word Word;
  } I2C_IENBL_STR;
  
  #define I2C_IENBL_RXUND_MASK          0x01U
  #define I2C_IENBL_RXOVR_MASK          0x02U
  #define I2C_IENBL_RXFULL_MASK         0x04U
  #define I2C_IENBL_TXOVR_MASK          0x08U
  #define I2C_IENBL_TXEMPTY_MASK        0x10U
  #define I2C_IENBL_RDREQ_MASK          0x20U
  #define I2C_IENBL_TXABRT_MASK         0x40U
  #define I2C_IENBL_TXDONE_MASK         0x80U
  #define I2C_IENBL_ACT_MASK            0x0100U
  #define I2C_IENBL_STPDET_MASK         0x0200U
  #define I2C_IENBL_STDET_MASK          0x0400U
  #define I2C_IENBL_GC_MASK             0x0800U
  #define I2C_IENBL                     (*((volatile word *)0x0000F298))


  word Reserved9[1];                   /* Reserved (unused) registers */
  
  /*** I2C_RISTAT - I2C Raw Interrupt Status Register; 0x0000F29A ***/
  union {
    word Word;
  } I2C_RISTAT_STR;
  
  #define I2C_RISTAT_RXUND_MASK         0x01U
  #define I2C_RISTAT_RXOVR_MASK         0x02U
  #define I2C_RISTAT_RXFULL_MASK        0x04U
  #define I2C_RISTAT_TXOVR_MASK         0x08U
  #define I2C_RISTAT_TXEMPTY_MASK       0x10U
  #define I2C_RISTAT_RDREQ_MASK         0x20U
  #define I2C_RISTAT_TXABRT_MASK        0x40U
  #define I2C_RISTAT_TXDONE_MASK        0x80U
  #define I2C_RISTAT_ACT_MASK           0x0100U
  #define I2C_RISTAT_STPDET_MASK        0x0200U
  #define I2C_RISTAT_STDET_MASK         0x0400U
  #define I2C_RISTAT_GC_MASK            0x0800U
  #define I2C_RISTAT                    (*((volatile word *)0x0000F29A))


  word Reserved10[1];                  /* Reserved (unused) registers */
  
  /*** I2C_RXFT - I2C Receive FIFO Threshold Register; 0x0000F29C ***/
  union {
    word Word;
  } I2C_RXFT_STR;
  
  #define I2C_RXFT_RXTL0_MASK           0x01U
  #define I2C_RXFT_RXTL1_MASK           0x02U
  #define I2C_RXFT_RXTL_MASK            0x03U
  #define I2C_RXFT_RXTL_BITNUM          0x00U
  #define I2C_RXFT                      (*((volatile word *)0x0000F29C))


  word Reserved11[1];                  /* Reserved (unused) registers */
  
  /*** I2C_TXFT - I2C Transmit FIFO Threshold Register; 0x0000F29E ***/
  union {
    word Word;
  } I2C_TXFT_STR;
  
  #define I2C_TXFT_TXTL0_MASK           0x01U
  #define I2C_TXFT_TXTL1_MASK           0x02U
  #define I2C_TXFT_TXTL_MASK            0x03U
  #define I2C_TXFT_TXTL_BITNUM          0x00U
  #define I2C_TXFT                      (*((volatile word *)0x0000F29E))


  word Reserved12[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRINT - I2C Clear Combined and Individual Interrupt Register; 0x0000F2A0 ***/
  union {
    word Word;
  } I2C_CLRINT_STR;
  
  #define I2C_CLRINT_INT_MASK           0x01U
  #define I2C_CLRINT                    (*((volatile word *)0x0000F2A0))


  word Reserved13[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRRXUND - I2C Clear Receive Under Interrupt Register; 0x0000F2A2 ***/
  union {
    word Word;
  } I2C_CLRRXUND_STR;
  
  #define I2C_CLRRXUND_RXUND_MASK       0x01U
  #define I2C_CLRRXUND                  (*((volatile word *)0x0000F2A2))


  word Reserved14[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRRXOVR - I2C Clear Receive Over Interrupt Register; 0x0000F2A4 ***/
  union {
    word Word;
  } I2C_CLRRXOVR_STR;
  
  #define I2C_CLRRXOVR_RXOVR_MASK       0x01U
  #define I2C_CLRRXOVR                  (*((volatile word *)0x0000F2A4))


  word Reserved15[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRTXOVR - I2C Clear Transmit Over Interrupt Register; 0x0000F2A6 ***/
  union {
    word Word;
  } I2C_CLRTXOVR_STR;
  
  #define I2C_CLRTXOVR_TXOVR_MASK       0x01U
  #define I2C_CLRTXOVR                  (*((volatile word *)0x0000F2A6))


  word Reserved16[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRRDREQ - I2C Clear Read Required Interrupt Register; 0x0000F2A8 ***/
  union {
    word Word;
  } I2C_CLRRDREQ_STR;
  
  #define I2C_CLRRDREQ_RDREQ_MASK       0x01U
  #define I2C_CLRRDREQ                  (*((volatile word *)0x0000F2A8))


  word Reserved17[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRTXABRT - I2C Clear Transmit Abort Interrupt Register; 0x0000F2AA ***/
  union {
    word Word;
  } I2C_CLRTXABRT_STR;
  
  #define I2C_CLRTXABRT_TXABRT_MASK     0x01U
  #define I2C_CLRTXABRT                 (*((volatile word *)0x0000F2AA))


  word Reserved18[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRTXDONE - I2C Clear Transmit Done Interrupt Register; 0x0000F2AC ***/
  union {
    word Word;
  } I2C_CLRTXDONE_STR;
  
  #define I2C_CLRTXDONE_TXDONE_MASK     0x01U
  #define I2C_CLRTXDONE                 (*((volatile word *)0x0000F2AC))


  word Reserved19[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRACT - I2C Clear Activity Interrupt Register; 0x0000F2AE ***/
  union {
    word Word;
  } I2C_CLRACT_STR;
  
  #define I2C_CLRACT_ACT_MASK           0x01U
  #define I2C_CLRACT                    (*((volatile word *)0x0000F2AE))


  word Reserved20[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRSTPDET - I2C Clear Stop Detect Interrupt Register; 0x0000F2B0 ***/
  union {
    word Word;
  } I2C_CLRSTPDET_STR;
  
  #define I2C_CLRSTPDET_STPDET_MASK     0x01U
  #define I2C_CLRSTPDET                 (*((volatile word *)0x0000F2B0))


  word Reserved21[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRSTDET - I2C Clear Start Detect Interrupt Register; 0x0000F2B2 ***/
  union {
    word Word;
  } I2C_CLRSTDET_STR;
  
  #define I2C_CLRSTDET_STDET_MASK       0x01U
  #define I2C_CLRSTDET                  (*((volatile word *)0x0000F2B2))


  word Reserved22[1];                  /* Reserved (unused) registers */
  
  /*** I2C_CLRGC - I2C Clear General Call Interrupt Register; 0x0000F2B4 ***/
  union {
    word Word;
  } I2C_CLRGC_STR;
  
  #define I2C_CLRGC_GC_MASK             0x01U
  #define I2C_CLRGC                     (*((volatile word *)0x0000F2B4))


  word Reserved23[1];                  /* Reserved (unused) registers */
  
  /*** I2C_ENBL - I2C Enable Register; 0x0000F2B6 ***/
  union {
    word Word;
  } I2C_ENBL_STR;
  
  #define I2C_ENBL_EN_MASK              0x01U
  #define I2C_ENBL                      (*((volatile word *)0x0000F2B6))


  word Reserved24[1];                  /* Reserved (unused) registers */
  
  /*** I2C_STAT - I2C Status Register; 0x0000F2B8 ***/
  union {
    word Word;
  } I2C_STAT_STR;
  
  #define I2C_STAT_ACT_MASK             0x01U
  #define I2C_STAT_TFNF_MASK            0x02U
  #define I2C_STAT_TFE_MASK             0x04U
  #define I2C_STAT_RFNE_MASK            0x08U
  #define I2C_STAT_RFF_MASK             0x10U
  #define I2C_STAT_MSTACT_MASK          0x20U
  #define I2C_STAT_SLVACT_MASK          0x40U
  #define I2C_STAT                      (*((volatile word *)0x0000F2B8))


  word Reserved25[1];                  /* Reserved (unused) registers */
  
  /*** I2C_TXFLR - I2C Transmit FIFO Level Register; 0x0000F2BA ***/
  union {
    word Word;
  } I2C_TXFLR_STR;
  
  #define I2C_TXFLR_TXFL0_MASK          0x01U
  #define I2C_TXFLR_TXFL1_MASK          0x02U
  #define I2C_TXFLR_TXFL2_MASK          0x04U
  #define I2C_TXFLR_TXFL_MASK           0x07U
  #define I2C_TXFLR_TXFL_BITNUM         0x00U
  #define I2C_TXFLR                     (*((volatile word *)0x0000F2BA))


  word Reserved26[1];                  /* Reserved (unused) registers */
  
  /*** I2C_RXFLR - I2C Receive FIFO Level Register; 0x0000F2BC ***/
  union {
    word Word;
  } I2C_RXFLR_STR;
  
  #define I2C_RXFLR_RXFL0_MASK          0x01U
  #define I2C_RXFLR_RXFL1_MASK          0x02U
  #define I2C_RXFLR_RXFL2_MASK          0x04U
  #define I2C_RXFLR_RXFL_MASK           0x07U
  #define I2C_RXFLR_RXFL_BITNUM         0x00U
  #define I2C_RXFLR                     (*((volatile word *)0x0000F2BC))


  word Reserved27[3];                  /* Reserved (unused) registers */
  
  /*** I2C_TXABRTSRC - I2C Transmit Abort Source Register; 0x0000F2C0 ***/
  union {
    word Word;
  } I2C_TXABRTSRC_STR;
  
  #define I2C_TXABRTSRC_AD7NACK_MASK    0x01U
  #define I2C_TXABRTSRC_AD1NACK_MASK    0x02U
  #define I2C_TXABRTSRC_AD2NACK_MASK    0x04U
  #define I2C_TXABRTSRC_TDNACK_MASK     0x08U
  #define I2C_TXABRTSRC_GCNACK_MASK     0x10U
  #define I2C_TXABRTSRC_GCREAD_MASK     0x20U
  #define I2C_TXABRTSRC_SACKDET_MASK    0x80U
  #define I2C_TXABRTSRC_SNORST_MASK     0x0200U
  #define I2C_TXABRTSRC_RNORST_MASK     0x0400U
  #define I2C_TXABRTSRC_MSTDIS_MASK     0x0800U
  #define I2C_TXABRTSRC_AL_MASK         0x1000U
  #define I2C_TXABRTSRC_SLVFLSH_MASK    0x2000U
  #define I2C_TXABRTSRC_SLVAL_MASK      0x4000U
  #define I2C_TXABRTSRC_SLVRD_MASK      0x8000U
  #define I2C_TXABRTSRC                 (*((volatile word *)0x0000F2C0))


  word Reserved28[319];                /* Reserved (unused) registers */

} I2C_PRPH;

/******************************************
*** Peripheral HFM
*******************************************/
typedef volatile struct {
  /*** FM_CLKDIV - Flash Memory Clock Divider Register; 0x0000F400 ***/
  union {
    word Word;
  } FM_CLKDIV_STR;
  
  #define FM_CLKDIV_DIV0_MASK           0x01U
  #define FM_CLKDIV_DIV1_MASK           0x02U
  #define FM_CLKDIV_DIV2_MASK           0x04U
  #define FM_CLKDIV_DIV3_MASK           0x08U
  #define FM_CLKDIV_DIV4_MASK           0x10U
  #define FM_CLKDIV_DIV5_MASK           0x20U
  #define FM_CLKDIV_PRDIV8_MASK         0x40U
  #define FM_CLKDIV_DIVLD_MASK          0x80U
  #define FM_CLKDIV_DIV_MASK            0x3FU
  #define FM_CLKDIV_DIV_BITNUM          0x00U
  #define FM_CLKDIV                     (*((volatile word *)0x0000F400))


  /*** FM_CNFG - Flash Memory Configuration Register; 0x0000F401 ***/
  union {
    word Word;
  } FM_CNFG_STR;
  
  #define FM_CNFG_KEYACC_MASK           0x20U
  #define FM_CNFG_CCIE_MASK             0x40U
  #define FM_CNFG_CBEIE_MASK            0x80U
  #define FM_CNFG_AEIE_MASK             0x0100U
  #define FM_CNFG_LOCK_MASK             0x0400U
  #define FM_CNFG                       (*((volatile word *)0x0000F401))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** FM_SECHI - Flash Memory Security High Half Register; 0x0000F403 ***/
  union {
    word Word;
  } FM_SECHI_STR;
  
  #define FM_SECHI_SECSTAT_MASK         0x4000U
  #define FM_SECHI_KEYEN_MASK           0x8000U
  #define FM_SECHI                      (*((volatile word *)0x0000F403))


  /*** FM_SECLO - Flash Memory Security Low Half Register; 0x0000F404 ***/
  union {
    word Word;
  } FM_SECLO_STR;
  
  #define FM_SECLO_SEC0_MASK            0x01U
  #define FM_SECLO_SEC1_MASK            0x02U
  #define FM_SECLO_SEC_MASK             0x03U
  #define FM_SECLO_SEC_BITNUM           0x00U
  #define FM_SECLO                      (*((volatile word *)0x0000F404))


  word Reserved1[11];                  /* Reserved (unused) registers */
  
  /*** FM_PROT - Flash Memory Protection Register; 0x0000F410 ***/
  union {
    word Word;
  } FM_PROT_STR;
  
  #define FM_PROT_PROTECT0_MASK         0x01U
  #define FM_PROT_PROTECT1_MASK         0x02U
  #define FM_PROT_PROTECT2_MASK         0x04U
  #define FM_PROT_PROTECT3_MASK         0x08U
  #define FM_PROT_PROTECT4_MASK         0x10U
  #define FM_PROT_PROTECT5_MASK         0x20U
  #define FM_PROT_PROTECT6_MASK         0x40U
  #define FM_PROT_PROTECT7_MASK         0x80U
  #define FM_PROT_PROTECT8_MASK         0x0100U
  #define FM_PROT_PROTECT9_MASK         0x0200U
  #define FM_PROT_PROTECT10_MASK        0x0400U
  #define FM_PROT_PROTECT11_MASK        0x0800U
  #define FM_PROT_PROTECT12_MASK        0x1000U
  #define FM_PROT_PROTECT13_MASK        0x2000U
  #define FM_PROT_PROTECT14_MASK        0x4000U
  #define FM_PROT_PROTECT15_MASK        0x8000U
  #define FM_PROT                       (*((volatile word *)0x0000F410))


  word Reserved2[2];                   /* Reserved (unused) registers */
  
  /*** FM_USTAT - Flash Memory User Status Register; 0x0000F413 ***/
  union {
    word Word;
  } FM_USTAT_STR;
  
  #define FM_USTAT_BLANK_MASK           0x04U
  #define FM_USTAT_ACCERR_MASK          0x10U
  #define FM_USTAT_PVIOL_MASK           0x20U
  #define FM_USTAT_CCIF_MASK            0x40U
  #define FM_USTAT_CBEIF_MASK           0x80U
  #define FM_USTAT                      (*((volatile word *)0x0000F413))


  /*** FM_CMD - Flash Memory Command and Buffer Register; 0x0000F414 ***/
  union {
    word Word;
  } FM_CMD_STR;
  
  #define FM_CMD_CMD0_MASK              0x01U
  #define FM_CMD_CMD1_MASK              0x02U
  #define FM_CMD_CMD2_MASK              0x04U
  #define FM_CMD_CMD3_MASK              0x08U
  #define FM_CMD_CMD4_MASK              0x10U
  #define FM_CMD_CMD5_MASK              0x20U
  #define FM_CMD_CMD6_MASK              0x40U
  #define FM_CMD_CMD_MASK               0x7FU
  #define FM_CMD_CMD_BITNUM             0x00U
  #define FM_CMD                        (*((volatile word *)0x0000F414))


  word Reserved3[3];                   /* Reserved (unused) registers */
  
  /*** FM_DATA - Flash Memory Data Register; 0x0000F418 ***/
  union {
    word Word;
  } FM_DATA_STR;
  
  #define FM_DATA_FMDATA0_MASK          0x01U
  #define FM_DATA_FMDATA1_MASK          0x02U
  #define FM_DATA_FMDATA2_MASK          0x04U
  #define FM_DATA_FMDATA3_MASK          0x08U
  #define FM_DATA_FMDATA4_MASK          0x10U
  #define FM_DATA_FMDATA5_MASK          0x20U
  #define FM_DATA_FMDATA6_MASK          0x40U
  #define FM_DATA_FMDATA7_MASK          0x80U
  #define FM_DATA_FMDATA8_MASK          0x0100U
  #define FM_DATA_FMDATA9_MASK          0x0200U
  #define FM_DATA_FMDATA10_MASK         0x0400U
  #define FM_DATA_FMDATA11_MASK         0x0800U
  #define FM_DATA_FMDATA12_MASK         0x1000U
  #define FM_DATA_FMDATA13_MASK         0x2000U
  #define FM_DATA_FMDATA14_MASK         0x4000U
  #define FM_DATA_FMDATA15_MASK         0x8000U
  #define FM_DATA                       (*((volatile word *)0x0000F418))


  word Reserved4[2];                   /* Reserved (unused) registers */
  
  /*** FM_OPT1 - Flash Memory Optional Data Register 1; 0x0000F41B ***/
  union {
    word Word;
  } FM_OPT1_STR;
  
  #define FM_OPT1_TRIM0_MASK            0x01U
  #define FM_OPT1_TRIM1_MASK            0x02U
  #define FM_OPT1_TRIM2_MASK            0x04U
  #define FM_OPT1_TRIM3_MASK            0x08U
  #define FM_OPT1_TRIM4_MASK            0x10U
  #define FM_OPT1_TRIM5_MASK            0x20U
  #define FM_OPT1_TRIM6_MASK            0x40U
  #define FM_OPT1_TRIM7_MASK            0x80U
  #define FM_OPT1_TRIM8_MASK            0x0100U
  #define FM_OPT1_TRIM9_MASK            0x0200U
  #define FM_OPT1_TRIM_MASK             0x03FFU
  #define FM_OPT1_TRIM_BITNUM           0x00U
  #define FM_OPT1                       (*((volatile word *)0x0000F41B))


  word Reserved5[1];                   /* Reserved (unused) registers */
  
  /*** FM_TSTSIG - Flash Memory Test Array Signature Register; 0x0000F41D ***/
  union {
    word Word;
  } FM_TSTSIG_STR;
  
  #define FM_TSTSIG_TST_AREA_SIG0_MASK  0x01U
  #define FM_TSTSIG_TST_AREA_SIG1_MASK  0x02U
  #define FM_TSTSIG_TST_AREA_SIG2_MASK  0x04U
  #define FM_TSTSIG_TST_AREA_SIG3_MASK  0x08U
  #define FM_TSTSIG_TST_AREA_SIG4_MASK  0x10U
  #define FM_TSTSIG_TST_AREA_SIG5_MASK  0x20U
  #define FM_TSTSIG_TST_AREA_SIG6_MASK  0x40U
  #define FM_TSTSIG_TST_AREA_SIG7_MASK  0x80U
  #define FM_TSTSIG_TST_AREA_SIG8_MASK  0x0100U
  #define FM_TSTSIG_TST_AREA_SIG9_MASK  0x0200U
  #define FM_TSTSIG_TST_AREA_SIG10_MASK 0x0400U
  #define FM_TSTSIG_TST_AREA_SIG11_MASK 0x0800U
  #define FM_TSTSIG_TST_AREA_SIG12_MASK 0x1000U
  #define FM_TSTSIG_TST_AREA_SIG13_MASK 0x2000U
  #define FM_TSTSIG_TST_AREA_SIG14_MASK 0x4000U
  #define FM_TSTSIG_TST_AREA_SIG15_MASK 0x8000U
  #define FM_TSTSIG                     (*((volatile word *)0x0000F41D))


  word Reserved6[994];                 /* Reserved (unused) registers */

} HFM_PRPH;

/******************************************
*** Peripheral MSCAN
*******************************************/
typedef volatile struct {
  /*** MSCAN_CTRL0 - MSCAN Control Register 0; 0x0000F800 ***/
  union {
    word Word;
  } MSCAN_CTRL0_STR;
  
  #define MSCAN_CTRL0_INITRQ_MASK       0x01U
  #define MSCAN_CTRL0_SLPRQ_MASK        0x02U
  #define MSCAN_CTRL0_WUPE_MASK         0x04U
  #define MSCAN_CTRL0_TIME_MASK         0x08U
  #define MSCAN_CTRL0_SYNCH_MASK        0x10U
  #define MSCAN_CTRL0_CSWAI_MASK        0x20U
  #define MSCAN_CTRL0_RXACT_MASK        0x40U
  #define MSCAN_CTRL0_RXFRM_MASK        0x80U
  #define MSCAN_CTRL0                   (*((volatile word *)0x0000F800))


  /*** MSCAN_CTRL1 - MSCAN Control Register 1; 0x0000F801 ***/
  union {
    word Word;
  } MSCAN_CTRL1_STR;
  
  #define MSCAN_CTRL1_INITAK_MASK       0x01U
  #define MSCAN_CTRL1_SLPAK_MASK        0x02U
  #define MSCAN_CTRL1_WUPM_MASK         0x04U
  #define MSCAN_CTRL1_BORM_MASK         0x08U
  #define MSCAN_CTRL1_LISTEN_MASK       0x10U
  #define MSCAN_CTRL1_LOOPB_MASK        0x20U
  #define MSCAN_CTRL1_CLKSRC_MASK       0x40U
  #define MSCAN_CTRL1_CANE_MASK         0x80U
  #define MSCAN_CTRL1                   (*((volatile word *)0x0000F801))


  /*** MSCAN_BTR0 - MSCAN Bus Timing Register 0; 0x0000F802 ***/
  union {
    word Word;
  } MSCAN_BTR0_STR;
  
  #define MSCAN_BTR0_BRP0_MASK          0x01U
  #define MSCAN_BTR0_BRP1_MASK          0x02U
  #define MSCAN_BTR0_BRP2_MASK          0x04U
  #define MSCAN_BTR0_BRP3_MASK          0x08U
  #define MSCAN_BTR0_BRP4_MASK          0x10U
  #define MSCAN_BTR0_BRP5_MASK          0x20U
  #define MSCAN_BTR0_SJW0_MASK          0x40U
  #define MSCAN_BTR0_SJW1_MASK          0x80U
  #define MSCAN_BTR0_BRP_MASK           0x3FU
  #define MSCAN_BTR0_BRP_BITNUM         0x00U
  #define MSCAN_BTR0_SJW_MASK           0xC0U
  #define MSCAN_BTR0_SJW_BITNUM         0x06U
  #define MSCAN_BTR0                    (*((volatile word *)0x0000F802))


  /*** MSCAN_BTR1 - MSCAN Bus Timing Register 1; 0x0000F803 ***/
  union {
    word Word;
  } MSCAN_BTR1_STR;
  
  #define MSCAN_BTR1_TSEG10_MASK        0x01U
  #define MSCAN_BTR1_TSEG11_MASK        0x02U
  #define MSCAN_BTR1_TSEG12_MASK        0x04U
  #define MSCAN_BTR1_TSEG13_MASK        0x08U
  #define MSCAN_BTR1_TSEG20_MASK        0x10U
  #define MSCAN_BTR1_TSEG21_MASK        0x20U
  #define MSCAN_BTR1_TSEG22_MASK        0x40U
  #define MSCAN_BTR1_SAMP_MASK          0x80U
  #define MSCAN_BTR1_TSEG1_MASK         0x0FU
  #define MSCAN_BTR1_TSEG1_BITNUM       0x00U
  #define MSCAN_BTR1_TSEG2_MASK         0x70U
  #define MSCAN_BTR1_TSEG2_BITNUM       0x04U
  #define MSCAN_BTR1                    (*((volatile word *)0x0000F803))


  /*** MSCAN_RFLG - MSCAN Receiver Flag Register; 0x0000F804 ***/
  union {
    word Word;
  } MSCAN_RFLG_STR;
  
  #define MSCAN_RFLG_RXF_MASK           0x01U
  #define MSCAN_RFLG_OVRIF_MASK         0x02U
  #define MSCAN_RFLG_TSTAT0_MASK        0x04U
  #define MSCAN_RFLG_TSTAT1_MASK        0x08U
  #define MSCAN_RFLG_RSTAT0_MASK        0x10U
  #define MSCAN_RFLG_RSTAT1_MASK        0x20U
  #define MSCAN_RFLG_CSCIF_MASK         0x40U
  #define MSCAN_RFLG_WUPIF_MASK         0x80U
  #define MSCAN_RFLG_TSTAT_MASK         0x0CU
  #define MSCAN_RFLG_TSTAT_BITNUM       0x02U
  #define MSCAN_RFLG_RSTAT_MASK         0x30U
  #define MSCAN_RFLG_RSTAT_BITNUM       0x04U
  #define MSCAN_RFLG                    (*((volatile word *)0x0000F804))


  /*** MSCAN_RIER - MSCAN Receiver Interrupt Enable Register; 0x0000F805 ***/
  union {
    word Word;
  } MSCAN_RIER_STR;
  
  #define MSCAN_RIER_RXFIE_MASK         0x01U
  #define MSCAN_RIER_OVRIE_MASK         0x02U
  #define MSCAN_RIER_TSTATE0_MASK       0x04U
  #define MSCAN_RIER_TSTATE1_MASK       0x08U
  #define MSCAN_RIER_RSTATE0_MASK       0x10U
  #define MSCAN_RIER_RSTATE1_MASK       0x20U
  #define MSCAN_RIER_CSCIE_MASK         0x40U
  #define MSCAN_RIER_WUPIE_MASK         0x80U
  #define MSCAN_RIER_TSTATE_MASK        0x0CU
  #define MSCAN_RIER_TSTATE_BITNUM      0x02U
  #define MSCAN_RIER_RSTATE_MASK        0x30U
  #define MSCAN_RIER_RSTATE_BITNUM      0x04U
  #define MSCAN_RIER                    (*((volatile word *)0x0000F805))


  /*** MSCAN_TFLG - MSCAN Transmitter Flag Register; 0x0000F806 ***/
  union {
    word Word;
  } MSCAN_TFLG_STR;
  
  #define MSCAN_TFLG_TXE0_MASK          0x01U
  #define MSCAN_TFLG_TXE1_MASK          0x02U
  #define MSCAN_TFLG_TXE2_MASK          0x04U
  #define MSCAN_TFLG_TXE_MASK           0x07U
  #define MSCAN_TFLG_TXE_BITNUM         0x00U
  #define MSCAN_TFLG                    (*((volatile word *)0x0000F806))


  /*** MSCAN_TIER - MSCAN Transmitter Interrupt Enable Register; 0x0000F807 ***/
  union {
    word Word;
  } MSCAN_TIER_STR;
  
  #define MSCAN_TIER_TXEIE0_MASK        0x01U
  #define MSCAN_TIER_TXEIE1_MASK        0x02U
  #define MSCAN_TIER_TXEIE2_MASK        0x04U
  #define MSCAN_TIER_TXEIE_MASK         0x07U
  #define MSCAN_TIER_TXEIE_BITNUM       0x00U
  #define MSCAN_TIER                    (*((volatile word *)0x0000F807))


  /*** MSCAN_TARQ - MSCAN Transmitter Message Abort Request Register; 0x0000F808 ***/
  union {
    word Word;
  } MSCAN_TARQ_STR;
  
  #define MSCAN_TARQ_ABTRQ0_MASK        0x01U
  #define MSCAN_TARQ_ABTRQ1_MASK        0x02U
  #define MSCAN_TARQ_ABTRQ2_MASK        0x04U
  #define MSCAN_TARQ_ABTRQ_MASK         0x07U
  #define MSCAN_TARQ_ABTRQ_BITNUM       0x00U
  #define MSCAN_TARQ                    (*((volatile word *)0x0000F808))


  /*** MSCAN_TAAK - MSCAN Transmitter Message Abort Acknowledge Register; 0x0000F809 ***/
  union {
    word Word;
  } MSCAN_TAAK_STR;
  
  #define MSCAN_TAAK_ABTAK0_MASK        0x01U
  #define MSCAN_TAAK_ABTAK1_MASK        0x02U
  #define MSCAN_TAAK_ABTAK2_MASK        0x04U
  #define MSCAN_TAAK_ABTAK_MASK         0x07U
  #define MSCAN_TAAK_ABTAK_BITNUM       0x00U
  #define MSCAN_TAAK                    (*((volatile word *)0x0000F809))


  /*** MSCAN_TBSEL - MSCAN Transmitter Buffer Selection Register; 0x0000F80A ***/
  union {
    word Word;
  } MSCAN_TBSEL_STR;
  
  #define MSCAN_TBSEL_TX0_MASK          0x01U
  #define MSCAN_TBSEL_TX1_MASK          0x02U
  #define MSCAN_TBSEL_TX2_MASK          0x04U
  #define MSCAN_TBSEL_TX_MASK           0x07U
  #define MSCAN_TBSEL_TX_BITNUM         0x00U
  #define MSCAN_TBSEL                   (*((volatile word *)0x0000F80A))


  /*** MSCAN_IDAC - MSCAN Identifier Acceptance Control Register; 0x0000F80B ***/
  union {
    word Word;
  } MSCAN_IDAC_STR;
  
  #define MSCAN_IDAC_IDHIT0_MASK        0x01U
  #define MSCAN_IDAC_IDHIT1_MASK        0x02U
  #define MSCAN_IDAC_IDHIT2_MASK        0x04U
  #define MSCAN_IDAC_IDAM0_MASK         0x10U
  #define MSCAN_IDAC_IDAM1_MASK         0x20U
  #define MSCAN_IDAC_IDHIT_MASK         0x07U
  #define MSCAN_IDAC_IDHIT_BITNUM       0x00U
  #define MSCAN_IDAC_IDAM_MASK          0x30U
  #define MSCAN_IDAC_IDAM_BITNUM        0x04U
  #define MSCAN_IDAC                    (*((volatile word *)0x0000F80B))


  word Reserved0[1];                   /* Reserved (unused) registers */
  
  /*** MSCAN_MISC - MSCAN Miscellaneous Register; 0x0000F80D ***/
  union {
    word Word;
  } MSCAN_MISC_STR;
  
  #define MSCAN_MISC_BOHOLD_MASK        0x01U
  #define MSCAN_MISC                    (*((volatile word *)0x0000F80D))


  /*** MSCAN_RXERR - MSCAN Receive Error Counter Register; 0x0000F80E ***/
  union {
    word Word;
  } MSCAN_RXERR_STR;
  
  #define MSCAN_RXERR_RXERR0_MASK       0x01U
  #define MSCAN_RXERR_RXERR1_MASK       0x02U
  #define MSCAN_RXERR_RXERR2_MASK       0x04U
  #define MSCAN_RXERR_RXERR3_MASK       0x08U
  #define MSCAN_RXERR_RXERR4_MASK       0x10U
  #define MSCAN_RXERR_RXERR5_MASK       0x20U
  #define MSCAN_RXERR_RXERR6_MASK       0x40U
  #define MSCAN_RXERR_RXERR7_MASK       0x80U
  #define MSCAN_RXERR_RXERR_MASK        0xFFU
  #define MSCAN_RXERR_RXERR_BITNUM      0x00U
  #define MSCAN_RXERR                   (*((volatile word *)0x0000F80E))


  /*** MSCAN_TXERR - MSCAN Transmit Error Counter Register; 0x0000F80F ***/
  union {
    word Word;
  } MSCAN_TXERR_STR;
  
  #define MSCAN_TXERR_TXERR0_MASK       0x01U
  #define MSCAN_TXERR_TXERR1_MASK       0x02U
  #define MSCAN_TXERR_TXERR2_MASK       0x04U
  #define MSCAN_TXERR_TXERR3_MASK       0x08U
  #define MSCAN_TXERR_TXERR4_MASK       0x10U
  #define MSCAN_TXERR_TXERR5_MASK       0x20U
  #define MSCAN_TXERR_TXERR6_MASK       0x40U
  #define MSCAN_TXERR_TXERR7_MASK       0x80U
  #define MSCAN_TXERR_TXERR_MASK        0xFFU
  #define MSCAN_TXERR_TXERR_BITNUM      0x00U
  #define MSCAN_TXERR                   (*((volatile word *)0x0000F80F))


  /*** MSCAN_IDAR0 - MSCAN Identifier Acceptance Register 0; 0x0000F810 ***/
  union {
    word Word;
  } MSCAN_IDAR0_STR;
  
  #define MSCAN_IDAR0_AC0_MASK          0x01U
  #define MSCAN_IDAR0_AC1_MASK          0x02U
  #define MSCAN_IDAR0_AC2_MASK          0x04U
  #define MSCAN_IDAR0_AC3_MASK          0x08U
  #define MSCAN_IDAR0_AC4_MASK          0x10U
  #define MSCAN_IDAR0_AC5_MASK          0x20U
  #define MSCAN_IDAR0_AC6_MASK          0x40U
  #define MSCAN_IDAR0_AC7_MASK          0x80U
  #define MSCAN_IDAR0_AC_MASK           0xFFU
  #define MSCAN_IDAR0_AC_BITNUM         0x00U
  #define MSCAN_IDAR0                   (*((volatile word *)0x0000F810))


  /*** MSCAN_IDAR1 - MSCAN Identifier Acceptance Register 1; 0x0000F811 ***/
  union {
    word Word;
  } MSCAN_IDAR1_STR;
  
  #define MSCAN_IDAR1_AC0_MASK          0x01U
  #define MSCAN_IDAR1_AC1_MASK          0x02U
  #define MSCAN_IDAR1_AC2_MASK          0x04U
  #define MSCAN_IDAR1_AC3_MASK          0x08U
  #define MSCAN_IDAR1_AC4_MASK          0x10U
  #define MSCAN_IDAR1_AC5_MASK          0x20U
  #define MSCAN_IDAR1_AC6_MASK          0x40U
  #define MSCAN_IDAR1_AC7_MASK          0x80U
  #define MSCAN_IDAR1_AC_MASK           0xFFU
  #define MSCAN_IDAR1_AC_BITNUM         0x00U
  #define MSCAN_IDAR1                   (*((volatile word *)0x0000F811))


  /*** MSCAN_IDAR2 - MSCAN Identifier Acceptance Register 2; 0x0000F812 ***/
  union {
    word Word;
  } MSCAN_IDAR2_STR;
  
  #define MSCAN_IDAR2_AC0_MASK          0x01U
  #define MSCAN_IDAR2_AC1_MASK          0x02U
  #define MSCAN_IDAR2_AC2_MASK          0x04U
  #define MSCAN_IDAR2_AC3_MASK          0x08U
  #define MSCAN_IDAR2_AC4_MASK          0x10U
  #define MSCAN_IDAR2_AC5_MASK          0x20U
  #define MSCAN_IDAR2_AC6_MASK          0x40U
  #define MSCAN_IDAR2_AC7_MASK          0x80U
  #define MSCAN_IDAR2_AC_MASK           0xFFU
  #define MSCAN_IDAR2_AC_BITNUM         0x00U
  #define MSCAN_IDAR2                   (*((volatile word *)0x0000F812))


  /*** MSCAN_IDAR3 - MSCAN Identifier Acceptance Register 3; 0x0000F813 ***/
  union {
    word Word;
  } MSCAN_IDAR3_STR;
  
  #define MSCAN_IDAR3_AC0_MASK          0x01U
  #define MSCAN_IDAR3_AC1_MASK          0x02U
  #define MSCAN_IDAR3_AC2_MASK          0x04U
  #define MSCAN_IDAR3_AC3_MASK          0x08U
  #define MSCAN_IDAR3_AC4_MASK          0x10U
  #define MSCAN_IDAR3_AC5_MASK          0x20U
  #define MSCAN_IDAR3_AC6_MASK          0x40U
  #define MSCAN_IDAR3_AC7_MASK          0x80U
  #define MSCAN_IDAR3_AC_MASK           0xFFU
  #define MSCAN_IDAR3_AC_BITNUM         0x00U
  #define MSCAN_IDAR3                   (*((volatile word *)0x0000F813))


  /*** MSCAN_IDMR0 - MSCAN Identifier Mask Register 0; 0x0000F814 ***/
  union {
    word Word;
  } MSCAN_IDMR0_STR;
  
  #define MSCAN_IDMR0_AM0_MASK          0x01U
  #define MSCAN_IDMR0_AM1_MASK          0x02U
  #define MSCAN_IDMR0_AM2_MASK          0x04U
  #define MSCAN_IDMR0_AM3_MASK          0x08U
  #define MSCAN_IDMR0_AM4_MASK          0x10U
  #define MSCAN_IDMR0_AM5_MASK          0x20U
  #define MSCAN_IDMR0_AM6_MASK          0x40U
  #define MSCAN_IDMR0_AM7_MASK          0x80U
  #define MSCAN_IDMR0_AM_MASK           0xFFU
  #define MSCAN_IDMR0_AM_BITNUM         0x00U
  #define MSCAN_IDMR0                   (*((volatile word *)0x0000F814))


  /*** MSCAN_IDMR1 - MSCAN Identifier Mask Register 1; 0x0000F815 ***/
  union {
    word Word;
  } MSCAN_IDMR1_STR;
  
  #define MSCAN_IDMR1_AM0_MASK          0x01U
  #define MSCAN_IDMR1_AM1_MASK          0x02U
  #define MSCAN_IDMR1_AM2_MASK          0x04U
  #define MSCAN_IDMR1_AM3_MASK          0x08U
  #define MSCAN_IDMR1_AM4_MASK          0x10U
  #define MSCAN_IDMR1_AM5_MASK          0x20U
  #define MSCAN_IDMR1_AM6_MASK          0x40U
  #define MSCAN_IDMR1_AM7_MASK          0x80U
  #define MSCAN_IDMR1_AM_MASK           0xFFU
  #define MSCAN_IDMR1_AM_BITNUM         0x00U
  #define MSCAN_IDMR1                   (*((volatile word *)0x0000F815))


  /*** MSCAN_IDMR2 - MSCAN Identifier Mask Register 2; 0x0000F816 ***/
  union {
    word Word;
  } MSCAN_IDMR2_STR;
  
  #define MSCAN_IDMR2_AM0_MASK          0x01U
  #define MSCAN_IDMR2_AM1_MASK          0x02U
  #define MSCAN_IDMR2_AM2_MASK          0x04U
  #define MSCAN_IDMR2_AM3_MASK          0x08U
  #define MSCAN_IDMR2_AM4_MASK          0x10U
  #define MSCAN_IDMR2_AM5_MASK          0x20U
  #define MSCAN_IDMR2_AM6_MASK          0x40U
  #define MSCAN_IDMR2_AM7_MASK          0x80U
  #define MSCAN_IDMR2_AM_MASK           0xFFU
  #define MSCAN_IDMR2_AM_BITNUM         0x00U
  #define MSCAN_IDMR2                   (*((volatile word *)0x0000F816))


  /*** MSCAN_IDMR3 - MSCAN Identifier Mask Register 3; 0x0000F817 ***/
  union {
    word Word;
  } MSCAN_IDMR3_STR;
  
  #define MSCAN_IDMR3_AM0_MASK          0x01U
  #define MSCAN_IDMR3_AM1_MASK          0x02U
  #define MSCAN_IDMR3_AM2_MASK          0x04U
  #define MSCAN_IDMR3_AM3_MASK          0x08U
  #define MSCAN_IDMR3_AM4_MASK          0x10U
  #define MSCAN_IDMR3_AM5_MASK          0x20U
  #define MSCAN_IDMR3_AM6_MASK          0x40U
  #define MSCAN_IDMR3_AM7_MASK          0x80U
  #define MSCAN_IDMR3_AM_MASK           0xFFU
  #define MSCAN_IDMR3_AM_BITNUM         0x00U
  #define MSCAN_IDMR3                   (*((volatile word *)0x0000F817))


  /*** MSCAN_IDAR4 - MSCAN Identifier Acceptance Register 4; 0x0000F818 ***/
  union {
    word Word;
  } MSCAN_IDAR4_STR;
  
  #define MSCAN_IDAR4_AC0_MASK          0x01U
  #define MSCAN_IDAR4_AC1_MASK          0x02U
  #define MSCAN_IDAR4_AC2_MASK          0x04U
  #define MSCAN_IDAR4_AC3_MASK          0x08U
  #define MSCAN_IDAR4_AC4_MASK          0x10U
  #define MSCAN_IDAR4_AC5_MASK          0x20U
  #define MSCAN_IDAR4_AC6_MASK          0x40U
  #define MSCAN_IDAR4_AC7_MASK          0x80U
  #define MSCAN_IDAR4_AC_MASK           0xFFU
  #define MSCAN_IDAR4_AC_BITNUM         0x00U
  #define MSCAN_IDAR4                   (*((volatile word *)0x0000F818))


  /*** MSCAN_IDAR5 - MSCAN Identifier Acceptance Register 5; 0x0000F819 ***/
  union {
    word Word;
  } MSCAN_IDAR5_STR;
  
  #define MSCAN_IDAR5_AC0_MASK          0x01U
  #define MSCAN_IDAR5_AC1_MASK          0x02U
  #define MSCAN_IDAR5_AC2_MASK          0x04U
  #define MSCAN_IDAR5_AC3_MASK          0x08U
  #define MSCAN_IDAR5_AC4_MASK          0x10U
  #define MSCAN_IDAR5_AC5_MASK          0x20U
  #define MSCAN_IDAR5_AC6_MASK          0x40U
  #define MSCAN_IDAR5_AC7_MASK          0x80U
  #define MSCAN_IDAR5_AC_MASK           0xFFU
  #define MSCAN_IDAR5_AC_BITNUM         0x00U
  #define MSCAN_IDAR5                   (*((volatile word *)0x0000F819))


  /*** MSCAN_IDAR6 - MSCAN Identifier Acceptance Register 6; 0x0000F81A ***/
  union {
    word Word;
  } MSCAN_IDAR6_STR;
  
  #define MSCAN_IDAR6_AC0_MASK          0x01U
  #define MSCAN_IDAR6_AC1_MASK          0x02U
  #define MSCAN_IDAR6_AC2_MASK          0x04U
  #define MSCAN_IDAR6_AC3_MASK          0x08U
  #define MSCAN_IDAR6_AC4_MASK          0x10U
  #define MSCAN_IDAR6_AC5_MASK          0x20U
  #define MSCAN_IDAR6_AC6_MASK          0x40U
  #define MSCAN_IDAR6_AC7_MASK          0x80U
  #define MSCAN_IDAR6_AC_MASK           0xFFU
  #define MSCAN_IDAR6_AC_BITNUM         0x00U
  #define MSCAN_IDAR6                   (*((volatile word *)0x0000F81A))


  /*** MSCAN_IDAR7 - MSCAN Identifier Acceptance Register 7; 0x0000F81B ***/
  union {
    word Word;
  } MSCAN_IDAR7_STR;
  
  #define MSCAN_IDAR7_AC0_MASK          0x01U
  #define MSCAN_IDAR7_AC1_MASK          0x02U
  #define MSCAN_IDAR7_AC2_MASK          0x04U
  #define MSCAN_IDAR7_AC3_MASK          0x08U
  #define MSCAN_IDAR7_AC4_MASK          0x10U
  #define MSCAN_IDAR7_AC5_MASK          0x20U
  #define MSCAN_IDAR7_AC6_MASK          0x40U
  #define MSCAN_IDAR7_AC7_MASK          0x80U
  #define MSCAN_IDAR7_AC_MASK           0xFFU
  #define MSCAN_IDAR7_AC_BITNUM         0x00U
  #define MSCAN_IDAR7                   (*((volatile word *)0x0000F81B))


  /*** MSCAN_IDMR4 - MSCAN Identifier Mask Register 4; 0x0000F81C ***/
  union {
    word Word;
  } MSCAN_IDMR4_STR;
  
  #define MSCAN_IDMR4_AM0_MASK          0x01U
  #define MSCAN_IDMR4_AM1_MASK          0x02U
  #define MSCAN_IDMR4_AM2_MASK          0x04U
  #define MSCAN_IDMR4_AM3_MASK          0x08U
  #define MSCAN_IDMR4_AM4_MASK          0x10U
  #define MSCAN_IDMR4_AM5_MASK          0x20U
  #define MSCAN_IDMR4_AM6_MASK          0x40U
  #define MSCAN_IDMR4_AM7_MASK          0x80U
  #define MSCAN_IDMR4_AM_MASK           0xFFU
  #define MSCAN_IDMR4_AM_BITNUM         0x00U
  #define MSCAN_IDMR4                   (*((volatile word *)0x0000F81C))


  /*** MSCAN_IDMR5 - MSCAN Identifier Mask Register 5; 0x0000F81D ***/
  union {
    word Word;
  } MSCAN_IDMR5_STR;
  
  #define MSCAN_IDMR5_AM0_MASK          0x01U
  #define MSCAN_IDMR5_AM1_MASK          0x02U
  #define MSCAN_IDMR5_AM2_MASK          0x04U
  #define MSCAN_IDMR5_AM3_MASK          0x08U
  #define MSCAN_IDMR5_AM4_MASK          0x10U
  #define MSCAN_IDMR5_AM5_MASK          0x20U
  #define MSCAN_IDMR5_AM6_MASK          0x40U
  #define MSCAN_IDMR5_AM7_MASK          0x80U
  #define MSCAN_IDMR5_AM_MASK           0xFFU
  #define MSCAN_IDMR5_AM_BITNUM         0x00U
  #define MSCAN_IDMR5                   (*((volatile word *)0x0000F81D))


  /*** MSCAN_IDMR6 - MSCAN Identifier Mask Register 6; 0x0000F81E ***/
  union {
    word Word;
  } MSCAN_IDMR6_STR;
  
  #define MSCAN_IDMR6_AM0_MASK          0x01U
  #define MSCAN_IDMR6_AM1_MASK          0x02U
  #define MSCAN_IDMR6_AM2_MASK          0x04U
  #define MSCAN_IDMR6_AM3_MASK          0x08U
  #define MSCAN_IDMR6_AM4_MASK          0x10U
  #define MSCAN_IDMR6_AM5_MASK          0x20U
  #define MSCAN_IDMR6_AM6_MASK          0x40U
  #define MSCAN_IDMR6_AM7_MASK          0x80U
  #define MSCAN_IDMR6_AM_MASK           0xFFU
  #define MSCAN_IDMR6_AM_BITNUM         0x00U
  #define MSCAN_IDMR6                   (*((volatile word *)0x0000F81E))


  /*** MSCAN_IDMR7 - MSCAN Identifier Mask Register 7; 0x0000F81F ***/
  union {
    word Word;
  } MSCAN_IDMR7_STR;
  
  #define MSCAN_IDMR7_AM0_MASK          0x01U
  #define MSCAN_IDMR7_AM1_MASK          0x02U
  #define MSCAN_IDMR7_AM2_MASK          0x04U
  #define MSCAN_IDMR7_AM3_MASK          0x08U
  #define MSCAN_IDMR7_AM4_MASK          0x10U
  #define MSCAN_IDMR7_AM5_MASK          0x20U
  #define MSCAN_IDMR7_AM6_MASK          0x40U
  #define MSCAN_IDMR7_AM7_MASK          0x80U
  #define MSCAN_IDMR7_AM_MASK           0xFFU
  #define MSCAN_IDMR7_AM_BITNUM         0x00U
  #define MSCAN_IDMR7                   (*((volatile word *)0x0000F81F))


} MSCAN_PRPH;

/******************************************
*** Peripheral MSCAN_RB
*******************************************/
typedef volatile struct {
  /*** MSCAN_RB_IDR0 - MSCAN Receive Buffer Identifier Register 0; 0x0000F820 ***/
  union {
    word Word;
  } MSCAN_RB_IDR0_STR;
  
  #define MSCAN_RB_IDR0_ID0_MASK        0x01U
  #define MSCAN_RB_IDR0_ID1_MASK        0x02U
  #define MSCAN_RB_IDR0_ID2_MASK        0x04U
  #define MSCAN_RB_IDR0_ID3_MASK        0x08U
  #define MSCAN_RB_IDR0_ID4_MASK        0x10U
  #define MSCAN_RB_IDR0_ID5_MASK        0x20U
  #define MSCAN_RB_IDR0_ID6_MASK        0x40U
  #define MSCAN_RB_IDR0_ID7_MASK        0x80U
  #define MSCAN_RB_IDR0_ID_MASK         0xFFU
  #define MSCAN_RB_IDR0_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR0                 (*((volatile word *)0x0000F820))


  /*** MSCAN_RB_IDR1 - MSCAN Receive Buffer Identifier Register 1; 0x0000F821 ***/
  union {
    word Word;
  } MSCAN_RB_IDR1_STR;
  
  #define MSCAN_RB_IDR1_ID0_MASK        0x01U
  #define MSCAN_RB_IDR1_ID1_MASK        0x02U
  #define MSCAN_RB_IDR1_ID2_MASK        0x04U
  #define MSCAN_RB_IDR1_ID3_MASK        0x08U
  #define MSCAN_RB_IDR1_ID4_MASK        0x10U
  #define MSCAN_RB_IDR1_ID5_MASK        0x20U
  #define MSCAN_RB_IDR1_ID6_MASK        0x40U
  #define MSCAN_RB_IDR1_ID7_MASK        0x80U
  #define MSCAN_RB_IDR1_ID_MASK         0xFFU
  #define MSCAN_RB_IDR1_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR1                 (*((volatile word *)0x0000F821))


  /*** MSCAN_RB_IDR2 - MSCAN Receive Buffer Identifier Register 2; 0x0000F822 ***/
  union {
    word Word;
  } MSCAN_RB_IDR2_STR;
  
  #define MSCAN_RB_IDR2_ID0_MASK        0x01U
  #define MSCAN_RB_IDR2_ID1_MASK        0x02U
  #define MSCAN_RB_IDR2_ID2_MASK        0x04U
  #define MSCAN_RB_IDR2_ID3_MASK        0x08U
  #define MSCAN_RB_IDR2_ID4_MASK        0x10U
  #define MSCAN_RB_IDR2_ID5_MASK        0x20U
  #define MSCAN_RB_IDR2_ID6_MASK        0x40U
  #define MSCAN_RB_IDR2_ID7_MASK        0x80U
  #define MSCAN_RB_IDR2_ID_MASK         0xFFU
  #define MSCAN_RB_IDR2_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR2                 (*((volatile word *)0x0000F822))


  /*** MSCAN_RB_IDR3 - MSCAN Receive Buffer Identifier Register 3; 0x0000F823 ***/
  union {
    word Word;
  } MSCAN_RB_IDR3_STR;
  
  #define MSCAN_RB_IDR3_ID0_MASK        0x01U
  #define MSCAN_RB_IDR3_ID1_MASK        0x02U
  #define MSCAN_RB_IDR3_ID2_MASK        0x04U
  #define MSCAN_RB_IDR3_ID3_MASK        0x08U
  #define MSCAN_RB_IDR3_ID4_MASK        0x10U
  #define MSCAN_RB_IDR3_ID5_MASK        0x20U
  #define MSCAN_RB_IDR3_ID6_MASK        0x40U
  #define MSCAN_RB_IDR3_ID7_MASK        0x80U
  #define MSCAN_RB_IDR3_ID_MASK         0xFFU
  #define MSCAN_RB_IDR3_ID_BITNUM       0x00U
  #define MSCAN_RB_IDR3                 (*((volatile word *)0x0000F823))


  /*** MSCAN_RB_DSR0 - MSCAN Receive Buffer Data Segment Register 0; 0x0000F824 ***/
  union {
    word Word;
  } MSCAN_RB_DSR0_STR;
  
  #define MSCAN_RB_DSR0_DB0_MASK        0x01U
  #define MSCAN_RB_DSR0_DB1_MASK        0x02U
  #define MSCAN_RB_DSR0_DB2_MASK        0x04U
  #define MSCAN_RB_DSR0_DB3_MASK        0x08U
  #define MSCAN_RB_DSR0_DB4_MASK        0x10U
  #define MSCAN_RB_DSR0_DB5_MASK        0x20U
  #define MSCAN_RB_DSR0_DB6_MASK        0x40U
  #define MSCAN_RB_DSR0_DB7_MASK        0x80U
  #define MSCAN_RB_DSR0_DB_MASK         0xFFU
  #define MSCAN_RB_DSR0_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR0                 (*((volatile word *)0x0000F824))


  /*** MSCAN_RB_DSR1 - MSCAN Receive Buffer Data Segment Register 1; 0x0000F825 ***/
  union {
    word Word;
  } MSCAN_RB_DSR1_STR;
  
  #define MSCAN_RB_DSR1_DB0_MASK        0x01U
  #define MSCAN_RB_DSR1_DB1_MASK        0x02U
  #define MSCAN_RB_DSR1_DB2_MASK        0x04U
  #define MSCAN_RB_DSR1_DB3_MASK        0x08U
  #define MSCAN_RB_DSR1_DB4_MASK        0x10U
  #define MSCAN_RB_DSR1_DB5_MASK        0x20U
  #define MSCAN_RB_DSR1_DB6_MASK        0x40U
  #define MSCAN_RB_DSR1_DB7_MASK        0x80U
  #define MSCAN_RB_DSR1_DB_MASK         0xFFU
  #define MSCAN_RB_DSR1_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR1                 (*((volatile word *)0x0000F825))


  /*** MSCAN_RB_DSR2 - MSCAN Receive Buffer Data Segment Register 2; 0x0000F826 ***/
  union {
    word Word;
  } MSCAN_RB_DSR2_STR;
  
  #define MSCAN_RB_DSR2_DB0_MASK        0x01U
  #define MSCAN_RB_DSR2_DB1_MASK        0x02U
  #define MSCAN_RB_DSR2_DB2_MASK        0x04U
  #define MSCAN_RB_DSR2_DB3_MASK        0x08U
  #define MSCAN_RB_DSR2_DB4_MASK        0x10U
  #define MSCAN_RB_DSR2_DB5_MASK        0x20U
  #define MSCAN_RB_DSR2_DB6_MASK        0x40U
  #define MSCAN_RB_DSR2_DB7_MASK        0x80U
  #define MSCAN_RB_DSR2_DB_MASK         0xFFU
  #define MSCAN_RB_DSR2_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR2                 (*((volatile word *)0x0000F826))


  /*** MSCAN_RB_DSR3 - MSCAN Receive Buffer Data Segment Register 3; 0x0000F827 ***/
  union {
    word Word;
  } MSCAN_RB_DSR3_STR;
  
  #define MSCAN_RB_DSR3_DB0_MASK        0x01U
  #define MSCAN_RB_DSR3_DB1_MASK        0x02U
  #define MSCAN_RB_DSR3_DB2_MASK        0x04U
  #define MSCAN_RB_DSR3_DB3_MASK        0x08U
  #define MSCAN_RB_DSR3_DB4_MASK        0x10U
  #define MSCAN_RB_DSR3_DB5_MASK        0x20U
  #define MSCAN_RB_DSR3_DB6_MASK        0x40U
  #define MSCAN_RB_DSR3_DB7_MASK        0x80U
  #define MSCAN_RB_DSR3_DB_MASK         0xFFU
  #define MSCAN_RB_DSR3_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR3                 (*((volatile word *)0x0000F827))


  /*** MSCAN_RB_DSR4 - MSCAN Receive Buffer Data Segment Register 4; 0x0000F828 ***/
  union {
    word Word;
  } MSCAN_RB_DSR4_STR;
  
  #define MSCAN_RB_DSR4_DB0_MASK        0x01U
  #define MSCAN_RB_DSR4_DB1_MASK        0x02U
  #define MSCAN_RB_DSR4_DB2_MASK        0x04U
  #define MSCAN_RB_DSR4_DB3_MASK        0x08U
  #define MSCAN_RB_DSR4_DB4_MASK        0x10U
  #define MSCAN_RB_DSR4_DB5_MASK        0x20U
  #define MSCAN_RB_DSR4_DB6_MASK        0x40U
  #define MSCAN_RB_DSR4_DB7_MASK        0x80U
  #define MSCAN_RB_DSR4_DB_MASK         0xFFU
  #define MSCAN_RB_DSR4_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR4                 (*((volatile word *)0x0000F828))


  /*** MSCAN_RB_DSR5 - MSCAN Receive Buffer Data Segment Register 5; 0x0000F829 ***/
  union {
    word Word;
  } MSCAN_RB_DSR5_STR;
  
  #define MSCAN_RB_DSR5_DB0_MASK        0x01U
  #define MSCAN_RB_DSR5_DB1_MASK        0x02U
  #define MSCAN_RB_DSR5_DB2_MASK        0x04U
  #define MSCAN_RB_DSR5_DB3_MASK        0x08U
  #define MSCAN_RB_DSR5_DB4_MASK        0x10U
  #define MSCAN_RB_DSR5_DB5_MASK        0x20U
  #define MSCAN_RB_DSR5_DB6_MASK        0x40U
  #define MSCAN_RB_DSR5_DB7_MASK        0x80U
  #define MSCAN_RB_DSR5_DB_MASK         0xFFU
  #define MSCAN_RB_DSR5_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR5                 (*((volatile word *)0x0000F829))


  /*** MSCAN_RB_DSR6 - MSCAN Receive Buffer Data Segment Register 6; 0x0000F82A ***/
  union {
    word Word;
  } MSCAN_RB_DSR6_STR;
  
  #define MSCAN_RB_DSR6_DB0_MASK        0x01U
  #define MSCAN_RB_DSR6_DB1_MASK        0x02U
  #define MSCAN_RB_DSR6_DB2_MASK        0x04U
  #define MSCAN_RB_DSR6_DB3_MASK        0x08U
  #define MSCAN_RB_DSR6_DB4_MASK        0x10U
  #define MSCAN_RB_DSR6_DB5_MASK        0x20U
  #define MSCAN_RB_DSR6_DB6_MASK        0x40U
  #define MSCAN_RB_DSR6_DB7_MASK        0x80U
  #define MSCAN_RB_DSR6_DB_MASK         0xFFU
  #define MSCAN_RB_DSR6_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR6                 (*((volatile word *)0x0000F82A))


  /*** MSCAN_RB_DSR7 - MSCAN Receive Buffer Data Segment Register 7; 0x0000F82B ***/
  union {
    word Word;
  } MSCAN_RB_DSR7_STR;
  
  #define MSCAN_RB_DSR7_DB0_MASK        0x01U
  #define MSCAN_RB_DSR7_DB1_MASK        0x02U
  #define MSCAN_RB_DSR7_DB2_MASK        0x04U
  #define MSCAN_RB_DSR7_DB3_MASK        0x08U
  #define MSCAN_RB_DSR7_DB4_MASK        0x10U
  #define MSCAN_RB_DSR7_DB5_MASK        0x20U
  #define MSCAN_RB_DSR7_DB6_MASK        0x40U
  #define MSCAN_RB_DSR7_DB7_MASK        0x80U
  #define MSCAN_RB_DSR7_DB_MASK         0xFFU
  #define MSCAN_RB_DSR7_DB_BITNUM       0x00U
  #define MSCAN_RB_DSR7                 (*((volatile word *)0x0000F82B))


  /*** MSCAN_RB_DLR - MSCAN Receive Buffer Data Length Register; 0x0000F82C ***/
  union {
    word Word;
  } MSCAN_RB_DLR_STR;
  
  #define MSCAN_RB_DLR_DLC0_MASK        0x01U
  #define MSCAN_RB_DLR_DLC1_MASK        0x02U
  #define MSCAN_RB_DLR_DLC2_MASK        0x04U
  #define MSCAN_RB_DLR_DLC3_MASK        0x08U
  #define MSCAN_RB_DLR_DLC_MASK         0x0FU
  #define MSCAN_RB_DLR_DLC_BITNUM       0x00U
  #define MSCAN_RB_DLR                  (*((volatile word *)0x0000F82C))


  word Reserved0[3];                   /* Reserved (unused) registers */

} MSCAN_RB_PRPH;

/******************************************
*** Peripheral MSCAN_TB
*******************************************/
typedef volatile struct {
  /*** MSCAN_TB_IDR0 - MSCAN Transmit Buffer Identifier Register 0; 0x0000F830 ***/
  union {
    word Word;
  } MSCAN_TB_IDR0_STR;
  
  #define MSCAN_TB_IDR0_ID0_MASK        0x01U
  #define MSCAN_TB_IDR0_ID1_MASK        0x02U
  #define MSCAN_TB_IDR0_ID2_MASK        0x04U
  #define MSCAN_TB_IDR0_ID3_MASK        0x08U
  #define MSCAN_TB_IDR0_ID4_MASK        0x10U
  #define MSCAN_TB_IDR0_ID5_MASK        0x20U
  #define MSCAN_TB_IDR0_ID6_MASK        0x40U
  #define MSCAN_TB_IDR0_ID7_MASK        0x80U
  #define MSCAN_TB_IDR0_ID_MASK         0xFFU
  #define MSCAN_TB_IDR0_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR0                 (*((volatile word *)0x0000F830))


  /*** MSCAN_TB_IDR1 - MSCAN Transmit Buffer Identifier Register 1; 0x0000F831 ***/
  union {
    word Word;
  } MSCAN_TB_IDR1_STR;
  
  #define MSCAN_TB_IDR1_ID0_MASK        0x01U
  #define MSCAN_TB_IDR1_ID1_MASK        0x02U
  #define MSCAN_TB_IDR1_ID2_MASK        0x04U
  #define MSCAN_TB_IDR1_ID3_MASK        0x08U
  #define MSCAN_TB_IDR1_ID4_MASK        0x10U
  #define MSCAN_TB_IDR1_ID5_MASK        0x20U
  #define MSCAN_TB_IDR1_ID6_MASK        0x40U
  #define MSCAN_TB_IDR1_ID7_MASK        0x80U
  #define MSCAN_TB_IDR1_ID_MASK         0xFFU
  #define MSCAN_TB_IDR1_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR1                 (*((volatile word *)0x0000F831))


  /*** MSCAN_TB_IDR2 - MSCAN Transmit Buffer Identifier Register 2; 0x0000F832 ***/
  union {
    word Word;
  } MSCAN_TB_IDR2_STR;
  
  #define MSCAN_TB_IDR2_ID0_MASK        0x01U
  #define MSCAN_TB_IDR2_ID1_MASK        0x02U
  #define MSCAN_TB_IDR2_ID2_MASK        0x04U
  #define MSCAN_TB_IDR2_ID3_MASK        0x08U
  #define MSCAN_TB_IDR2_ID4_MASK        0x10U
  #define MSCAN_TB_IDR2_ID5_MASK        0x20U
  #define MSCAN_TB_IDR2_ID6_MASK        0x40U
  #define MSCAN_TB_IDR2_ID7_MASK        0x80U
  #define MSCAN_TB_IDR2_ID_MASK         0xFFU
  #define MSCAN_TB_IDR2_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR2                 (*((volatile word *)0x0000F832))


  /*** MSCAN_TB_IDR3 - MSCAN Transmit Buffer Identifier Register 3; 0x0000F833 ***/
  union {
    word Word;
  } MSCAN_TB_IDR3_STR;
  
  #define MSCAN_TB_IDR3_ID0_MASK        0x01U
  #define MSCAN_TB_IDR3_ID1_MASK        0x02U
  #define MSCAN_TB_IDR3_ID2_MASK        0x04U
  #define MSCAN_TB_IDR3_ID3_MASK        0x08U
  #define MSCAN_TB_IDR3_ID4_MASK        0x10U
  #define MSCAN_TB_IDR3_ID5_MASK        0x20U
  #define MSCAN_TB_IDR3_ID6_MASK        0x40U
  #define MSCAN_TB_IDR3_ID7_MASK        0x80U
  #define MSCAN_TB_IDR3_ID_MASK         0xFFU
  #define MSCAN_TB_IDR3_ID_BITNUM       0x00U
  #define MSCAN_TB_IDR3                 (*((volatile word *)0x0000F833))


  /*** MSCAN_TB_DSR0 - MSCAN Transmit Buffer Data Segment Register 0; 0x0000F834 ***/
  union {
    word Word;
  } MSCAN_TB_DSR0_STR;
  
  #define MSCAN_TB_DSR0_DB0_MASK        0x01U
  #define MSCAN_TB_DSR0_DB1_MASK        0x02U
  #define MSCAN_TB_DSR0_DB2_MASK        0x04U
  #define MSCAN_TB_DSR0_DB3_MASK        0x08U
  #define MSCAN_TB_DSR0_DB4_MASK        0x10U
  #define MSCAN_TB_DSR0_DB5_MASK        0x20U
  #define MSCAN_TB_DSR0_DB6_MASK        0x40U
  #define MSCAN_TB_DSR0_DB7_MASK        0x80U
  #define MSCAN_TB_DSR0_DB_MASK         0xFFU
  #define MSCAN_TB_DSR0_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR0                 (*((volatile word *)0x0000F834))


  /*** MSCAN_TB_DSR1 - MSCAN Transmit Buffer Data Segment Register 1; 0x0000F835 ***/
  union {
    word Word;
  } MSCAN_TB_DSR1_STR;
  
  #define MSCAN_TB_DSR1_DB0_MASK        0x01U
  #define MSCAN_TB_DSR1_DB1_MASK        0x02U
  #define MSCAN_TB_DSR1_DB2_MASK        0x04U
  #define MSCAN_TB_DSR1_DB3_MASK        0x08U
  #define MSCAN_TB_DSR1_DB4_MASK        0x10U
  #define MSCAN_TB_DSR1_DB5_MASK        0x20U
  #define MSCAN_TB_DSR1_DB6_MASK        0x40U
  #define MSCAN_TB_DSR1_DB7_MASK        0x80U
  #define MSCAN_TB_DSR1_DB_MASK         0xFFU
  #define MSCAN_TB_DSR1_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR1                 (*((volatile word *)0x0000F835))


  /*** MSCAN_TB_DSR2 - MSCAN Transmit Buffer Data Segment Register 2; 0x0000F836 ***/
  union {
    word Word;
  } MSCAN_TB_DSR2_STR;
  
  #define MSCAN_TB_DSR2_DB0_MASK        0x01U
  #define MSCAN_TB_DSR2_DB1_MASK        0x02U
  #define MSCAN_TB_DSR2_DB2_MASK        0x04U
  #define MSCAN_TB_DSR2_DB3_MASK        0x08U
  #define MSCAN_TB_DSR2_DB4_MASK        0x10U
  #define MSCAN_TB_DSR2_DB5_MASK        0x20U
  #define MSCAN_TB_DSR2_DB6_MASK        0x40U
  #define MSCAN_TB_DSR2_DB7_MASK        0x80U
  #define MSCAN_TB_DSR2_DB_MASK         0xFFU
  #define MSCAN_TB_DSR2_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR2                 (*((volatile word *)0x0000F836))


  /*** MSCAN_TB_DSR3 - MSCAN Transmit Buffer Data Segment Register 3; 0x0000F837 ***/
  union {
    word Word;
  } MSCAN_TB_DSR3_STR;
  
  #define MSCAN_TB_DSR3_DB0_MASK        0x01U
  #define MSCAN_TB_DSR3_DB1_MASK        0x02U
  #define MSCAN_TB_DSR3_DB2_MASK        0x04U
  #define MSCAN_TB_DSR3_DB3_MASK        0x08U
  #define MSCAN_TB_DSR3_DB4_MASK        0x10U
  #define MSCAN_TB_DSR3_DB5_MASK        0x20U
  #define MSCAN_TB_DSR3_DB6_MASK        0x40U
  #define MSCAN_TB_DSR3_DB7_MASK        0x80U
  #define MSCAN_TB_DSR3_DB_MASK         0xFFU
  #define MSCAN_TB_DSR3_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR3                 (*((volatile word *)0x0000F837))


  /*** MSCAN_TB_DSR4 - MSCAN Transmit Buffer Data Segment Register 4; 0x0000F838 ***/
  union {
    word Word;
  } MSCAN_TB_DSR4_STR;
  
  #define MSCAN_TB_DSR4_DB0_MASK        0x01U
  #define MSCAN_TB_DSR4_DB1_MASK        0x02U
  #define MSCAN_TB_DSR4_DB2_MASK        0x04U
  #define MSCAN_TB_DSR4_DB3_MASK        0x08U
  #define MSCAN_TB_DSR4_DB4_MASK        0x10U
  #define MSCAN_TB_DSR4_DB5_MASK        0x20U
  #define MSCAN_TB_DSR4_DB6_MASK        0x40U
  #define MSCAN_TB_DSR4_DB7_MASK        0x80U
  #define MSCAN_TB_DSR4_DB_MASK         0xFFU
  #define MSCAN_TB_DSR4_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR4                 (*((volatile word *)0x0000F838))


  /*** MSCAN_TB_DSR5 - MSCAN Transmit Buffer Data Segment Register 5; 0x0000F839 ***/
  union {
    word Word;
  } MSCAN_TB_DSR5_STR;
  
  #define MSCAN_TB_DSR5_DB0_MASK        0x01U
  #define MSCAN_TB_DSR5_DB1_MASK        0x02U
  #define MSCAN_TB_DSR5_DB2_MASK        0x04U
  #define MSCAN_TB_DSR5_DB3_MASK        0x08U
  #define MSCAN_TB_DSR5_DB4_MASK        0x10U
  #define MSCAN_TB_DSR5_DB5_MASK        0x20U
  #define MSCAN_TB_DSR5_DB6_MASK        0x40U
  #define MSCAN_TB_DSR5_DB7_MASK        0x80U
  #define MSCAN_TB_DSR5_DB_MASK         0xFFU
  #define MSCAN_TB_DSR5_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR5                 (*((volatile word *)0x0000F839))


  /*** MSCAN_TB_DSR6 - MSCAN Transmit Buffer Data Segment Register 6; 0x0000F83A ***/
  union {
    word Word;
  } MSCAN_TB_DSR6_STR;
  
  #define MSCAN_TB_DSR6_DB0_MASK        0x01U
  #define MSCAN_TB_DSR6_DB1_MASK        0x02U
  #define MSCAN_TB_DSR6_DB2_MASK        0x04U
  #define MSCAN_TB_DSR6_DB3_MASK        0x08U
  #define MSCAN_TB_DSR6_DB4_MASK        0x10U
  #define MSCAN_TB_DSR6_DB5_MASK        0x20U
  #define MSCAN_TB_DSR6_DB6_MASK        0x40U
  #define MSCAN_TB_DSR6_DB7_MASK        0x80U
  #define MSCAN_TB_DSR6_DB_MASK         0xFFU
  #define MSCAN_TB_DSR6_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR6                 (*((volatile word *)0x0000F83A))


  /*** MSCAN_TB_DSR7 - MSCAN Transmit Buffer Data Segment Register 7; 0x0000F83B ***/
  union {
    word Word;
  } MSCAN_TB_DSR7_STR;
  
  #define MSCAN_TB_DSR7_DB0_MASK        0x01U
  #define MSCAN_TB_DSR7_DB1_MASK        0x02U
  #define MSCAN_TB_DSR7_DB2_MASK        0x04U
  #define MSCAN_TB_DSR7_DB3_MASK        0x08U
  #define MSCAN_TB_DSR7_DB4_MASK        0x10U
  #define MSCAN_TB_DSR7_DB5_MASK        0x20U
  #define MSCAN_TB_DSR7_DB6_MASK        0x40U
  #define MSCAN_TB_DSR7_DB7_MASK        0x80U
  #define MSCAN_TB_DSR7_DB_MASK         0xFFU
  #define MSCAN_TB_DSR7_DB_BITNUM       0x00U
  #define MSCAN_TB_DSR7                 (*((volatile word *)0x0000F83B))


  /*** MSCAN_TB_DLR - MSCAN Transmit Buffer Data Length Register; 0x0000F83C ***/
  union {
    word Word;
  } MSCAN_TB_DLR_STR;
  
  #define MSCAN_TB_DLR_DLC0_MASK        0x01U
  #define MSCAN_TB_DLR_DLC1_MASK        0x02U
  #define MSCAN_TB_DLR_DLC2_MASK        0x04U
  #define MSCAN_TB_DLR_DLC3_MASK        0x08U
  #define MSCAN_TB_DLR_DLC_MASK         0x0FU
  #define MSCAN_TB_DLR_DLC_BITNUM       0x00U
  #define MSCAN_TB_DLR                  (*((volatile word *)0x0000F83C))


  /*** MSCAN_TB_TBPR - MSCAN Transmit Buffer Priority Register; 0x0000F83D ***/
  union {
    word Word;
  } MSCAN_TB_TBPR_STR;
  
  #define MSCAN_TB_TBPR_PRIO0_MASK      0x01U
  #define MSCAN_TB_TBPR_PRIO1_MASK      0x02U
  #define MSCAN_TB_TBPR_PRIO2_MASK      0x04U
  #define MSCAN_TB_TBPR_PRIO3_MASK      0x08U
  #define MSCAN_TB_TBPR_PRIO4_MASK      0x10U
  #define MSCAN_TB_TBPR_PRIO5_MASK      0x20U
  #define MSCAN_TB_TBPR_PRIO6_MASK      0x40U
  #define MSCAN_TB_TBPR_PRIO7_MASK      0x80U
  #define MSCAN_TB_TBPR_PRIO_MASK       0xFFU
  #define MSCAN_TB_TBPR_PRIO_BITNUM     0x00U
  #define MSCAN_TB_TBPR                 (*((volatile word *)0x0000F83D))


  /*** MSCAN_TB_TSRH - MSCAN Transmit Buffer Time Stamp Register; 0x0000F83E ***/
  union {
    word Word;
  } MSCAN_TB_TSRH_STR;
  
  #define MSCAN_TB_TSRH_TSR0_MASK       0x01U
  #define MSCAN_TB_TSRH_TSR1_MASK       0x02U
  #define MSCAN_TB_TSRH_TSR2_MASK       0x04U
  #define MSCAN_TB_TSRH_TSR3_MASK       0x08U
  #define MSCAN_TB_TSRH_TSR4_MASK       0x10U
  #define MSCAN_TB_TSRH_TSR5_MASK       0x20U
  #define MSCAN_TB_TSRH_TSR6_MASK       0x40U
  #define MSCAN_TB_TSRH_TSR7_MASK       0x80U
  #define MSCAN_TB_TSRH_TSR_MASK        0xFFU
  #define MSCAN_TB_TSRH_TSR_BITNUM      0x00U
  #define MSCAN_TB_TSRH                 (*((volatile word *)0x0000F83E))


  /*** MSCAN_TB_TSRL - MSCAN Transmit Buffer Time Stamp Register; 0x0000F83F ***/
  union {
    word Word;
  } MSCAN_TB_TSRL_STR;
  
  #define MSCAN_TB_TSRL_TSR0_MASK       0x01U
  #define MSCAN_TB_TSRL_TSR1_MASK       0x02U
  #define MSCAN_TB_TSRL_TSR2_MASK       0x04U
  #define MSCAN_TB_TSRL_TSR3_MASK       0x08U
  #define MSCAN_TB_TSRL_TSR4_MASK       0x10U
  #define MSCAN_TB_TSRL_TSR5_MASK       0x20U
  #define MSCAN_TB_TSRL_TSR6_MASK       0x40U
  #define MSCAN_TB_TSRL_TSR7_MASK       0x80U
  #define MSCAN_TB_TSRL_TSR_MASK        0xFFU
  #define MSCAN_TB_TSRL_TSR_BITNUM      0x00U
  #define MSCAN_TB_TSRL                 (*((volatile word *)0x0000F83F))


} MSCAN_TB_PRPH;



#endif
/* __IO_Map_H */

/*
** ###################################################################
**
**     This file was created by Processor Expert 3.00 [04.35]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
